// Code generated by protoc-gen-go.
// source: EntityTags.proto
// DO NOT EDIT!

package BlitzMessage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"


// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type EntityType int32

const (
	EntityType_ETUnknown  EntityType = 0
	EntityType_ETUser     EntityType = 1
	EntityType_ETFeedPost EntityType = 2
)

var EntityType_name = map[int32]string{
	0: "ETUnknown",
	1: "ETUser",
	2: "ETFeedPost",
}
var EntityType_value = map[string]int32{
	"ETUnknown":  0,
	"ETUser":     1,
	"ETFeedPost": 2,
}

func (x EntityType) Enum() *EntityType {
	p := new(EntityType)
	*p = x
	return p
}
func (x EntityType) String() string {
	return proto.EnumName(EntityType_name, int32(x))
}
func (x *EntityType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EntityType_value, data, "EntityType")
	if err != nil {
		return err
	}
	*x = EntityType(value)
	return nil
}
func (EntityType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type EntityTag struct {
	TagName          *string `protobuf:"bytes,1,opt,name=tagName" json:"tagName,omitempty"`
	UserHasTagged    *bool   `protobuf:"varint,2,opt,name=userHasTagged" json:"userHasTagged,omitempty"`
	TagCount         *int32  `protobuf:"varint,3,opt,name=tagCount" json:"tagCount,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *EntityTag) Reset()                    { *m = EntityTag{} }
func (m *EntityTag) String() string            { return proto.CompactTextString(m) }
func (*EntityTag) ProtoMessage()               {}
func (*EntityTag) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *EntityTag) GetTagName() string {
	if m != nil && m.TagName != nil {
		return *m.TagName
	}
	return ""
}

func (m *EntityTag) GetUserHasTagged() bool {
	if m != nil && m.UserHasTagged != nil {
		return *m.UserHasTagged
	}
	return false
}

func (m *EntityTag) GetTagCount() int32 {
	if m != nil && m.TagCount != nil {
		return *m.TagCount
	}
	return 0
}

type EntityTagList struct {
	EntityID         *string      `protobuf:"bytes,1,opt,name=entityID" json:"entityID,omitempty"`
	EntityType       *EntityType  `protobuf:"varint,2,opt,name=entityType,enum=BlitzMessage.EntityType" json:"entityType,omitempty"`
	EntityTags       []*EntityTag `protobuf:"bytes,3,rep,name=entityTags" json:"entityTags,omitempty"`
	XXX_unrecognized []byte       `json:"-"`
}

func (m *EntityTagList) Reset()                    { *m = EntityTagList{} }
func (m *EntityTagList) String() string            { return proto.CompactTextString(m) }
func (*EntityTagList) ProtoMessage()               {}
func (*EntityTagList) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *EntityTagList) GetEntityID() string {
	if m != nil && m.EntityID != nil {
		return *m.EntityID
	}
	return ""
}

func (m *EntityTagList) GetEntityType() EntityType {
	if m != nil && m.EntityType != nil {
		return *m.EntityType
	}
	return EntityType_ETUnknown
}

func (m *EntityTagList) GetEntityTags() []*EntityTag {
	if m != nil {
		return m.EntityTags
	}
	return nil
}

func init() {
	proto.RegisterType((*EntityTag)(nil), "BlitzMessage.EntityTag")
	proto.RegisterType((*EntityTagList)(nil), "BlitzMessage.EntityTagList")
	proto.RegisterEnum("BlitzMessage.EntityType", EntityType_name, EntityType_value)
}

func init() { proto.RegisterFile("EntityTags.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 277 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0x8e, 0xcd, 0x4a, 0xc3, 0x40,
	0x14, 0x85, 0x3b, 0x09, 0x6a, 0x73, 0x35, 0x35, 0x0c, 0x88, 0x43, 0xdd, 0x84, 0xae, 0x82, 0x3f,
	0x11, 0xba, 0x71, 0x97, 0x45, 0x74, 0x44, 0x41, 0xc5, 0xc5, 0xf4, 0x01, 0xa6, 0xc9, 0x65, 0x8c,
	0xda, 0x4c, 0x98, 0x99, 0x2a, 0x15, 0x1f, 0xc0, 0xe7, 0xcb, 0x13, 0x49, 0x5b, 0x09, 0x15, 0xba,
	0x3d, 0xf7, 0x3b, 0xdf, 0xb9, 0x10, 0xf1, 0xda, 0x55, 0x6e, 0x21, 0xa4, 0xb2, 0x69, 0x63, 0xb4,
	0xd3, 0xf4, 0x20, 0x7f, 0xaf, 0xdc, 0xd7, 0x23, 0x5a, 0x2b, 0x15, 0x0e, 0x4f, 0xf4, 0xf4, 0x15,
	0x0b, 0x57, 0x7d, 0x60, 0x71, 0x51, 0xa2, 0x2d, 0x4c, 0xd5, 0x38, 0x6d, 0xd6, 0xe8, 0x88, 0x43,
	0xd0, 0xd5, 0xe9, 0x21, 0xec, 0x39, 0xa9, 0x9e, 0xe4, 0x0c, 0x19, 0x89, 0x49, 0x12, 0xd0, 0x23,
	0x08, 0xe7, 0x16, 0xcd, 0x9d, 0xb4, 0x42, 0x2a, 0x85, 0x25, 0xf3, 0x62, 0x92, 0xf4, 0x69, 0x04,
	0x7d, 0x27, 0xd5, 0xb5, 0x9e, 0xd7, 0x8e, 0xf9, 0x31, 0x49, 0x76, 0x46, 0xdf, 0x10, 0x76, 0x9a,
	0x87, 0xca, 0xba, 0x25, 0x82, 0xab, 0xe0, 0xfe, 0xe6, 0xcf, 0x75, 0x0e, 0xb0, 0x4e, 0xc4, 0xa2,
	0xc1, 0x95, 0x68, 0x30, 0x66, 0xe9, 0xe6, 0xa7, 0x29, 0xef, 0xee, 0xf4, 0xac, 0xa3, 0xa5, 0xb2,
	0xcc, 0x8f, 0xfd, 0x64, 0x7f, 0x7c, 0xbc, 0x95, 0x96, 0xea, 0xf4, 0x0a, 0x60, 0xa3, 0x1a, 0x42,
	0xc0, 0xc5, 0xa4, 0x7e, 0xab, 0xf5, 0x67, 0x1d, 0xf5, 0x28, 0xc0, 0x2e, 0x17, 0x13, 0x8b, 0x26,
	0x22, 0x74, 0x00, 0xc0, 0xc5, 0x2d, 0x62, 0xf9, 0xac, 0xad, 0x8b, 0xbc, 0xfc, 0xb2, 0xcd, 0x3c,
	0xe8, 0xb5, 0x99, 0x4f, 0x49, 0xde, 0x66, 0x1e, 0x23, 0x30, 0x2c, 0xf4, 0x2c, 0x9d, 0x2e, 0x67,
	0x5e, 0xd0, 0xe0, 0xbf, 0xc1, 0x1f, 0x42, 0x7e, 0x03, 0x00, 0x00, 0xff, 0xff, 0x41, 0x91, 0xce,
	0xa2, 0x6c, 0x01, 0x00, 0x00,
}
