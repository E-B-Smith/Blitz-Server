// Code generated by protoc-gen-go.
// source: Payments.proto
// DO NOT EDIT!

package BlitzMessage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"


// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CardStatus int32

const (
	CardStatus_CSUnknown  CardStatus = 0
	CardStatus_CSDefault  CardStatus = 1
	CardStatus_CSStandard CardStatus = 2
	CardStatus_CSDeleted  CardStatus = 3
)

var CardStatus_name = map[int32]string{
	0: "CSUnknown",
	1: "CSDefault",
	2: "CSStandard",
	3: "CSDeleted",
}
var CardStatus_value = map[string]int32{
	"CSUnknown":  0,
	"CSDefault":  1,
	"CSStandard": 2,
	"CSDeleted":  3,
}

func (x CardStatus) Enum() *CardStatus {
	p := new(CardStatus)
	*p = x
	return p
}
func (x CardStatus) String() string {
	return proto.EnumName(CardStatus_name, int32(x))
}
func (x *CardStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CardStatus_value, data, "CardStatus")
	if err != nil {
		return err
	}
	*x = CardStatus(value)
	return nil
}
func (CardStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

type ChargeStatus int32

const (
	ChargeStatus_ChargeUnknown   ChargeStatus = 0
	ChargeStatus_CSDeclined      ChargeStatus = 1
	ChargeStatus_CSPreauthorized ChargeStatus = 2
	ChargeStatus_CSCharged       ChargeStatus = 3
)

var ChargeStatus_name = map[int32]string{
	0: "ChargeUnknown",
	1: "CSDeclined",
	2: "CSPreauthorized",
	3: "CSCharged",
}
var ChargeStatus_value = map[string]int32{
	"ChargeUnknown":   0,
	"CSDeclined":      1,
	"CSPreauthorized": 2,
	"CSCharged":       3,
}

func (x ChargeStatus) Enum() *ChargeStatus {
	p := new(ChargeStatus)
	*p = x
	return p
}
func (x ChargeStatus) String() string {
	return proto.EnumName(ChargeStatus_name, int32(x))
}
func (x *ChargeStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChargeStatus_value, data, "ChargeStatus")
	if err != nil {
		return err
	}
	*x = ChargeStatus(value)
	return nil
}
func (ChargeStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

type CardInfo struct {
	CardStatus       *CardStatus `protobuf:"varint,1,opt,name=cardStatus,enum=BlitzMessage.CardStatus" json:"cardStatus,omitempty"`
	CardHolderName   *string     `protobuf:"bytes,2,opt,name=cardHolderName" json:"cardHolderName,omitempty"`
	MemoText         *string     `protobuf:"bytes,3,opt,name=memoText" json:"memoText,omitempty"`
	Brand            *string     `protobuf:"bytes,4,opt,name=brand" json:"brand,omitempty"`
	Last4            *string     `protobuf:"bytes,5,opt,name=last4" json:"last4,omitempty"`
	ExpireMonth      *int32      `protobuf:"varint,6,opt,name=expireMonth" json:"expireMonth,omitempty"`
	ExpireYear       *int32      `protobuf:"varint,7,opt,name=expireYear" json:"expireYear,omitempty"`
	Token            *string     `protobuf:"bytes,8,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CardInfo) Reset()                    { *m = CardInfo{} }
func (m *CardInfo) String() string            { return proto.CompactTextString(m) }
func (*CardInfo) ProtoMessage()               {}
func (*CardInfo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *CardInfo) GetCardStatus() CardStatus {
	if m != nil && m.CardStatus != nil {
		return *m.CardStatus
	}
	return CardStatus_CSUnknown
}

func (m *CardInfo) GetCardHolderName() string {
	if m != nil && m.CardHolderName != nil {
		return *m.CardHolderName
	}
	return ""
}

func (m *CardInfo) GetMemoText() string {
	if m != nil && m.MemoText != nil {
		return *m.MemoText
	}
	return ""
}

func (m *CardInfo) GetBrand() string {
	if m != nil && m.Brand != nil {
		return *m.Brand
	}
	return ""
}

func (m *CardInfo) GetLast4() string {
	if m != nil && m.Last4 != nil {
		return *m.Last4
	}
	return ""
}

func (m *CardInfo) GetExpireMonth() int32 {
	if m != nil && m.ExpireMonth != nil {
		return *m.ExpireMonth
	}
	return 0
}

func (m *CardInfo) GetExpireYear() int32 {
	if m != nil && m.ExpireYear != nil {
		return *m.ExpireYear
	}
	return 0
}

func (m *CardInfo) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

type UserCardInfo struct {
	UserID           *string     `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	CardInfo         []*CardInfo `protobuf:"bytes,2,rep,name=cardInfo" json:"cardInfo,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *UserCardInfo) Reset()                    { *m = UserCardInfo{} }
func (m *UserCardInfo) String() string            { return proto.CompactTextString(m) }
func (*UserCardInfo) ProtoMessage()               {}
func (*UserCardInfo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *UserCardInfo) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *UserCardInfo) GetCardInfo() []*CardInfo {
	if m != nil {
		return m.CardInfo
	}
	return nil
}

type Charge struct {
	ChargeID         *string       `protobuf:"bytes,1,opt,name=chargeID" json:"chargeID,omitempty"`
	Timestamp        *Timestamp    `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
	ChargeStatus     *ChargeStatus `protobuf:"varint,3,opt,name=chargeStatus,enum=BlitzMessage.ChargeStatus" json:"chargeStatus,omitempty"`
	PayerID          *string       `protobuf:"bytes,4,opt,name=payerID" json:"payerID,omitempty"`
	PayeeID          *string       `protobuf:"bytes,5,opt,name=payeeID" json:"payeeID,omitempty"`
	ConversationID   *string       `protobuf:"bytes,6,opt,name=conversationID" json:"conversationID,omitempty"`
	MemoText         *string       `protobuf:"bytes,7,opt,name=memoText" json:"memoText,omitempty"`
	Amount           *string       `protobuf:"bytes,8,opt,name=amount" json:"amount,omitempty"`
	Currency         *string       `protobuf:"bytes,9,opt,name=currency" json:"currency,omitempty"`
	ProcessorReason  *string       `protobuf:"bytes,10,opt,name=processorReason" json:"processorReason,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *Charge) Reset()                    { *m = Charge{} }
func (m *Charge) String() string            { return proto.CompactTextString(m) }
func (*Charge) ProtoMessage()               {}
func (*Charge) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *Charge) GetChargeID() string {
	if m != nil && m.ChargeID != nil {
		return *m.ChargeID
	}
	return ""
}

func (m *Charge) GetTimestamp() *Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Charge) GetChargeStatus() ChargeStatus {
	if m != nil && m.ChargeStatus != nil {
		return *m.ChargeStatus
	}
	return ChargeStatus_ChargeUnknown
}

func (m *Charge) GetPayerID() string {
	if m != nil && m.PayerID != nil {
		return *m.PayerID
	}
	return ""
}

func (m *Charge) GetPayeeID() string {
	if m != nil && m.PayeeID != nil {
		return *m.PayeeID
	}
	return ""
}

func (m *Charge) GetConversationID() string {
	if m != nil && m.ConversationID != nil {
		return *m.ConversationID
	}
	return ""
}

func (m *Charge) GetMemoText() string {
	if m != nil && m.MemoText != nil {
		return *m.MemoText
	}
	return ""
}

func (m *Charge) GetAmount() string {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return ""
}

func (m *Charge) GetCurrency() string {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return ""
}

func (m *Charge) GetProcessorReason() string {
	if m != nil && m.ProcessorReason != nil {
		return *m.ProcessorReason
	}
	return ""
}

func init() {
	proto.RegisterType((*CardInfo)(nil), "BlitzMessage.CardInfo")
	proto.RegisterType((*UserCardInfo)(nil), "BlitzMessage.UserCardInfo")
	proto.RegisterType((*Charge)(nil), "BlitzMessage.Charge")
	proto.RegisterEnum("BlitzMessage.CardStatus", CardStatus_name, CardStatus_value)
	proto.RegisterEnum("BlitzMessage.ChargeStatus", ChargeStatus_name, ChargeStatus_value)
}

var fileDescriptor4 = []byte{
	// 490 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x52, 0x4d, 0x73, 0xda, 0x30,
	0x10, 0x8d, 0xa0, 0x7c, 0x2d, 0x9f, 0x55, 0x67, 0x12, 0x0d, 0xbd, 0x74, 0x38, 0x31, 0x4c, 0x4b,
	0x3b, 0x4c, 0xcf, 0x39, 0x60, 0x0e, 0xe1, 0x90, 0x4e, 0xa6, 0xc0, 0xa1, 0x47, 0x21, 0x6f, 0x82,
	0x1b, 0x5b, 0xf2, 0x48, 0x72, 0x1a, 0xf2, 0x0b, 0xfa, 0x93, 0xfa, 0x3b, 0xf2, 0x87, 0x5a, 0x59,
	0x06, 0x0a, 0xc9, 0x4d, 0xfb, 0x76, 0xdf, 0xdb, 0xb7, 0xcf, 0x86, 0xce, 0x0d, 0xdf, 0x26, 0x28,
	0xad, 0x19, 0xa7, 0x5a, 0x59, 0x45, 0x5b, 0xd3, 0x38, 0xb2, 0x4f, 0xd7, 0x68, 0x0c, 0xbf, 0xc3,
	0xfe, 0x7b, 0xb5, 0xfe, 0x89, 0xc2, 0x46, 0x0f, 0x28, 0x3e, 0x85, 0x68, 0x84, 0x8e, 0x52, 0xab,
	0x74, 0x31, 0xda, 0x6f, 0x2e, 0xb7, 0x29, 0xee, 0x78, 0x83, 0x3f, 0x04, 0xea, 0x01, 0xd7, 0xe1,
	0x5c, 0xde, 0x2a, 0xfa, 0x11, 0x40, 0xb8, 0xf7, 0xc2, 0x72, 0x9b, 0x19, 0x46, 0x3e, 0x90, 0x61,
	0x67, 0xc2, 0xc6, 0xc7, 0xca, 0xe3, 0xe0, 0xd0, 0xa7, 0xe7, 0xd0, 0xc9, 0xa7, 0xaf, 0x54, 0x1c,
	0xa2, 0xfe, 0xc6, 0x13, 0x64, 0x25, 0xc7, 0x68, 0xd0, 0x1e, 0xd4, 0x13, 0x4c, 0xd4, 0x12, 0x1f,
	0x2d, 0x2b, 0x7b, 0xa4, 0x0d, 0x95, 0xb5, 0xe6, 0x32, 0x64, 0x6f, 0xf6, 0x65, 0xcc, 0x8d, 0xfd,
	0xca, 0x2a, 0xbe, 0x7c, 0x07, 0x4d, 0x7c, 0x4c, 0x23, 0x8d, 0xd7, 0x4a, 0xda, 0x0d, 0xab, 0x3a,
	0xb0, 0x42, 0x29, 0x40, 0x01, 0xfe, 0x40, 0xae, 0x59, 0xcd, 0x63, 0x8e, 0x67, 0xd5, 0x3d, 0x4a,
	0x56, 0xcf, 0x79, 0x83, 0x2b, 0x68, 0xad, 0x0c, 0xea, 0x83, 0xfb, 0x0e, 0x54, 0x33, 0x57, 0xcf,
	0x67, 0xde, 0x79, 0x83, 0x0e, 0xa1, 0x2e, 0x76, 0x3d, 0xe7, 0xac, 0x3c, 0x6c, 0x4e, 0xce, 0x5f,
	0xdf, 0x92, 0x77, 0x07, 0x7f, 0x09, 0x54, 0x83, 0x0d, 0xd7, 0x77, 0x98, 0x9b, 0x17, 0xfe, 0x75,
	0x90, 0x19, 0x41, 0xc3, 0x46, 0x09, 0x1a, 0xcb, 0x93, 0xd4, 0x5f, 0xd8, 0x9c, 0x5c, 0x9c, 0xea,
	0x2c, 0xf7, 0x6d, 0xfa, 0x05, 0x5a, 0x05, 0x7b, 0x17, 0x61, 0xd9, 0x47, 0xd8, 0x7f, 0xb1, 0xf6,
	0x68, 0x82, 0x76, 0xa1, 0x96, 0xf2, 0xad, 0x77, 0x5d, 0x84, 0xb3, 0x03, 0xf2, 0xfd, 0x45, 0x3c,
	0x79, 0xcc, 0x4a, 0x3e, 0xa0, 0x36, 0xdc, 0x46, 0x4a, 0x3a, 0xbc, 0xfa, 0x2a, 0xe6, 0x9a, 0x47,
	0x5c, 0x00, 0x3c, 0x51, 0x99, 0xb4, 0x45, 0x40, 0xfe, 0x96, 0x4c, 0x6b, 0x94, 0x62, 0xcb, 0x1a,
	0x1e, 0xb9, 0x80, 0xae, 0xfb, 0xec, 0xc2, 0x19, 0x51, 0xfa, 0x3b, 0x72, 0xa3, 0x24, 0x83, 0xbc,
	0x31, 0x9a, 0x03, 0x1c, 0x7d, 0xd9, 0x36, 0x34, 0x82, 0xc5, 0x4a, 0xde, 0x4b, 0xf5, 0x4b, 0xf6,
	0xce, 0x8a, 0x72, 0x86, 0xb7, 0x3c, 0x8b, 0x6d, 0x8f, 0xb8, 0x35, 0x10, 0x2c, 0xdc, 0xa4, 0x0c,
	0x1d, 0xa3, 0x57, 0xda, 0xb7, 0x63, 0xb4, 0x18, 0xf6, 0xca, 0xa3, 0x15, 0xb4, 0x4e, 0x2e, 0x7c,
	0x0b, 0xed, 0xa2, 0xfe, 0x2f, 0xe8, 0x15, 0x66, 0x28, 0xe2, 0x48, 0x3a, 0x0a, 0x71, 0x7f, 0x40,
	0x37, 0x58, 0xdc, 0x68, 0xe4, 0x99, 0xdd, 0x28, 0x1d, 0x3d, 0xe1, 0x41, 0xb6, 0x60, 0x3a, 0xd9,
	0xe9, 0xe7, 0xe7, 0xcb, 0x12, 0x9c, 0x3d, 0x5f, 0x96, 0x29, 0x99, 0xba, 0x27, 0x23, 0xd0, 0x17,
	0x2a, 0x19, 0xaf, 0xf3, 0x64, 0x37, 0xa8, 0xf1, 0x24, 0xe3, 0xdf, 0x84, 0xfc, 0x0b, 0x00, 0x00,
	0xff, 0xff, 0x76, 0x59, 0x13, 0x4a, 0x22, 0x03, 0x00, 0x00,
}
