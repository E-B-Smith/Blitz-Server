// Code generated by protoc-gen-go.
// source: Payments.proto
// DO NOT EDIT!

package BlitzMessage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"


// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CardStatus int32

const (
	CardStatus_CSUnknown  CardStatus = 0
	CardStatus_CSDefault  CardStatus = 1
	CardStatus_CSStandard CardStatus = 2
	CardStatus_CSDeleted  CardStatus = 3
)

var CardStatus_name = map[int32]string{
	0: "CSUnknown",
	1: "CSDefault",
	2: "CSStandard",
	3: "CSDeleted",
}
var CardStatus_value = map[string]int32{
	"CSUnknown":  0,
	"CSDefault":  1,
	"CSStandard": 2,
	"CSDeleted":  3,
}

func (x CardStatus) Enum() *CardStatus {
	p := new(CardStatus)
	*p = x
	return p
}
func (x CardStatus) String() string {
	return proto.EnumName(CardStatus_name, int32(x))
}
func (x *CardStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CardStatus_value, data, "CardStatus")
	if err != nil {
		return err
	}
	*x = CardStatus(value)
	return nil
}
func (CardStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

type PaymentStatus int32

const (
	PaymentStatus_PSUnknown       PaymentStatus = 0
	PaymentStatus_PSNotAuthorized PaymentStatus = 1
	PaymentStatus_PSAccepted      PaymentStatus = 2
)

var PaymentStatus_name = map[int32]string{
	0: "PSUnknown",
	1: "PSNotAuthorized",
	2: "PSAccepted",
}
var PaymentStatus_value = map[string]int32{
	"PSUnknown":       0,
	"PSNotAuthorized": 1,
	"PSAccepted":      2,
}

func (x PaymentStatus) Enum() *PaymentStatus {
	p := new(PaymentStatus)
	*p = x
	return p
}
func (x PaymentStatus) String() string {
	return proto.EnumName(PaymentStatus_name, int32(x))
}
func (x *PaymentStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PaymentStatus_value, data, "PaymentStatus")
	if err != nil {
		return err
	}
	*x = PaymentStatus(value)
	return nil
}
func (PaymentStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

type CardInfo struct {
	CardStatus       *CardStatus `protobuf:"varint,1,opt,name=cardStatus,enum=BlitzMessage.CardStatus" json:"cardStatus,omitempty"`
	CardHolderName   *string     `protobuf:"bytes,2,opt,name=cardHolderName" json:"cardHolderName,omitempty"`
	MemoText         *string     `protobuf:"bytes,3,opt,name=memoText" json:"memoText,omitempty"`
	Brand            *string     `protobuf:"bytes,4,opt,name=brand" json:"brand,omitempty"`
	Last4            *string     `protobuf:"bytes,5,opt,name=last4" json:"last4,omitempty"`
	ExpireMonth      *int32      `protobuf:"varint,6,opt,name=expireMonth" json:"expireMonth,omitempty"`
	ExpireYear       *int32      `protobuf:"varint,7,opt,name=expireYear" json:"expireYear,omitempty"`
	Token            *string     `protobuf:"bytes,8,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CardInfo) Reset()                    { *m = CardInfo{} }
func (m *CardInfo) String() string            { return proto.CompactTextString(m) }
func (*CardInfo) ProtoMessage()               {}
func (*CardInfo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *CardInfo) GetCardStatus() CardStatus {
	if m != nil && m.CardStatus != nil {
		return *m.CardStatus
	}
	return CardStatus_CSUnknown
}

func (m *CardInfo) GetCardHolderName() string {
	if m != nil && m.CardHolderName != nil {
		return *m.CardHolderName
	}
	return ""
}

func (m *CardInfo) GetMemoText() string {
	if m != nil && m.MemoText != nil {
		return *m.MemoText
	}
	return ""
}

func (m *CardInfo) GetBrand() string {
	if m != nil && m.Brand != nil {
		return *m.Brand
	}
	return ""
}

func (m *CardInfo) GetLast4() string {
	if m != nil && m.Last4 != nil {
		return *m.Last4
	}
	return ""
}

func (m *CardInfo) GetExpireMonth() int32 {
	if m != nil && m.ExpireMonth != nil {
		return *m.ExpireMonth
	}
	return 0
}

func (m *CardInfo) GetExpireYear() int32 {
	if m != nil && m.ExpireYear != nil {
		return *m.ExpireYear
	}
	return 0
}

func (m *CardInfo) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

type UserCardInfo struct {
	UserID           *string     `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	CardInfo         []*CardInfo `protobuf:"bytes,2,rep,name=cardInfo" json:"cardInfo,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *UserCardInfo) Reset()                    { *m = UserCardInfo{} }
func (m *UserCardInfo) String() string            { return proto.CompactTextString(m) }
func (*UserCardInfo) ProtoMessage()               {}
func (*UserCardInfo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *UserCardInfo) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *UserCardInfo) GetCardInfo() []*CardInfo {
	if m != nil {
		return m.CardInfo
	}
	return nil
}

type Payment struct {
	PayerID          *string        `protobuf:"bytes,1,opt,name=payerID" json:"payerID,omitempty"`
	PayeeID          *string        `protobuf:"bytes,2,opt,name=payeeID" json:"payeeID,omitempty"`
	ConversationID   *string        `protobuf:"bytes,3,opt,name=conversationID" json:"conversationID,omitempty"`
	Timestamp        *Timestamp     `protobuf:"bytes,4,opt,name=timestamp" json:"timestamp,omitempty"`
	PaymentStatus    *PaymentStatus `protobuf:"varint,5,opt,name=paymentStatus,enum=BlitzMessage.PaymentStatus" json:"paymentStatus,omitempty"`
	Token            *string        `protobuf:"bytes,6,opt,name=token" json:"token,omitempty"`
	MemoText         *string        `protobuf:"bytes,7,opt,name=memoText" json:"memoText,omitempty"`
	Amount           *string        `protobuf:"bytes,8,opt,name=amount" json:"amount,omitempty"`
	Currency         *string        `protobuf:"bytes,9,opt,name=currency" json:"currency,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *Payment) Reset()                    { *m = Payment{} }
func (m *Payment) String() string            { return proto.CompactTextString(m) }
func (*Payment) ProtoMessage()               {}
func (*Payment) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *Payment) GetPayerID() string {
	if m != nil && m.PayerID != nil {
		return *m.PayerID
	}
	return ""
}

func (m *Payment) GetPayeeID() string {
	if m != nil && m.PayeeID != nil {
		return *m.PayeeID
	}
	return ""
}

func (m *Payment) GetConversationID() string {
	if m != nil && m.ConversationID != nil {
		return *m.ConversationID
	}
	return ""
}

func (m *Payment) GetTimestamp() *Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Payment) GetPaymentStatus() PaymentStatus {
	if m != nil && m.PaymentStatus != nil {
		return *m.PaymentStatus
	}
	return PaymentStatus_PSUnknown
}

func (m *Payment) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

func (m *Payment) GetMemoText() string {
	if m != nil && m.MemoText != nil {
		return *m.MemoText
	}
	return ""
}

func (m *Payment) GetAmount() string {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return ""
}

func (m *Payment) GetCurrency() string {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return ""
}

func init() {
	proto.RegisterType((*CardInfo)(nil), "BlitzMessage.CardInfo")
	proto.RegisterType((*UserCardInfo)(nil), "BlitzMessage.UserCardInfo")
	proto.RegisterType((*Payment)(nil), "BlitzMessage.Payment")
	proto.RegisterEnum("BlitzMessage.CardStatus", CardStatus_name, CardStatus_value)
	proto.RegisterEnum("BlitzMessage.PaymentStatus", PaymentStatus_name, PaymentStatus_value)
}

var fileDescriptor4 = []byte{
	// 468 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x64, 0x51, 0xcb, 0x4e, 0xdb, 0x40,
	0x14, 0xc5, 0x49, 0xf3, 0xf0, 0x0d, 0x09, 0xd1, 0x20, 0xd1, 0x51, 0xd8, 0x54, 0x59, 0x45, 0x51,
	0x9b, 0x4a, 0x51, 0xd7, 0x48, 0x24, 0x2c, 0xc8, 0x02, 0x64, 0xc9, 0x61, 0xd1, 0xe5, 0x64, 0x7c,
	0x69, 0x5c, 0xec, 0x19, 0x6b, 0x7c, 0x4d, 0x09, 0x5f, 0xd0, 0x4f, 0xea, 0x77, 0xf0, 0x11, 0xfd,
	0x8e, 0x8e, 0x1f, 0xa1, 0x0e, 0xec, 0x7c, 0xcf, 0x3d, 0xe7, 0xcc, 0x3d, 0xc7, 0x30, 0xf0, 0xc4,
	0x2e, 0x46, 0x45, 0xe9, 0x2c, 0x31, 0x9a, 0x34, 0x3b, 0x5e, 0x44, 0x21, 0x3d, 0xdf, 0x60, 0x9a,
	0x8a, 0x1f, 0x38, 0x3a, 0xd7, 0x9b, 0x9f, 0x28, 0x29, 0x7c, 0x44, 0xf9, 0x25, 0xc0, 0x54, 0x9a,
	0x30, 0x21, 0x6d, 0x4a, 0xea, 0xa8, 0xb7, 0xde, 0x25, 0x58, 0xe9, 0xc6, 0x7f, 0x1c, 0xe8, 0x2e,
	0x85, 0x09, 0x56, 0xea, 0x5e, 0xb3, 0xcf, 0x00, 0xd2, 0x7e, 0xfb, 0x24, 0x28, 0x4b, 0xb9, 0xf3,
	0xc9, 0x99, 0x0c, 0xe6, 0x7c, 0x56, 0x77, 0x9e, 0x2d, 0x5f, 0xf7, 0xec, 0x0c, 0x06, 0x39, 0xfb,
	0x5a, 0x47, 0x01, 0x9a, 0x5b, 0x11, 0x23, 0x6f, 0x58, 0x85, 0xcb, 0x86, 0xd0, 0x8d, 0x31, 0xd6,
	0x6b, 0x7c, 0x22, 0xde, 0x2c, 0x90, 0x3e, 0xb4, 0x36, 0x46, 0xa8, 0x80, 0x7f, 0xd8, 0x8f, 0x91,
	0x48, 0xe9, 0x1b, 0x6f, 0x15, 0xe3, 0x29, 0xf4, 0xf0, 0x29, 0x09, 0x0d, 0xde, 0x68, 0x45, 0x5b,
	0xde, 0xb6, 0x60, 0x8b, 0x31, 0x80, 0x12, 0xfc, 0x8e, 0xc2, 0xf0, 0x4e, 0x81, 0x59, 0x1d, 0xe9,
	0x07, 0x54, 0xbc, 0x9b, 0xeb, 0xc6, 0xd7, 0x70, 0x7c, 0x97, 0xa2, 0x79, 0xbd, 0x7e, 0x00, 0xed,
	0xcc, 0xce, 0xab, 0xab, 0xe2, 0x72, 0x97, 0x4d, 0xa0, 0x2b, 0xab, 0x9d, 0xbd, 0xac, 0x39, 0xe9,
	0xcd, 0xcf, 0xde, 0x67, 0xc9, 0xb7, 0xe3, 0xbf, 0x0e, 0x74, 0xaa, 0x3e, 0xd9, 0x09, 0x74, 0x12,
	0xb1, 0xab, 0xd9, 0x54, 0x00, 0x5a, 0xa0, 0xcc, 0x97, 0xe7, 0xd6, 0xea, 0x11, 0x4d, 0x2a, 0x28,
	0xd4, 0xca, 0xe2, 0x65, 0xca, 0x29, 0xb8, 0x14, 0xc6, 0x98, 0x92, 0x88, 0x93, 0x22, 0x69, 0x6f,
	0xfe, 0xf1, 0xf0, 0xc1, 0xf5, 0x7e, 0xcd, 0xe6, 0xd0, 0x4f, 0xca, 0x07, 0xab, 0xb2, 0x5b, 0x45,
	0xd9, 0xe7, 0x87, 0x7c, 0xaf, 0x4e, 0xf9, 0x1f, 0xbf, 0xfd, 0xae, 0xe6, 0x4e, 0x81, 0xd8, 0x02,
	0x44, 0xac, 0x33, 0x45, 0x65, 0x41, 0x39, 0x43, 0x66, 0xc6, 0xa0, 0x92, 0x3b, 0xee, 0xe6, 0xc8,
	0x74, 0x05, 0x50, 0xfb, 0x81, 0x7d, 0x70, 0x97, 0xfe, 0x9d, 0x7a, 0x50, 0xfa, 0x97, 0x1a, 0x1e,
	0x95, 0xe3, 0x15, 0xde, 0x8b, 0x2c, 0xa2, 0xa1, 0x63, 0xdd, 0x60, 0xe9, 0x5b, 0xa6, 0x0a, 0xac,
	0x62, 0xd8, 0xd8, 0xaf, 0x23, 0x24, 0x0c, 0x86, 0xcd, 0xe9, 0x12, 0xfa, 0x6f, 0xcf, 0x73, 0xbd,
	0x9a, 0xdb, 0x29, 0x9c, 0x78, 0xfe, 0xad, 0xa6, 0xcb, 0x8c, 0xb6, 0xda, 0x84, 0xcf, 0x56, 0x54,
	0x78, 0x7a, 0xfe, 0xa5, 0x94, 0x98, 0xe4, 0x26, 0x8d, 0xc5, 0xd7, 0x97, 0x8b, 0x06, 0x1c, 0xbd,
	0x5c, 0x34, 0x99, 0xb3, 0xb0, 0x9f, 0xdc, 0x81, 0x91, 0xd4, 0xf1, 0x6c, 0x93, 0x97, 0xb0, 0x45,
	0x83, 0x07, 0x75, 0xfc, 0x76, 0x9c, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0xbf, 0xbb, 0xe6, 0xb2,
	0xf7, 0x02, 0x00, 0x00,
}
