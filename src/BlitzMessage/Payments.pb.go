// Code generated by protoc-gen-go.
// source: Payments.proto
// DO NOT EDIT!

package BlitzMessage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"


// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type CardStatus int32

const (
	CardStatus_CSUnknown  CardStatus = 0
	CardStatus_CSStandard CardStatus = 1
	CardStatus_CSDeleted  CardStatus = 2
)

var CardStatus_name = map[int32]string{
	0: "CSUnknown",
	1: "CSStandard",
	2: "CSDeleted",
}
var CardStatus_value = map[string]int32{
	"CSUnknown":  0,
	"CSStandard": 1,
	"CSDeleted":  2,
}

func (x CardStatus) Enum() *CardStatus {
	p := new(CardStatus)
	*p = x
	return p
}
func (x CardStatus) String() string {
	return proto.EnumName(CardStatus_name, int32(x))
}
func (x *CardStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CardStatus_value, data, "CardStatus")
	if err != nil {
		return err
	}
	*x = CardStatus(value)
	return nil
}
func (CardStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

type ChargeStatus int32

const (
	ChargeStatus_CSChargeUnknown ChargeStatus = 0
	ChargeStatus_CSChargeRequest ChargeStatus = 1
	ChargeStatus_CSDeclined      ChargeStatus = 2
	ChargeStatus_CSPreauthorized ChargeStatus = 3
	ChargeStatus_CSCharged       ChargeStatus = 4
)

var ChargeStatus_name = map[int32]string{
	0: "CSChargeUnknown",
	1: "CSChargeRequest",
	2: "CSDeclined",
	3: "CSPreauthorized",
	4: "CSCharged",
}
var ChargeStatus_value = map[string]int32{
	"CSChargeUnknown": 0,
	"CSChargeRequest": 1,
	"CSDeclined":      2,
	"CSPreauthorized": 3,
	"CSCharged":       4,
}

func (x ChargeStatus) Enum() *ChargeStatus {
	p := new(ChargeStatus)
	*p = x
	return p
}
func (x ChargeStatus) String() string {
	return proto.EnumName(ChargeStatus_name, int32(x))
}
func (x *ChargeStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChargeStatus_value, data, "ChargeStatus")
	if err != nil {
		return err
	}
	*x = ChargeStatus(value)
	return nil
}
func (ChargeStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

type ChargeTokenType int32

const (
	ChargeTokenType_CTTUnkown      ChargeTokenType = 0
	ChargeTokenType_CTTApplePay    ChargeTokenType = 1
	ChargeTokenType_CTTStripeToken ChargeTokenType = 2
	ChargeTokenType_CTTCardToken   ChargeTokenType = 3
)

var ChargeTokenType_name = map[int32]string{
	0: "CTTUnkown",
	1: "CTTApplePay",
	2: "CTTStripeToken",
	3: "CTTCardToken",
}
var ChargeTokenType_value = map[string]int32{
	"CTTUnkown":      0,
	"CTTApplePay":    1,
	"CTTStripeToken": 2,
	"CTTCardToken":   3,
}

func (x ChargeTokenType) Enum() *ChargeTokenType {
	p := new(ChargeTokenType)
	*p = x
	return p
}
func (x ChargeTokenType) String() string {
	return proto.EnumName(ChargeTokenType_name, int32(x))
}
func (x *ChargeTokenType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ChargeTokenType_value, data, "ChargeTokenType")
	if err != nil {
		return err
	}
	*x = ChargeTokenType(value)
	return nil
}
func (ChargeTokenType) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

type PurchaseType int32

const (
	PurchaseType_PurchaseTypeUnknown PurchaseType = 0
	PurchaseType_PTChatConversation  PurchaseType = 1
	PurchaseType_PTFeedPost          PurchaseType = 2
)

var PurchaseType_name = map[int32]string{
	0: "PurchaseTypeUnknown",
	1: "PTChatConversation",
	2: "PTFeedPost",
}
var PurchaseType_value = map[string]int32{
	"PurchaseTypeUnknown": 0,
	"PTChatConversation":  1,
	"PTFeedPost":          2,
}

func (x PurchaseType) Enum() *PurchaseType {
	p := new(PurchaseType)
	*p = x
	return p
}
func (x PurchaseType) String() string {
	return proto.EnumName(PurchaseType_name, int32(x))
}
func (x *PurchaseType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PurchaseType_value, data, "PurchaseType")
	if err != nil {
		return err
	}
	*x = PurchaseType(value)
	return nil
}
func (PurchaseType) EnumDescriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

type CardInfo struct {
	CardStatus       *CardStatus `protobuf:"varint,1,opt,name=cardStatus,enum=BlitzMessage.CardStatus" json:"cardStatus,omitempty"`
	CardHolderName   *string     `protobuf:"bytes,2,opt,name=cardHolderName" json:"cardHolderName,omitempty"`
	MemoText         *string     `protobuf:"bytes,3,opt,name=memoText" json:"memoText,omitempty"`
	Brand            *string     `protobuf:"bytes,4,opt,name=brand" json:"brand,omitempty"`
	Last4            *string     `protobuf:"bytes,5,opt,name=last4" json:"last4,omitempty"`
	ExpireMonth      *int32      `protobuf:"varint,6,opt,name=expireMonth" json:"expireMonth,omitempty"`
	ExpireYear       *int32      `protobuf:"varint,7,opt,name=expireYear" json:"expireYear,omitempty"`
	Token            *string     `protobuf:"bytes,8,opt,name=token" json:"token,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *CardInfo) Reset()                    { *m = CardInfo{} }
func (m *CardInfo) String() string            { return proto.CompactTextString(m) }
func (*CardInfo) ProtoMessage()               {}
func (*CardInfo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{0} }

func (m *CardInfo) GetCardStatus() CardStatus {
	if m != nil && m.CardStatus != nil {
		return *m.CardStatus
	}
	return CardStatus_CSUnknown
}

func (m *CardInfo) GetCardHolderName() string {
	if m != nil && m.CardHolderName != nil {
		return *m.CardHolderName
	}
	return ""
}

func (m *CardInfo) GetMemoText() string {
	if m != nil && m.MemoText != nil {
		return *m.MemoText
	}
	return ""
}

func (m *CardInfo) GetBrand() string {
	if m != nil && m.Brand != nil {
		return *m.Brand
	}
	return ""
}

func (m *CardInfo) GetLast4() string {
	if m != nil && m.Last4 != nil {
		return *m.Last4
	}
	return ""
}

func (m *CardInfo) GetExpireMonth() int32 {
	if m != nil && m.ExpireMonth != nil {
		return *m.ExpireMonth
	}
	return 0
}

func (m *CardInfo) GetExpireYear() int32 {
	if m != nil && m.ExpireYear != nil {
		return *m.ExpireYear
	}
	return 0
}

func (m *CardInfo) GetToken() string {
	if m != nil && m.Token != nil {
		return *m.Token
	}
	return ""
}

type UserCardInfo struct {
	UserID           *string     `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	CardInfo         []*CardInfo `protobuf:"bytes,2,rep,name=cardInfo" json:"cardInfo,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *UserCardInfo) Reset()                    { *m = UserCardInfo{} }
func (m *UserCardInfo) String() string            { return proto.CompactTextString(m) }
func (*UserCardInfo) ProtoMessage()               {}
func (*UserCardInfo) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{1} }

func (m *UserCardInfo) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *UserCardInfo) GetCardInfo() []*CardInfo {
	if m != nil {
		return m.CardInfo
	}
	return nil
}

type Charge struct {
	ChargeID          *string          `protobuf:"bytes,1,opt,name=chargeID" json:"chargeID,omitempty"`
	Timestamp         *Timestamp       `protobuf:"bytes,2,opt,name=timestamp" json:"timestamp,omitempty"`
	ChargeStatus      *ChargeStatus    `protobuf:"varint,3,opt,name=chargeStatus,enum=BlitzMessage.ChargeStatus" json:"chargeStatus,omitempty"`
	PayerID           *string          `protobuf:"bytes,4,opt,name=payerID" json:"payerID,omitempty"`
	PayeeIDDeprecated *string          `protobuf:"bytes,5,opt,name=payeeID_deprecated" json:"payeeID_deprecated,omitempty"`
	PurchaseType      *PurchaseType    `protobuf:"varint,6,opt,name=purchaseType,enum=BlitzMessage.PurchaseType" json:"purchaseType,omitempty"`
	PurchaseTypeID    *string          `protobuf:"bytes,7,opt,name=purchaseTypeID" json:"purchaseTypeID,omitempty"`
	MemoText          *string          `protobuf:"bytes,8,opt,name=memoText" json:"memoText,omitempty"`
	Amount            *string          `protobuf:"bytes,9,opt,name=amount" json:"amount,omitempty"`
	Currency          *string          `protobuf:"bytes,10,opt,name=currency" json:"currency,omitempty"`
	TokenType         *ChargeTokenType `protobuf:"varint,11,opt,name=tokenType,enum=BlitzMessage.ChargeTokenType" json:"tokenType,omitempty"`
	ChargeToken       *string          `protobuf:"bytes,12,opt,name=chargeToken" json:"chargeToken,omitempty"`
	ProcessorReason   *string          `protobuf:"bytes,13,opt,name=processorReason" json:"processorReason,omitempty"`
	XXX_unrecognized  []byte           `json:"-"`
}

func (m *Charge) Reset()                    { *m = Charge{} }
func (m *Charge) String() string            { return proto.CompactTextString(m) }
func (*Charge) ProtoMessage()               {}
func (*Charge) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{2} }

func (m *Charge) GetChargeID() string {
	if m != nil && m.ChargeID != nil {
		return *m.ChargeID
	}
	return ""
}

func (m *Charge) GetTimestamp() *Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *Charge) GetChargeStatus() ChargeStatus {
	if m != nil && m.ChargeStatus != nil {
		return *m.ChargeStatus
	}
	return ChargeStatus_CSChargeUnknown
}

func (m *Charge) GetPayerID() string {
	if m != nil && m.PayerID != nil {
		return *m.PayerID
	}
	return ""
}

func (m *Charge) GetPayeeIDDeprecated() string {
	if m != nil && m.PayeeIDDeprecated != nil {
		return *m.PayeeIDDeprecated
	}
	return ""
}

func (m *Charge) GetPurchaseType() PurchaseType {
	if m != nil && m.PurchaseType != nil {
		return *m.PurchaseType
	}
	return PurchaseType_PurchaseTypeUnknown
}

func (m *Charge) GetPurchaseTypeID() string {
	if m != nil && m.PurchaseTypeID != nil {
		return *m.PurchaseTypeID
	}
	return ""
}

func (m *Charge) GetMemoText() string {
	if m != nil && m.MemoText != nil {
		return *m.MemoText
	}
	return ""
}

func (m *Charge) GetAmount() string {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return ""
}

func (m *Charge) GetCurrency() string {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return ""
}

func (m *Charge) GetTokenType() ChargeTokenType {
	if m != nil && m.TokenType != nil {
		return *m.TokenType
	}
	return ChargeTokenType_CTTUnkown
}

func (m *Charge) GetChargeToken() string {
	if m != nil && m.ChargeToken != nil {
		return *m.ChargeToken
	}
	return ""
}

func (m *Charge) GetProcessorReason() string {
	if m != nil && m.ProcessorReason != nil {
		return *m.ProcessorReason
	}
	return ""
}

type PurchaseDescription struct {
	//  Sent from client for purchase request:
	PurchaseType   *PurchaseType `protobuf:"varint,1,opt,name=purchaseType,enum=BlitzMessage.PurchaseType" json:"purchaseType,omitempty"`
	PurchaseTypeID *string       `protobuf:"bytes,2,opt,name=purchaseTypeID" json:"purchaseTypeID,omitempty"`
	//  Sent to client as purchase request response:
	PurchaseIDWha    *string `protobuf:"bytes,3,opt,name=purchaseID_wha" json:"purchaseID_wha,omitempty"`
	MemoText         *string `protobuf:"bytes,4,opt,name=memoText" json:"memoText,omitempty"`
	Amount           *string `protobuf:"bytes,5,opt,name=amount" json:"amount,omitempty"`
	Currency         *string `protobuf:"bytes,6,opt,name=currency" json:"currency,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *PurchaseDescription) Reset()                    { *m = PurchaseDescription{} }
func (m *PurchaseDescription) String() string            { return proto.CompactTextString(m) }
func (*PurchaseDescription) ProtoMessage()               {}
func (*PurchaseDescription) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{3} }

func (m *PurchaseDescription) GetPurchaseType() PurchaseType {
	if m != nil && m.PurchaseType != nil {
		return *m.PurchaseType
	}
	return PurchaseType_PurchaseTypeUnknown
}

func (m *PurchaseDescription) GetPurchaseTypeID() string {
	if m != nil && m.PurchaseTypeID != nil {
		return *m.PurchaseTypeID
	}
	return ""
}

func (m *PurchaseDescription) GetPurchaseIDWha() string {
	if m != nil && m.PurchaseIDWha != nil {
		return *m.PurchaseIDWha
	}
	return ""
}

func (m *PurchaseDescription) GetMemoText() string {
	if m != nil && m.MemoText != nil {
		return *m.MemoText
	}
	return ""
}

func (m *PurchaseDescription) GetAmount() string {
	if m != nil && m.Amount != nil {
		return *m.Amount
	}
	return ""
}

func (m *PurchaseDescription) GetCurrency() string {
	if m != nil && m.Currency != nil {
		return *m.Currency
	}
	return ""
}

type FetchPurchaseDescription struct {
	Purchase         *PurchaseDescription `protobuf:"bytes,1,opt,name=purchase" json:"purchase,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *FetchPurchaseDescription) Reset()                    { *m = FetchPurchaseDescription{} }
func (m *FetchPurchaseDescription) String() string            { return proto.CompactTextString(m) }
func (*FetchPurchaseDescription) ProtoMessage()               {}
func (*FetchPurchaseDescription) Descriptor() ([]byte, []int) { return fileDescriptor4, []int{4} }

func (m *FetchPurchaseDescription) GetPurchase() *PurchaseDescription {
	if m != nil {
		return m.Purchase
	}
	return nil
}

func init() {
	proto.RegisterType((*CardInfo)(nil), "BlitzMessage.CardInfo")
	proto.RegisterType((*UserCardInfo)(nil), "BlitzMessage.UserCardInfo")
	proto.RegisterType((*Charge)(nil), "BlitzMessage.Charge")
	proto.RegisterType((*PurchaseDescription)(nil), "BlitzMessage.PurchaseDescription")
	proto.RegisterType((*FetchPurchaseDescription)(nil), "BlitzMessage.FetchPurchaseDescription")
	proto.RegisterEnum("BlitzMessage.CardStatus", CardStatus_name, CardStatus_value)
	proto.RegisterEnum("BlitzMessage.ChargeStatus", ChargeStatus_name, ChargeStatus_value)
	proto.RegisterEnum("BlitzMessage.ChargeTokenType", ChargeTokenType_name, ChargeTokenType_value)
	proto.RegisterEnum("BlitzMessage.PurchaseType", PurchaseType_name, PurchaseType_value)
}

func init() { proto.RegisterFile("Payments.proto", fileDescriptor4) }

var fileDescriptor4 = []byte{
	// 690 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x54, 0xcd, 0x6e, 0x1a, 0x49,
	0x10, 0xf6, 0x80, 0xc1, 0x50, 0x60, 0x40, 0x63, 0xc9, 0x6e, 0xb1, 0x5a, 0x69, 0xd7, 0x27, 0x0b,
	0xed, 0x92, 0x88, 0xe4, 0x94, 0x83, 0xa5, 0x18, 0x64, 0xd9, 0x07, 0xc7, 0xc8, 0x8c, 0x15, 0xe5,
	0x14, 0xb5, 0x67, 0x2a, 0x66, 0x62, 0xa6, 0x7b, 0xd2, 0xd3, 0xd8, 0xc6, 0xd7, 0x5c, 0xf2, 0x2e,
	0x79, 0x81, 0x3c, 0x87, 0x9f, 0x28, 0xd5, 0xdd, 0x60, 0x06, 0xe3, 0x53, 0x6e, 0xd3, 0x5f, 0xfd,
	0x7c, 0x5f, 0x7d, 0x55, 0x00, 0x8d, 0x21, 0x9f, 0x25, 0x28, 0x74, 0xd6, 0x4d, 0x95, 0xd4, 0xd2,
	0xaf, 0x1f, 0x4d, 0x62, 0xfd, 0x70, 0x86, 0x59, 0xc6, 0xaf, 0xb1, 0xfd, 0x97, 0xbc, 0xfa, 0x8a,
	0xa1, 0x8e, 0x6f, 0x31, 0xfc, 0x3f, 0xc2, 0x2c, 0x54, 0x71, 0xaa, 0xa5, 0x72, 0xa9, 0xed, 0x5a,
	0x30, 0x4b, 0x71, 0x5e, 0xb7, 0xff, 0xcb, 0x83, 0x4a, 0x9f, 0xab, 0xe8, 0x54, 0x7c, 0x91, 0xfe,
	0x7f, 0x00, 0x21, 0x7d, 0x8f, 0x34, 0xd7, 0xd3, 0x8c, 0x79, 0xff, 0x78, 0x07, 0x8d, 0x1e, 0xeb,
	0xe6, 0x3b, 0x77, 0xfb, 0x4f, 0x71, 0x7f, 0x17, 0x1a, 0x26, 0xfb, 0x44, 0x4e, 0x22, 0x54, 0x1f,
	0x78, 0x82, 0xac, 0x40, 0x15, 0x55, 0xbf, 0x05, 0x95, 0x04, 0x13, 0x19, 0xe0, 0xbd, 0x66, 0x45,
	0x8b, 0x6c, 0x43, 0xe9, 0x4a, 0x71, 0x11, 0xb1, 0xcd, 0xc5, 0x73, 0xc2, 0x33, 0xfd, 0x96, 0x95,
	0xec, 0x73, 0x07, 0x6a, 0x78, 0x9f, 0xc6, 0x0a, 0xcf, 0xa4, 0xd0, 0x63, 0x56, 0x26, 0xb0, 0xe4,
	0xfb, 0x00, 0x0e, 0xfc, 0x84, 0x5c, 0xb1, 0x2d, 0x8b, 0x51, 0x9d, 0x96, 0x37, 0x28, 0x58, 0xc5,
	0xd4, 0xed, 0x9f, 0x40, 0xfd, 0x32, 0x43, 0xf5, 0xa4, 0xbe, 0x01, 0xe5, 0x29, 0xbd, 0x4f, 0x07,
	0x56, 0x79, 0xd5, 0x3f, 0x80, 0x4a, 0x38, 0x8f, 0x91, 0xb2, 0xe2, 0x41, 0xad, 0xb7, 0xbb, 0x3e,
	0x8b, 0x89, 0xee, 0x7f, 0x2f, 0x42, 0xb9, 0x3f, 0xe6, 0xea, 0x1a, 0x8d, 0xf8, 0xd0, 0x7e, 0x3d,
	0xb5, 0xe9, 0x40, 0x55, 0xc7, 0x09, 0x66, 0x9a, 0x27, 0xa9, 0x9d, 0xb0, 0xd6, 0xdb, 0x5b, 0xed,
	0x13, 0x2c, 0xc2, 0xfe, 0x6b, 0xa8, 0xbb, 0xea, 0xb9, 0x85, 0x45, 0x6b, 0x61, 0xfb, 0x19, 0x6d,
	0x2e, 0xc3, 0x6f, 0xc2, 0x56, 0xca, 0x67, 0x56, 0xb5, 0x33, 0xa7, 0x0d, 0xbe, 0x01, 0x88, 0xff,
	0x73, 0x84, 0xa9, 0xc2, 0x90, 0x6b, 0x8c, 0xe6, 0x4e, 0x51, 0xfb, 0x74, 0xaa, 0x88, 0x21, 0x43,
	0xb3, 0x43, 0x6b, 0xd5, 0x5a, 0xfb, 0x61, 0x2e, 0xc3, 0xec, 0x28, 0x5f, 0x41, 0x2c, 0x5b, 0x6b,
	0x3b, 0xb2, 0x6e, 0x1a, 0xf7, 0x78, 0x22, 0xa7, 0x42, 0xb3, 0xea, 0x22, 0x23, 0x9c, 0x2a, 0x85,
	0x22, 0x9c, 0x31, 0x98, 0xb3, 0x57, 0xad, 0xfd, 0x96, 0xba, 0x66, 0xa9, 0xff, 0x7e, 0x69, 0xb2,
	0x60, 0x91, 0x64, 0x36, 0x1b, 0x2e, 0x21, 0x56, 0xb7, 0x6d, 0xf6, 0xa0, 0x49, 0xa7, 0x17, 0x52,
	0x89, 0x54, 0x17, 0xc8, 0x33, 0x29, 0xd8, 0xb6, 0xdd, 0xe7, 0x4f, 0x0f, 0x76, 0x16, 0xe2, 0x07,
	0xf3, 0xa3, 0x8d, 0xa5, 0x58, 0x9b, 0xda, 0xfb, 0x83, 0xa9, 0xdd, 0x65, 0xe6, 0x70, 0xb2, 0xf7,
	0x6e, 0xcc, 0xe7, 0xf7, 0x99, 0x77, 0x63, 0xf3, 0x99, 0x1b, 0xa5, 0x35, 0x37, 0xca, 0x56, 0xed,
	0x39, 0xb0, 0x63, 0xd4, 0xe1, 0xf8, 0x25, 0xc5, 0x6f, 0xa0, 0xb2, 0xe0, 0xb1, 0x6a, 0x6b, 0xbd,
	0x7f, 0x5f, 0x56, 0x9b, 0x2b, 0xea, 0xbc, 0x03, 0xc8, 0xfd, 0xb8, 0xb6, 0xa1, 0xda, 0x1f, 0x5d,
	0x8a, 0x1b, 0x21, 0xef, 0x44, 0x6b, 0x83, 0xf4, 0x40, 0x7f, 0x44, 0x21, 0x11, 0x51, 0x4a, 0xcb,
	0x73, 0xe1, 0x01, 0x4e, 0x90, 0x8e, 0xa3, 0x55, 0xe8, 0x4c, 0xa0, 0xbe, 0x72, 0x55, 0x3b, 0xd0,
	0xec, 0x8f, 0x1c, 0xb2, 0xec, 0x91, 0x03, 0x2f, 0xf0, 0xdb, 0x94, 0x4e, 0x96, 0x1a, 0xd9, 0xc6,
	0x03, 0x0c, 0x27, 0xb1, 0x30, 0x9d, 0x5c, 0xd2, 0x50, 0x21, 0x9f, 0xea, 0xb1, 0x54, 0xf1, 0x03,
	0x81, 0x45, 0xc7, 0xe6, 0x2a, 0xa3, 0xd6, 0x66, 0xe7, 0x23, 0xe5, 0x3c, 0xdb, 0xb4, 0xc9, 0x08,
	0x02, 0xe2, 0x72, 0x54, 0x4d, 0xa8, 0xd1, 0xf3, 0x7d, 0x9a, 0x4e, 0x90, 0xfe, 0xa7, 0x88, 0xc6,
	0x87, 0x06, 0x01, 0x23, 0x4d, 0xc3, 0xba, 0x2a, 0xa2, 0x6a, 0x91, 0xe8, 0x20, 0x30, 0x33, 0x3b,
	0xa4, 0xd8, 0x39, 0x87, 0xfa, 0xca, 0x1e, 0xf7, 0x96, 0x07, 0x61, 0xde, 0xcb, 0x51, 0x76, 0xc1,
	0x1f, 0x06, 0xa4, 0x41, 0xf7, 0xa5, 0xb8, 0x45, 0x95, 0x71, 0xe3, 0xa0, 0x9b, 0x66, 0x18, 0x1c,
	0x23, 0x46, 0x43, 0x49, 0xd3, 0x15, 0x8e, 0x5e, 0x3d, 0x1e, 0x16, 0x60, 0xe3, 0xf1, 0xb0, 0xe8,
	0x7b, 0x47, 0xf4, 0xc9, 0x3c, 0x68, 0x87, 0x32, 0xe9, 0x5e, 0x99, 0x5d, 0x8c, 0x51, 0xe1, 0xca,
	0x56, 0x7e, 0x78, 0xde, 0xef, 0x00, 0x00, 0x00, 0xff, 0xff, 0x99, 0x04, 0x68, 0x50, 0x57, 0x05,
	0x00, 0x00,
}
