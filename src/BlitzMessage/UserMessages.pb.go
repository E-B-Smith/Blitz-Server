// Code generated by protoc-gen-go.
// source: UserMessages.proto
// DO NOT EDIT!

package BlitzMessage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"


// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UserMessageStatus int32

const (
	UserMessageStatus_MSUnknown   UserMessageStatus = 0
	UserMessageStatus_MSImportant UserMessageStatus = 1
	UserMessageStatus_MSNew       UserMessageStatus = 2
	UserMessageStatus_MSRead      UserMessageStatus = 3
	UserMessageStatus_MSArchived  UserMessageStatus = 4
	UserMessageStatus_MSClosed    UserMessageStatus = 5
)

var UserMessageStatus_name = map[int32]string{
	0: "MSUnknown",
	1: "MSImportant",
	2: "MSNew",
	3: "MSRead",
	4: "MSArchived",
	5: "MSClosed",
}
var UserMessageStatus_value = map[string]int32{
	"MSUnknown":   0,
	"MSImportant": 1,
	"MSNew":       2,
	"MSRead":      3,
	"MSArchived":  4,
	"MSClosed":    5,
}

func (x UserMessageStatus) Enum() *UserMessageStatus {
	p := new(UserMessageStatus)
	*p = x
	return p
}
func (x UserMessageStatus) String() string {
	return proto.EnumName(UserMessageStatus_name, int32(x))
}
func (x *UserMessageStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserMessageStatus_value, data, "UserMessageStatus")
	if err != nil {
		return err
	}
	*x = UserMessageStatus(value)
	return nil
}
func (UserMessageStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

type ConversationType int32

const (
	ConversationType_CTUnknownX     ConversationType = 0
	ConversationType_CTConversation ConversationType = 1
	ConversationType_CTFeedPost     ConversationType = 2
	ConversationType_CTNotification ConversationType = 3
	ConversationType_CTCall         ConversationType = 4
)

var ConversationType_name = map[int32]string{
	0: "CTUnknownX",
	1: "CTConversation",
	2: "CTFeedPost",
	3: "CTNotification",
	4: "CTCall",
}
var ConversationType_value = map[string]int32{
	"CTUnknownX":     0,
	"CTConversation": 1,
	"CTFeedPost":     2,
	"CTNotification": 3,
	"CTCall":         4,
}

func (x ConversationType) Enum() *ConversationType {
	p := new(ConversationType)
	*p = x
	return p
}
func (x ConversationType) String() string {
	return proto.EnumName(ConversationType_name, int32(x))
}
func (x *ConversationType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ConversationType_value, data, "ConversationType")
	if err != nil {
		return err
	}
	*x = ConversationType(value)
	return nil
}
func (ConversationType) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

type PaymentStatus int32

const (
	PaymentStatus_PSUnknown           PaymentStatus = 0
	PaymentStatus_PSIsFree            PaymentStatus = 1
	PaymentStatus_PSTrialPeriod       PaymentStatus = 2
	PaymentStatus_PSPaymentRequired   PaymentStatus = 3
	PaymentStatus_PSExpertNeedsAccept PaymentStatus = 4
	PaymentStatus_PSExpertRejected    PaymentStatus = 5
	PaymentStatus_PSExpertAccepted    PaymentStatus = 6
)

var PaymentStatus_name = map[int32]string{
	0: "PSUnknown",
	1: "PSIsFree",
	2: "PSTrialPeriod",
	3: "PSPaymentRequired",
	4: "PSExpertNeedsAccept",
	5: "PSExpertRejected",
	6: "PSExpertAccepted",
}
var PaymentStatus_value = map[string]int32{
	"PSUnknown":           0,
	"PSIsFree":            1,
	"PSTrialPeriod":       2,
	"PSPaymentRequired":   3,
	"PSExpertNeedsAccept": 4,
	"PSExpertRejected":    5,
	"PSExpertAccepted":    6,
}

func (x PaymentStatus) Enum() *PaymentStatus {
	p := new(PaymentStatus)
	*p = x
	return p
}
func (x PaymentStatus) String() string {
	return proto.EnumName(PaymentStatus_name, int32(x))
}
func (x *PaymentStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PaymentStatus_value, data, "PaymentStatus")
	if err != nil {
		return err
	}
	*x = PaymentStatus(value)
	return nil
}
func (PaymentStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

type UserMessageType int32

const (
	UserMessageType_MTUnknown            UserMessageType = 0
	UserMessageType_MTSystem             UserMessageType = 1
	UserMessageType_MTConversation       UserMessageType = 2
	UserMessageType_MTNotification       UserMessageType = 3
	UserMessageType_MTActionNotification UserMessageType = 4
)

var UserMessageType_name = map[int32]string{
	0: "MTUnknown",
	1: "MTSystem",
	2: "MTConversation",
	3: "MTNotification",
	4: "MTActionNotification",
}
var UserMessageType_value = map[string]int32{
	"MTUnknown":            0,
	"MTSystem":             1,
	"MTConversation":       2,
	"MTNotification":       3,
	"MTActionNotification": 4,
}

func (x UserMessageType) Enum() *UserMessageType {
	p := new(UserMessageType)
	*p = x
	return p
}
func (x UserMessageType) String() string {
	return proto.EnumName(UserMessageType_name, int32(x))
}
func (x *UserMessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserMessageType_value, data, "UserMessageType")
	if err != nil {
		return err
	}
	*x = UserMessageType(value)
	return nil
}
func (UserMessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{3} }

type Conversation struct {
	ConversationID     *string            `protobuf:"bytes,1,opt,name=conversationID" json:"conversationID,omitempty"`
	InitiatorID        *string            `protobuf:"bytes,2,opt,name=initiatorID" json:"initiatorID,omitempty"`
	Status             *UserMessageStatus `protobuf:"varint,3,opt,name=status,enum=BlitzMessage.UserMessageStatus" json:"status,omitempty"`
	ParentFeedPostID   *string            `protobuf:"bytes,4,opt,name=parentFeedPostID" json:"parentFeedPostID,omitempty"`
	CreationDate       *Timestamp         `protobuf:"bytes,5,opt,name=creationDate" json:"creationDate,omitempty"`
	LastActivityDate   *Timestamp         `protobuf:"bytes,6,opt,name=lastActivityDate" json:"lastActivityDate,omitempty"`
	LastMessage        *string            `protobuf:"bytes,7,opt,name=lastMessage" json:"lastMessage,omitempty"`
	MessageCount       *int32             `protobuf:"varint,8,opt,name=messageCount" json:"messageCount,omitempty"`
	UnreadCount        *int32             `protobuf:"varint,9,opt,name=unreadCount" json:"unreadCount,omitempty"`
	MemberIDs          []string           `protobuf:"bytes,10,rep,name=memberIDs" json:"memberIDs,omitempty"`
	ClosedDate         *Timestamp         `protobuf:"bytes,11,opt,name=closedDate" json:"closedDate,omitempty"`
	HeadlineText       *string            `protobuf:"bytes,12,opt,name=headlineText" json:"headlineText,omitempty"`
	LastActivityUserID *string            `protobuf:"bytes,13,opt,name=lastActivityUserID" json:"lastActivityUserID,omitempty"`
	LastActionURL      *string            `protobuf:"bytes,14,opt,name=lastActionURL" json:"lastActionURL,omitempty"`
	ConversationType   *ConversationType  `protobuf:"varint,15,opt,name=conversationType,enum=BlitzMessage.ConversationType" json:"conversationType,omitempty"`
	IsFreeDeprecated   *bool              `protobuf:"varint,16,opt,name=isFree_deprecated" json:"isFree_deprecated,omitempty"`
	ChargeID           *string            `protobuf:"bytes,17,opt,name=chargeID" json:"chargeID,omitempty"`
	PaymentStatus      *PaymentStatus     `protobuf:"varint,18,opt,name=PaymentStatus,enum=BlitzMessage.PaymentStatus" json:"PaymentStatus,omitempty"`
	ExpertID           *string            `protobuf:"bytes,19,opt,name=expertID" json:"expertID,omitempty"`
	Topic              *string            `protobuf:"bytes,20,opt,name=topic" json:"topic,omitempty"`
	CallTime           *Timestamp         `protobuf:"bytes,21,opt,name=callTime" json:"callTime,omitempty"`
	SuggestedDuration  *float64           `protobuf:"fixed64,22,opt,name=suggestedDuration" json:"suggestedDuration,omitempty"`
	SuggestedTimes     []*Timestamp       `protobuf:"bytes,23,rep,name=suggestedTimes" json:"suggestedTimes,omitempty"`
	AcceptDate         *Timestamp         `protobuf:"bytes,24,opt,name=acceptDate" json:"acceptDate,omitempty"`
	XXX_unrecognized   []byte             `json:"-"`
}

func (m *Conversation) Reset()                    { *m = Conversation{} }
func (m *Conversation) String() string            { return proto.CompactTextString(m) }
func (*Conversation) ProtoMessage()               {}
func (*Conversation) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *Conversation) GetConversationID() string {
	if m != nil && m.ConversationID != nil {
		return *m.ConversationID
	}
	return ""
}

func (m *Conversation) GetInitiatorID() string {
	if m != nil && m.InitiatorID != nil {
		return *m.InitiatorID
	}
	return ""
}

func (m *Conversation) GetStatus() UserMessageStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return UserMessageStatus_MSUnknown
}

func (m *Conversation) GetParentFeedPostID() string {
	if m != nil && m.ParentFeedPostID != nil {
		return *m.ParentFeedPostID
	}
	return ""
}

func (m *Conversation) GetCreationDate() *Timestamp {
	if m != nil {
		return m.CreationDate
	}
	return nil
}

func (m *Conversation) GetLastActivityDate() *Timestamp {
	if m != nil {
		return m.LastActivityDate
	}
	return nil
}

func (m *Conversation) GetLastMessage() string {
	if m != nil && m.LastMessage != nil {
		return *m.LastMessage
	}
	return ""
}

func (m *Conversation) GetMessageCount() int32 {
	if m != nil && m.MessageCount != nil {
		return *m.MessageCount
	}
	return 0
}

func (m *Conversation) GetUnreadCount() int32 {
	if m != nil && m.UnreadCount != nil {
		return *m.UnreadCount
	}
	return 0
}

func (m *Conversation) GetMemberIDs() []string {
	if m != nil {
		return m.MemberIDs
	}
	return nil
}

func (m *Conversation) GetClosedDate() *Timestamp {
	if m != nil {
		return m.ClosedDate
	}
	return nil
}

func (m *Conversation) GetHeadlineText() string {
	if m != nil && m.HeadlineText != nil {
		return *m.HeadlineText
	}
	return ""
}

func (m *Conversation) GetLastActivityUserID() string {
	if m != nil && m.LastActivityUserID != nil {
		return *m.LastActivityUserID
	}
	return ""
}

func (m *Conversation) GetLastActionURL() string {
	if m != nil && m.LastActionURL != nil {
		return *m.LastActionURL
	}
	return ""
}

func (m *Conversation) GetConversationType() ConversationType {
	if m != nil && m.ConversationType != nil {
		return *m.ConversationType
	}
	return ConversationType_CTUnknownX
}

func (m *Conversation) GetIsFreeDeprecated() bool {
	if m != nil && m.IsFreeDeprecated != nil {
		return *m.IsFreeDeprecated
	}
	return false
}

func (m *Conversation) GetChargeID() string {
	if m != nil && m.ChargeID != nil {
		return *m.ChargeID
	}
	return ""
}

func (m *Conversation) GetPaymentStatus() PaymentStatus {
	if m != nil && m.PaymentStatus != nil {
		return *m.PaymentStatus
	}
	return PaymentStatus_PSUnknown
}

func (m *Conversation) GetExpertID() string {
	if m != nil && m.ExpertID != nil {
		return *m.ExpertID
	}
	return ""
}

func (m *Conversation) GetTopic() string {
	if m != nil && m.Topic != nil {
		return *m.Topic
	}
	return ""
}

func (m *Conversation) GetCallTime() *Timestamp {
	if m != nil {
		return m.CallTime
	}
	return nil
}

func (m *Conversation) GetSuggestedDuration() float64 {
	if m != nil && m.SuggestedDuration != nil {
		return *m.SuggestedDuration
	}
	return 0
}

func (m *Conversation) GetSuggestedTimes() []*Timestamp {
	if m != nil {
		return m.SuggestedTimes
	}
	return nil
}

func (m *Conversation) GetAcceptDate() *Timestamp {
	if m != nil {
		return m.AcceptDate
	}
	return nil
}

type ConversationGroup struct {
	GroupID          *string           `protobuf:"bytes,1,opt,name=groupID" json:"groupID,omitempty"`
	GroupType        *ConversationType `protobuf:"varint,2,opt,name=groupType,enum=BlitzMessage.ConversationType" json:"groupType,omitempty"`
	UserID           *string           `protobuf:"bytes,3,opt,name=userID" json:"userID,omitempty"`
	ActivityDate     *Timestamp        `protobuf:"bytes,4,opt,name=activityDate" json:"activityDate,omitempty"`
	HeadlineText     *string           `protobuf:"bytes,5,opt,name=headlineText" json:"headlineText,omitempty"`
	StatusText       *string           `protobuf:"bytes,6,opt,name=statusText" json:"statusText,omitempty"`
	LastMessage      *string           `protobuf:"bytes,7,opt,name=lastMessage" json:"lastMessage,omitempty"`
	LastUserID       *string           `protobuf:"bytes,8,opt,name=lastUserID" json:"lastUserID,omitempty"`
	TotalCount       *int32            `protobuf:"varint,9,opt,name=totalCount" json:"totalCount,omitempty"`
	UnreadCount      *int32            `protobuf:"varint,10,opt,name=unreadCount" json:"unreadCount,omitempty"`
	ActionURL        *string           `protobuf:"bytes,11,opt,name=actionURL" json:"actionURL,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ConversationGroup) Reset()                    { *m = ConversationGroup{} }
func (m *ConversationGroup) String() string            { return proto.CompactTextString(m) }
func (*ConversationGroup) ProtoMessage()               {}
func (*ConversationGroup) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

func (m *ConversationGroup) GetGroupID() string {
	if m != nil && m.GroupID != nil {
		return *m.GroupID
	}
	return ""
}

func (m *ConversationGroup) GetGroupType() ConversationType {
	if m != nil && m.GroupType != nil {
		return *m.GroupType
	}
	return ConversationType_CTUnknownX
}

func (m *ConversationGroup) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *ConversationGroup) GetActivityDate() *Timestamp {
	if m != nil {
		return m.ActivityDate
	}
	return nil
}

func (m *ConversationGroup) GetHeadlineText() string {
	if m != nil && m.HeadlineText != nil {
		return *m.HeadlineText
	}
	return ""
}

func (m *ConversationGroup) GetStatusText() string {
	if m != nil && m.StatusText != nil {
		return *m.StatusText
	}
	return ""
}

func (m *ConversationGroup) GetLastMessage() string {
	if m != nil && m.LastMessage != nil {
		return *m.LastMessage
	}
	return ""
}

func (m *ConversationGroup) GetLastUserID() string {
	if m != nil && m.LastUserID != nil {
		return *m.LastUserID
	}
	return ""
}

func (m *ConversationGroup) GetTotalCount() int32 {
	if m != nil && m.TotalCount != nil {
		return *m.TotalCount
	}
	return 0
}

func (m *ConversationGroup) GetUnreadCount() int32 {
	if m != nil && m.UnreadCount != nil {
		return *m.UnreadCount
	}
	return 0
}

func (m *ConversationGroup) GetActionURL() string {
	if m != nil && m.ActionURL != nil {
		return *m.ActionURL
	}
	return ""
}

type ConversationRequest struct {
	UserIDsDeprecated          []string      `protobuf:"bytes,1,rep,name=userIDs_deprecated" json:"userIDs_deprecated,omitempty"`
	ParentFeedPostIDDeprecated *string       `protobuf:"bytes,2,opt,name=parentFeedPostID_deprecated" json:"parentFeedPostID_deprecated,omitempty"`
	Conversation               *Conversation `protobuf:"bytes,3,opt,name=conversation" json:"conversation,omitempty"`
	XXX_unrecognized           []byte        `json:"-"`
}

func (m *ConversationRequest) Reset()                    { *m = ConversationRequest{} }
func (m *ConversationRequest) String() string            { return proto.CompactTextString(m) }
func (*ConversationRequest) ProtoMessage()               {}
func (*ConversationRequest) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

func (m *ConversationRequest) GetUserIDsDeprecated() []string {
	if m != nil {
		return m.UserIDsDeprecated
	}
	return nil
}

func (m *ConversationRequest) GetParentFeedPostIDDeprecated() string {
	if m != nil && m.ParentFeedPostIDDeprecated != nil {
		return *m.ParentFeedPostIDDeprecated
	}
	return ""
}

func (m *ConversationRequest) GetConversation() *Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

type ConversationResponse struct {
	Conversation     *Conversation  `protobuf:"bytes,1,opt,name=conversation" json:"conversation,omitempty"`
	Profiles         []*UserProfile `protobuf:"bytes,2,rep,name=profiles" json:"profiles,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *ConversationResponse) Reset()                    { *m = ConversationResponse{} }
func (m *ConversationResponse) String() string            { return proto.CompactTextString(m) }
func (*ConversationResponse) ProtoMessage()               {}
func (*ConversationResponse) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{3} }

func (m *ConversationResponse) GetConversation() *Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

func (m *ConversationResponse) GetProfiles() []*UserProfile {
	if m != nil {
		return m.Profiles
	}
	return nil
}

type FetchConversations struct {
	Timespan         *Timespan       `protobuf:"bytes,1,opt,name=timespan" json:"timespan,omitempty"`
	UserID           []string        `protobuf:"bytes,3,rep,name=userID" json:"userID,omitempty"`
	Conversations    []*Conversation `protobuf:"bytes,2,rep,name=conversations" json:"conversations,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *FetchConversations) Reset()                    { *m = FetchConversations{} }
func (m *FetchConversations) String() string            { return proto.CompactTextString(m) }
func (*FetchConversations) ProtoMessage()               {}
func (*FetchConversations) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{4} }

func (m *FetchConversations) GetTimespan() *Timespan {
	if m != nil {
		return m.Timespan
	}
	return nil
}

func (m *FetchConversations) GetUserID() []string {
	if m != nil {
		return m.UserID
	}
	return nil
}

func (m *FetchConversations) GetConversations() []*Conversation {
	if m != nil {
		return m.Conversations
	}
	return nil
}

type FetchConversationGroups struct {
	Timespan         *Timespan            `protobuf:"bytes,1,opt,name=timespan" json:"timespan,omitempty"`
	Conversations    []*ConversationGroup `protobuf:"bytes,2,rep,name=conversations" json:"conversations,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *FetchConversationGroups) Reset()                    { *m = FetchConversationGroups{} }
func (m *FetchConversationGroups) String() string            { return proto.CompactTextString(m) }
func (*FetchConversationGroups) ProtoMessage()               {}
func (*FetchConversationGroups) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{5} }

func (m *FetchConversationGroups) GetTimespan() *Timespan {
	if m != nil {
		return m.Timespan
	}
	return nil
}

func (m *FetchConversationGroups) GetConversations() []*ConversationGroup {
	if m != nil {
		return m.Conversations
	}
	return nil
}

type UpdateConversationStatus struct {
	ConversationID   *string            `protobuf:"bytes,1,opt,name=conversationID" json:"conversationID,omitempty"`
	Status           *UserMessageStatus `protobuf:"varint,2,opt,name=status,enum=BlitzMessage.UserMessageStatus" json:"status,omitempty"`
	ConversationType *ConversationType  `protobuf:"varint,3,opt,name=conversationType,enum=BlitzMessage.ConversationType" json:"conversationType,omitempty"`
	PaymentStatus    *PaymentStatus     `protobuf:"varint,4,opt,name=paymentStatus,enum=BlitzMessage.PaymentStatus" json:"paymentStatus,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *UpdateConversationStatus) Reset()                    { *m = UpdateConversationStatus{} }
func (m *UpdateConversationStatus) String() string            { return proto.CompactTextString(m) }
func (*UpdateConversationStatus) ProtoMessage()               {}
func (*UpdateConversationStatus) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{6} }

func (m *UpdateConversationStatus) GetConversationID() string {
	if m != nil && m.ConversationID != nil {
		return *m.ConversationID
	}
	return ""
}

func (m *UpdateConversationStatus) GetStatus() UserMessageStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return UserMessageStatus_MSUnknown
}

func (m *UpdateConversationStatus) GetConversationType() ConversationType {
	if m != nil && m.ConversationType != nil {
		return *m.ConversationType
	}
	return ConversationType_CTUnknownX
}

func (m *UpdateConversationStatus) GetPaymentStatus() PaymentStatus {
	if m != nil && m.PaymentStatus != nil {
		return *m.PaymentStatus
	}
	return PaymentStatus_PSUnknown
}

type UserMessage struct {
	MessageID        *string            `protobuf:"bytes,1,opt,name=messageID" json:"messageID,omitempty"`
	SenderID         *string            `protobuf:"bytes,2,opt,name=senderID" json:"senderID,omitempty"`
	ConversationID   *string            `protobuf:"bytes,3,opt,name=conversationID" json:"conversationID,omitempty"`
	Recipients       []string           `protobuf:"bytes,4,rep,name=recipients" json:"recipients,omitempty"`
	CreationDate     *Timestamp         `protobuf:"bytes,5,opt,name=creationDate" json:"creationDate,omitempty"`
	NotificationDate *Timestamp         `protobuf:"bytes,6,opt,name=notificationDate" json:"notificationDate,omitempty"`
	ReadDate         *Timestamp         `protobuf:"bytes,7,opt,name=readDate" json:"readDate,omitempty"`
	MessageType      *UserMessageType   `protobuf:"varint,8,opt,name=messageType,enum=BlitzMessage.UserMessageType" json:"messageType,omitempty"`
	MessageStatus    *UserMessageStatus `protobuf:"varint,9,opt,name=messageStatus,enum=BlitzMessage.UserMessageStatus" json:"messageStatus,omitempty"`
	MessageText      *string            `protobuf:"bytes,10,opt,name=messageText" json:"messageText,omitempty"`
	ActionIcon       *string            `protobuf:"bytes,11,opt,name=actionIcon" json:"actionIcon,omitempty"`
	ActionURL        *string            `protobuf:"bytes,12,opt,name=actionURL" json:"actionURL,omitempty"`
	PaymentStatus    *PaymentStatus     `protobuf:"varint,13,opt,name=paymentStatus,enum=BlitzMessage.PaymentStatus" json:"paymentStatus,omitempty"`
	Conversation     *Conversation      `protobuf:"bytes,14,opt,name=conversation" json:"conversation,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *UserMessage) Reset()                    { *m = UserMessage{} }
func (m *UserMessage) String() string            { return proto.CompactTextString(m) }
func (*UserMessage) ProtoMessage()               {}
func (*UserMessage) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{7} }

func (m *UserMessage) GetMessageID() string {
	if m != nil && m.MessageID != nil {
		return *m.MessageID
	}
	return ""
}

func (m *UserMessage) GetSenderID() string {
	if m != nil && m.SenderID != nil {
		return *m.SenderID
	}
	return ""
}

func (m *UserMessage) GetConversationID() string {
	if m != nil && m.ConversationID != nil {
		return *m.ConversationID
	}
	return ""
}

func (m *UserMessage) GetRecipients() []string {
	if m != nil {
		return m.Recipients
	}
	return nil
}

func (m *UserMessage) GetCreationDate() *Timestamp {
	if m != nil {
		return m.CreationDate
	}
	return nil
}

func (m *UserMessage) GetNotificationDate() *Timestamp {
	if m != nil {
		return m.NotificationDate
	}
	return nil
}

func (m *UserMessage) GetReadDate() *Timestamp {
	if m != nil {
		return m.ReadDate
	}
	return nil
}

func (m *UserMessage) GetMessageType() UserMessageType {
	if m != nil && m.MessageType != nil {
		return *m.MessageType
	}
	return UserMessageType_MTUnknown
}

func (m *UserMessage) GetMessageStatus() UserMessageStatus {
	if m != nil && m.MessageStatus != nil {
		return *m.MessageStatus
	}
	return UserMessageStatus_MSUnknown
}

func (m *UserMessage) GetMessageText() string {
	if m != nil && m.MessageText != nil {
		return *m.MessageText
	}
	return ""
}

func (m *UserMessage) GetActionIcon() string {
	if m != nil && m.ActionIcon != nil {
		return *m.ActionIcon
	}
	return ""
}

func (m *UserMessage) GetActionURL() string {
	if m != nil && m.ActionURL != nil {
		return *m.ActionURL
	}
	return ""
}

func (m *UserMessage) GetPaymentStatus() PaymentStatus {
	if m != nil && m.PaymentStatus != nil {
		return *m.PaymentStatus
	}
	return PaymentStatus_PSUnknown
}

func (m *UserMessage) GetConversation() *Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

type UserMessageUpdate struct {
	Timespan         *Timespan      `protobuf:"bytes,1,opt,name=timespan" json:"timespan,omitempty"`
	Messages         []*UserMessage `protobuf:"bytes,2,rep,name=messages" json:"messages,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *UserMessageUpdate) Reset()                    { *m = UserMessageUpdate{} }
func (m *UserMessageUpdate) String() string            { return proto.CompactTextString(m) }
func (*UserMessageUpdate) ProtoMessage()               {}
func (*UserMessageUpdate) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{8} }

func (m *UserMessageUpdate) GetTimespan() *Timespan {
	if m != nil {
		return m.Timespan
	}
	return nil
}

func (m *UserMessageUpdate) GetMessages() []*UserMessage {
	if m != nil {
		return m.Messages
	}
	return nil
}

func init() {
	proto.RegisterType((*Conversation)(nil), "BlitzMessage.Conversation")
	proto.RegisterType((*ConversationGroup)(nil), "BlitzMessage.ConversationGroup")
	proto.RegisterType((*ConversationRequest)(nil), "BlitzMessage.ConversationRequest")
	proto.RegisterType((*ConversationResponse)(nil), "BlitzMessage.ConversationResponse")
	proto.RegisterType((*FetchConversations)(nil), "BlitzMessage.FetchConversations")
	proto.RegisterType((*FetchConversationGroups)(nil), "BlitzMessage.FetchConversationGroups")
	proto.RegisterType((*UpdateConversationStatus)(nil), "BlitzMessage.UpdateConversationStatus")
	proto.RegisterType((*UserMessage)(nil), "BlitzMessage.UserMessage")
	proto.RegisterType((*UserMessageUpdate)(nil), "BlitzMessage.UserMessageUpdate")
	proto.RegisterEnum("BlitzMessage.UserMessageStatus", UserMessageStatus_name, UserMessageStatus_value)
	proto.RegisterEnum("BlitzMessage.ConversationType", ConversationType_name, ConversationType_value)
	proto.RegisterEnum("BlitzMessage.PaymentStatus", PaymentStatus_name, PaymentStatus_value)
	proto.RegisterEnum("BlitzMessage.UserMessageType", UserMessageType_name, UserMessageType_value)
}

func init() { proto.RegisterFile("UserMessages.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 1140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x56, 0x4b, 0x6f, 0xdb, 0x46,
	0x10, 0x0e, 0xf5, 0xb2, 0x34, 0x7a, 0x98, 0xa2, 0x5f, 0x8c, 0x8c, 0x36, 0x81, 0x7a, 0x49, 0x5d,
	0xc4, 0x69, 0x7c, 0x28, 0x7a, 0x0a, 0x60, 0xcb, 0x75, 0x61, 0xa0, 0x32, 0x04, 0x53, 0x06, 0x7a,
	0x2b, 0x68, 0x6a, 0x6d, 0x31, 0x95, 0xb8, 0xec, 0xee, 0x2a, 0x89, 0xdb, 0x53, 0x6f, 0xb9, 0xf6,
	0xdc, 0x73, 0x7f, 0x50, 0xf3, 0x6f, 0x7a, 0xeb, 0xec, 0x90, 0xb4, 0x97, 0xb2, 0x2d, 0xd9, 0xb9,
	0x91, 0xb3, 0xbb, 0xf3, 0xcd, 0xe3, 0xdb, 0x6f, 0x16, 0x9c, 0x33, 0xc9, 0x44, 0x9f, 0x49, 0xe9,
	0x5f, 0x32, 0xb9, 0x1b, 0x0b, 0xae, 0xb8, 0xd3, 0x38, 0x98, 0x84, 0xea, 0xf7, 0xd4, 0xd8, 0xd9,
	0xe6, 0xe7, 0x6f, 0x59, 0xa0, 0xc2, 0x77, 0x2c, 0x78, 0x39, 0x62, 0x32, 0x10, 0x61, 0xac, 0xb8,
	0x48, 0xb6, 0x76, 0xea, 0xc3, 0xab, 0x38, 0x3b, 0xd7, 0x21, 0x5f, 0x03, 0xc1, 0x2f, 0xc2, 0xc9,
	0xb5, 0xad, 0x35, 0xf0, 0xaf, 0xa6, 0x2c, 0x52, 0xe9, 0x7f, 0xf7, 0xaf, 0x0a, 0x34, 0x7a, 0x3c,
	0x7a, 0xc7, 0x84, 0xf4, 0x55, 0xc8, 0x23, 0x67, 0x13, 0x5a, 0x81, 0xf1, 0x7f, 0x7c, 0xe8, 0x5a,
	0xcf, 0xad, 0x17, 0x35, 0x67, 0x0d, 0xea, 0x61, 0x14, 0xaa, 0xd0, 0x47, 0x30, 0x34, 0x16, 0xc8,
	0xf8, 0x0a, 0x2a, 0x52, 0xf9, 0x6a, 0x26, 0xdd, 0x22, 0xfe, 0xb7, 0xf6, 0x9e, 0xed, 0x9a, 0xa1,
	0xee, 0x1a, 0xb9, 0x78, 0xb4, 0xcd, 0x71, 0xc1, 0x8e, 0x7d, 0x81, 0xf8, 0x47, 0x8c, 0x8d, 0x06,
	0x5c, 0x2a, 0x74, 0x55, 0x22, 0x57, 0x2f, 0xa1, 0x11, 0x08, 0x46, 0x98, 0x87, 0xbe, 0x62, 0x6e,
	0x19, 0xad, 0xf5, 0xbd, 0xad, 0xbc, 0xc3, 0x61, 0x38, 0x65, 0x08, 0x38, 0x8d, 0x9d, 0xd7, 0x60,
	0x4f, 0x7c, 0xa9, 0xf6, 0x75, 0x21, 0x42, 0x75, 0x45, 0x47, 0x2a, 0x8b, 0x8f, 0x60, 0x06, 0xfa,
	0x48, 0xba, 0xe0, 0xae, 0x10, 0xec, 0x3a, 0x34, 0xa6, 0x89, 0xa1, 0xc7, 0x67, 0x91, 0x72, 0xab,
	0x68, 0x2d, 0xeb, 0xad, 0xb3, 0x08, 0xa3, 0x19, 0x25, 0xc6, 0x1a, 0x19, 0xdb, 0x50, 0x9b, 0xb2,
	0xe9, 0x39, 0xc3, 0xf4, 0xa5, 0x0b, 0xcf, 0x8b, 0x78, 0xfa, 0x1b, 0x80, 0x60, 0xc2, 0x25, 0x1b,
	0x11, 0x7e, 0x7d, 0x31, 0x3e, 0x42, 0x8d, 0xd1, 0xe5, 0x24, 0x8c, 0xd8, 0x90, 0x7d, 0x50, 0x6e,
	0x83, 0x02, 0xe8, 0x80, 0x63, 0x26, 0xa2, 0x4b, 0x86, 0x35, 0x69, 0xd2, 0xda, 0x06, 0x34, 0xb3,
	0x35, 0x1e, 0x9d, 0x9d, 0xfe, 0xe4, 0xb6, 0xc8, 0xfc, 0x3d, 0xd8, 0x66, 0x8b, 0x74, 0xcb, 0xdd,
	0x55, 0xaa, 0xff, 0x97, 0x79, 0xec, 0xde, 0xdc, 0x2e, 0xe7, 0x29, 0xb4, 0x43, 0x79, 0x24, 0x18,
	0xfb, 0x65, 0xc4, 0x62, 0xc1, 0x02, 0x8c, 0x7a, 0xe4, 0xda, 0x78, 0xb4, 0xea, 0xd8, 0x50, 0x0d,
	0xc6, 0xbe, 0xb8, 0x64, 0x88, 0xde, 0x26, 0x98, 0x3d, 0x68, 0xa6, 0x64, 0x49, 0x9a, 0xe7, 0x3a,
	0x84, 0xb1, 0x9d, 0xc7, 0xc8, 0x6d, 0xd1, 0x5e, 0xd8, 0x87, 0x98, 0x09, 0xdd, 0xd7, 0x35, 0xf2,
	0xd2, 0x84, 0xb2, 0xe2, 0x71, 0x18, 0xb8, 0xeb, 0xf4, 0xfb, 0x35, 0xc2, 0xf8, 0x93, 0x89, 0xae,
	0x8a, 0xbb, 0xb1, 0xb8, 0x5e, 0x18, 0xac, 0x9c, 0x5d, 0xe2, 0x35, 0xc0, 0x20, 0x0f, 0x67, 0x82,
	0xb2, 0x70, 0x37, 0xf1, 0x8c, 0x85, 0xbc, 0x6b, 0x5d, 0x2f, 0xd1, 0x01, 0x77, 0x0b, 0xfb, 0xb1,
	0xc0, 0x17, 0x36, 0xca, 0x0f, 0x02, 0x16, 0x2b, 0x6a, 0x94, 0xbb, 0x10, 0xb8, 0xfb, 0x4f, 0x01,
	0xda, 0x66, 0xe9, 0x7e, 0x14, 0x7c, 0x16, 0x3b, 0xab, 0xb0, 0x72, 0xa9, 0x3f, 0xae, 0x6f, 0xc4,
	0x6b, 0xa8, 0x91, 0x81, 0xea, 0x5f, 0x78, 0x50, 0xfd, 0x5b, 0x50, 0x99, 0x25, 0x0d, 0x2e, 0x66,
	0xa4, 0xf7, 0x4d, 0x06, 0x97, 0x1e, 0xc7, 0xa0, 0x32, 0x39, 0x71, 0x00, 0x92, 0x4b, 0x48, 0xb6,
	0x4a, 0x76, 0x5b, 0x6f, 0x73, 0x1d, 0x37, 0x6a, 0x63, 0x4a, 0xb1, 0x6a, 0x66, 0x53, 0x5c, 0xf9,
	0x13, 0x93, 0xe8, 0x73, 0xec, 0x87, 0x8c, 0xfd, 0xfe, 0x35, 0x0f, 0x35, 0xd3, 0x6b, 0xdd, 0x8f,
	0x16, 0xac, 0x99, 0x29, 0x9e, 0xb2, 0xdf, 0x66, 0x18, 0xa9, 0xa6, 0x74, 0x92, 0xa5, 0x34, 0x69,
	0x66, 0xd1, 0x8d, 0xf9, 0x0a, 0xb6, 0xe7, 0x05, 0xc0, 0xdc, 0x94, 0xc8, 0xca, 0xb7, 0xa8, 0x05,
	0x86, 0x5f, 0x2a, 0x56, 0x7d, 0xaf, 0x73, 0x7f, 0x71, 0xbb, 0x33, 0x58, 0xcf, 0x47, 0x22, 0x63,
	0x1e, 0x49, 0x76, 0xcb, 0x93, 0xb5, 0xcc, 0x13, 0x32, 0xa5, 0x1a, 0xa7, 0x92, 0x89, 0xd1, 0x68,
	0x52, 0x3d, 0xbd, 0x2d, 0x6a, 0xa9, 0xa8, 0x76, 0xff, 0xb4, 0xc0, 0x39, 0x62, 0x2a, 0x18, 0x9b,
	0x2e, 0xa4, 0xf3, 0x02, 0xaa, 0x4a, 0x37, 0x2d, 0xf6, 0x33, 0xc4, 0xcd, 0x3b, 0x5a, 0x8a, 0xab,
	0x39, 0x42, 0x14, 0x89, 0x53, 0x4d, 0x33, 0xde, 0x2c, 0x84, 0x45, 0xa9, 0xff, 0x01, 0x5b, 0xb7,
	0x42, 0x20, 0xc6, 0x3e, 0x26, 0x8e, 0xef, 0xee, 0xc6, 0x7d, 0x76, 0x3f, 0x2e, 0x41, 0x74, 0xff,
	0xb5, 0xc0, 0x3d, 0x8b, 0x47, 0xd8, 0x3b, 0x73, 0x2d, 0x15, 0x83, 0xfb, 0x46, 0xc9, 0xcd, 0xd4,
	0x28, 0x3c, 0x6c, 0x6a, 0xdc, 0x25, 0x78, 0xc5, 0x07, 0x5d, 0x38, 0xd4, 0xb0, 0x38, 0xa7, 0x61,
	0xa5, 0xa5, 0x1a, 0xd6, 0xfd, 0xaf, 0x08, 0x75, 0x23, 0x86, 0x44, 0xf7, 0xe9, 0xf3, 0x3a, 0x03,
	0x94, 0x39, 0xc9, 0xa2, 0x11, 0xbb, 0x99, 0x84, 0xb7, 0x73, 0x2d, 0x66, 0xf7, 0x0b, 0xb9, 0x1d,
	0xc6, 0xa1, 0x9e, 0xb9, 0x88, 0x5e, 0xfc, 0xac, 0x51, 0x17, 0x71, 0x15, 0x5e, 0x84, 0xc1, 0xcd,
	0x91, 0x25, 0xa3, 0x0e, 0x55, 0x56, 0xdf, 0x5f, 0xda, 0xba, 0xb2, 0x78, 0xeb, 0x1e, 0xd4, 0xd3,
	0xec, 0xa8, 0xac, 0x55, 0xaa, 0xcf, 0x17, 0xf7, 0x76, 0x84, 0xaa, 0x8a, 0x6c, 0x99, 0x9a, 0x0d,
	0x22, 0xdd, 0x78, 0x40, 0x1f, 0xd7, 0x6e, 0xb0, 0xb4, 0x54, 0x41, 0x56, 0xa1, 0x44, 0x58, 0x8e,
	0xb1, 0x80, 0x89, 0xb2, 0xe4, 0xc5, 0xa6, 0x91, 0x4d, 0xa3, 0x7c, 0x27, 0x9b, 0xcb, 0xa7, 0xd1,
	0xfc, 0xed, 0x6f, 0x2d, 0xd5, 0x91, 0xb7, 0xd0, 0x36, 0xc2, 0x4e, 0x98, 0xfd, 0x88, 0x6b, 0x84,
	0xe2, 0x91, 0x26, 0xb8, 0x40, 0x3c, 0xd2, 0xef, 0x9d, 0x71, 0x0e, 0x2b, 0x0d, 0xb9, 0x09, 0xb5,
	0xbe, 0x77, 0x16, 0xfd, 0x1a, 0xf1, 0xf7, 0x91, 0xfd, 0x04, 0x87, 0x4e, 0xbd, 0xef, 0x1d, 0x4f,
	0x63, 0x2e, 0x94, 0x1f, 0x29, 0xdb, 0x72, 0x6a, 0x50, 0xee, 0x7b, 0x27, 0xec, 0xbd, 0x5d, 0xc0,
	0xba, 0x55, 0xfa, 0xde, 0x29, 0xb6, 0xd9, 0x2e, 0xa2, 0x8e, 0x40, 0xdf, 0xdb, 0x17, 0xc1, 0x18,
	0x9f, 0x85, 0x23, 0xbb, 0xe4, 0x34, 0xa0, 0xda, 0xf7, 0x7a, 0xf4, 0x34, 0xb1, 0xcb, 0x3b, 0x17,
	0x60, 0xdf, 0x31, 0x8a, 0xa0, 0x37, 0x4c, 0x81, 0x7e, 0x46, 0x24, 0x07, 0x5a, 0xbd, 0xa1, 0xb9,
	0x0b, 0xc1, 0x68, 0x4f, 0x26, 0xd4, 0x88, 0x48, 0x7b, 0x4e, 0x0c, 0x2e, 0x22, 0x32, 0x46, 0x81,
	0xe7, 0x70, 0xa4, 0xdb, 0xa5, 0x9d, 0xbf, 0xad, 0xb9, 0x27, 0x83, 0x4e, 0x67, 0x60, 0xa4, 0x83,
	0x61, 0x0d, 0xbc, 0x63, 0x7a, 0x81, 0xa0, 0xfb, 0x36, 0xee, 0xf6, 0x86, 0x22, 0xf4, 0x27, 0x03,
	0x26, 0x42, 0x3e, 0x42, 0x84, 0x0d, 0x68, 0x0f, 0xbc, 0xd4, 0x85, 0x1e, 0x27, 0xa1, 0x60, 0x3a,
	0xbd, 0x2d, 0x58, 0x1b, 0x78, 0x3f, 0xd0, 0xc3, 0xe2, 0x04, 0xc3, 0x91, 0xfb, 0x34, 0xcb, 0x31,
	0xcf, 0x75, 0xb0, 0xb3, 0x85, 0x53, 0xa6, 0x9f, 0xc5, 0x3a, 0x5f, 0xd3, 0x9a, 0xec, 0x44, 0x6b,
	0x65, 0x27, 0x86, 0xd5, 0x79, 0x22, 0xeb, 0x6a, 0x0f, 0x73, 0xe1, 0xf5, 0x87, 0xde, 0x15, 0xbe,
	0x2a, 0xa6, 0x18, 0x1e, 0x66, 0xdb, 0xcf, 0x57, 0xa4, 0x90, 0xd8, 0xe6, 0x2a, 0xe0, 0xc2, 0x7a,
	0x7f, 0x98, 0xbc, 0xd1, 0x72, 0x2b, 0xa5, 0x83, 0x57, 0x9f, 0xde, 0x14, 0xe0, 0xc9, 0xa7, 0x37,
	0x45, 0xc7, 0x3a, 0xc0, 0x4f, 0xd7, 0x82, 0x4e, 0xc0, 0xa7, 0xbb, 0xe7, 0x9a, 0x11, 0x63, 0x26,
	0x58, 0x8e, 0x1b, 0x1f, 0x2d, 0xeb, 0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x44, 0x32, 0x7a, 0x6c,
	0xfe, 0x0b, 0x00, 0x00,
}
