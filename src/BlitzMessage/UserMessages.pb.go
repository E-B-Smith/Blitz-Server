// Code generated by protoc-gen-go.
// source: UserMessages.proto
// DO NOT EDIT!

package BlitzMessage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"


// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type UserMessageStatus int32

const (
	UserMessageStatus_MSUnknown   UserMessageStatus = 0
	UserMessageStatus_MSImportant UserMessageStatus = 1
	UserMessageStatus_MSNew       UserMessageStatus = 2
	UserMessageStatus_MSRead      UserMessageStatus = 3
	UserMessageStatus_MSArchived  UserMessageStatus = 4
	UserMessageStatus_MSClosed    UserMessageStatus = 5
)

var UserMessageStatus_name = map[int32]string{
	0: "MSUnknown",
	1: "MSImportant",
	2: "MSNew",
	3: "MSRead",
	4: "MSArchived",
	5: "MSClosed",
}
var UserMessageStatus_value = map[string]int32{
	"MSUnknown":   0,
	"MSImportant": 1,
	"MSNew":       2,
	"MSRead":      3,
	"MSArchived":  4,
	"MSClosed":    5,
}

func (x UserMessageStatus) Enum() *UserMessageStatus {
	p := new(UserMessageStatus)
	*p = x
	return p
}
func (x UserMessageStatus) String() string {
	return proto.EnumName(UserMessageStatus_name, int32(x))
}
func (x *UserMessageStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserMessageStatus_value, data, "UserMessageStatus")
	if err != nil {
		return err
	}
	*x = UserMessageStatus(value)
	return nil
}
func (UserMessageStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

type ConversationType int32

const (
	ConversationType_CTUnknownX     ConversationType = 0
	ConversationType_CTConversation ConversationType = 1
	ConversationType_CTFeedPost     ConversationType = 2
	ConversationType_CTNotification ConversationType = 3
)

var ConversationType_name = map[int32]string{
	0: "CTUnknownX",
	1: "CTConversation",
	2: "CTFeedPost",
	3: "CTNotification",
}
var ConversationType_value = map[string]int32{
	"CTUnknownX":     0,
	"CTConversation": 1,
	"CTFeedPost":     2,
	"CTNotification": 3,
}

func (x ConversationType) Enum() *ConversationType {
	p := new(ConversationType)
	*p = x
	return p
}
func (x ConversationType) String() string {
	return proto.EnumName(ConversationType_name, int32(x))
}
func (x *ConversationType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ConversationType_value, data, "ConversationType")
	if err != nil {
		return err
	}
	*x = ConversationType(value)
	return nil
}
func (ConversationType) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

type PaymentStatus int32

const (
	PaymentStatus_PSUnknown           PaymentStatus = 0
	PaymentStatus_PSIsFree            PaymentStatus = 1
	PaymentStatus_PSTrialPeriod       PaymentStatus = 2
	PaymentStatus_PSPaymentRequired   PaymentStatus = 3
	PaymentStatus_PSExpertNeedsAccept PaymentStatus = 4
	PaymentStatus_PSExpertRejected    PaymentStatus = 5
	PaymentStatus_PSExpertAccepted    PaymentStatus = 6
)

var PaymentStatus_name = map[int32]string{
	0: "PSUnknown",
	1: "PSIsFree",
	2: "PSTrialPeriod",
	3: "PSPaymentRequired",
	4: "PSExpertNeedsAccept",
	5: "PSExpertRejected",
	6: "PSExpertAccepted",
}
var PaymentStatus_value = map[string]int32{
	"PSUnknown":           0,
	"PSIsFree":            1,
	"PSTrialPeriod":       2,
	"PSPaymentRequired":   3,
	"PSExpertNeedsAccept": 4,
	"PSExpertRejected":    5,
	"PSExpertAccepted":    6,
}

func (x PaymentStatus) Enum() *PaymentStatus {
	p := new(PaymentStatus)
	*p = x
	return p
}
func (x PaymentStatus) String() string {
	return proto.EnumName(PaymentStatus_name, int32(x))
}
func (x *PaymentStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PaymentStatus_value, data, "PaymentStatus")
	if err != nil {
		return err
	}
	*x = PaymentStatus(value)
	return nil
}
func (PaymentStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

type UserMessageType int32

const (
	UserMessageType_MTUnknown            UserMessageType = 0
	UserMessageType_MTSystem             UserMessageType = 1
	UserMessageType_MTConversation       UserMessageType = 2
	UserMessageType_MTNotification       UserMessageType = 3
	UserMessageType_MTActionNotification UserMessageType = 4
)

var UserMessageType_name = map[int32]string{
	0: "MTUnknown",
	1: "MTSystem",
	2: "MTConversation",
	3: "MTNotification",
	4: "MTActionNotification",
}
var UserMessageType_value = map[string]int32{
	"MTUnknown":            0,
	"MTSystem":             1,
	"MTConversation":       2,
	"MTNotification":       3,
	"MTActionNotification": 4,
}

func (x UserMessageType) Enum() *UserMessageType {
	p := new(UserMessageType)
	*p = x
	return p
}
func (x UserMessageType) String() string {
	return proto.EnumName(UserMessageType_name, int32(x))
}
func (x *UserMessageType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UserMessageType_value, data, "UserMessageType")
	if err != nil {
		return err
	}
	*x = UserMessageType(value)
	return nil
}
func (UserMessageType) EnumDescriptor() ([]byte, []int) { return fileDescriptor9, []int{3} }

type Conversation struct {
	ConversationID     *string            `protobuf:"bytes,1,opt,name=conversationID" json:"conversationID,omitempty"`
	InitiatorUserID    *string            `protobuf:"bytes,2,opt,name=initiatorUserID" json:"initiatorUserID,omitempty"`
	Status             *UserMessageStatus `protobuf:"varint,3,opt,name=status,enum=BlitzMessage.UserMessageStatus" json:"status,omitempty"`
	ParentFeedPostID   *string            `protobuf:"bytes,4,opt,name=parentFeedPostID" json:"parentFeedPostID,omitempty"`
	CreationDate       *Timestamp         `protobuf:"bytes,5,opt,name=creationDate" json:"creationDate,omitempty"`
	LastActivityDate   *Timestamp         `protobuf:"bytes,6,opt,name=lastActivityDate" json:"lastActivityDate,omitempty"`
	LastMessage        *string            `protobuf:"bytes,7,opt,name=lastMessage" json:"lastMessage,omitempty"`
	MessageCount       *int32             `protobuf:"varint,8,opt,name=messageCount" json:"messageCount,omitempty"`
	UnreadCount        *int32             `protobuf:"varint,9,opt,name=unreadCount" json:"unreadCount,omitempty"`
	MemberIDs          []string           `protobuf:"bytes,10,rep,name=memberIDs" json:"memberIDs,omitempty"`
	ClosedDate         *Timestamp         `protobuf:"bytes,11,opt,name=closedDate" json:"closedDate,omitempty"`
	HeadlineText       *string            `protobuf:"bytes,12,opt,name=headlineText" json:"headlineText,omitempty"`
	LastActivityUserID *string            `protobuf:"bytes,13,opt,name=lastActivityUserID" json:"lastActivityUserID,omitempty"`
	LastActionURL      *string            `protobuf:"bytes,14,opt,name=lastActionURL" json:"lastActionURL,omitempty"`
	ConversationType   *ConversationType  `protobuf:"varint,15,opt,name=conversationType,enum=BlitzMessage.ConversationType" json:"conversationType,omitempty"`
	IsFreeDeprecated   *bool              `protobuf:"varint,16,opt,name=isFree_deprecated" json:"isFree_deprecated,omitempty"`
	ChargeID           *string            `protobuf:"bytes,17,opt,name=chargeID" json:"chargeID,omitempty"`
	PaymentStatus      *PaymentStatus     `protobuf:"varint,18,opt,name=PaymentStatus,enum=BlitzMessage.PaymentStatus" json:"PaymentStatus,omitempty"`
	XXX_unrecognized   []byte             `json:"-"`
}

func (m *Conversation) Reset()                    { *m = Conversation{} }
func (m *Conversation) String() string            { return proto.CompactTextString(m) }
func (*Conversation) ProtoMessage()               {}
func (*Conversation) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *Conversation) GetConversationID() string {
	if m != nil && m.ConversationID != nil {
		return *m.ConversationID
	}
	return ""
}

func (m *Conversation) GetInitiatorUserID() string {
	if m != nil && m.InitiatorUserID != nil {
		return *m.InitiatorUserID
	}
	return ""
}

func (m *Conversation) GetStatus() UserMessageStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return UserMessageStatus_MSUnknown
}

func (m *Conversation) GetParentFeedPostID() string {
	if m != nil && m.ParentFeedPostID != nil {
		return *m.ParentFeedPostID
	}
	return ""
}

func (m *Conversation) GetCreationDate() *Timestamp {
	if m != nil {
		return m.CreationDate
	}
	return nil
}

func (m *Conversation) GetLastActivityDate() *Timestamp {
	if m != nil {
		return m.LastActivityDate
	}
	return nil
}

func (m *Conversation) GetLastMessage() string {
	if m != nil && m.LastMessage != nil {
		return *m.LastMessage
	}
	return ""
}

func (m *Conversation) GetMessageCount() int32 {
	if m != nil && m.MessageCount != nil {
		return *m.MessageCount
	}
	return 0
}

func (m *Conversation) GetUnreadCount() int32 {
	if m != nil && m.UnreadCount != nil {
		return *m.UnreadCount
	}
	return 0
}

func (m *Conversation) GetMemberIDs() []string {
	if m != nil {
		return m.MemberIDs
	}
	return nil
}

func (m *Conversation) GetClosedDate() *Timestamp {
	if m != nil {
		return m.ClosedDate
	}
	return nil
}

func (m *Conversation) GetHeadlineText() string {
	if m != nil && m.HeadlineText != nil {
		return *m.HeadlineText
	}
	return ""
}

func (m *Conversation) GetLastActivityUserID() string {
	if m != nil && m.LastActivityUserID != nil {
		return *m.LastActivityUserID
	}
	return ""
}

func (m *Conversation) GetLastActionURL() string {
	if m != nil && m.LastActionURL != nil {
		return *m.LastActionURL
	}
	return ""
}

func (m *Conversation) GetConversationType() ConversationType {
	if m != nil && m.ConversationType != nil {
		return *m.ConversationType
	}
	return ConversationType_CTUnknownX
}

func (m *Conversation) GetIsFreeDeprecated() bool {
	if m != nil && m.IsFreeDeprecated != nil {
		return *m.IsFreeDeprecated
	}
	return false
}

func (m *Conversation) GetChargeID() string {
	if m != nil && m.ChargeID != nil {
		return *m.ChargeID
	}
	return ""
}

func (m *Conversation) GetPaymentStatus() PaymentStatus {
	if m != nil && m.PaymentStatus != nil {
		return *m.PaymentStatus
	}
	return PaymentStatus_PSUnknown
}

type ConversationGroup struct {
	GroupID          *string           `protobuf:"bytes,1,opt,name=groupID" json:"groupID,omitempty"`
	GroupType        *ConversationType `protobuf:"varint,2,opt,name=groupType,enum=BlitzMessage.ConversationType" json:"groupType,omitempty"`
	UserID           *string           `protobuf:"bytes,3,opt,name=userID" json:"userID,omitempty"`
	ActivityDate     *Timestamp        `protobuf:"bytes,4,opt,name=activityDate" json:"activityDate,omitempty"`
	HeadlineText     *string           `protobuf:"bytes,5,opt,name=headlineText" json:"headlineText,omitempty"`
	StatusText       *string           `protobuf:"bytes,6,opt,name=statusText" json:"statusText,omitempty"`
	LastMessage      *string           `protobuf:"bytes,7,opt,name=lastMessage" json:"lastMessage,omitempty"`
	LastUserID       *string           `protobuf:"bytes,8,opt,name=lastUserID" json:"lastUserID,omitempty"`
	TotalCount       *int32            `protobuf:"varint,9,opt,name=totalCount" json:"totalCount,omitempty"`
	UnreadCount      *int32            `protobuf:"varint,10,opt,name=unreadCount" json:"unreadCount,omitempty"`
	ActionURL        *string           `protobuf:"bytes,11,opt,name=actionURL" json:"actionURL,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *ConversationGroup) Reset()                    { *m = ConversationGroup{} }
func (m *ConversationGroup) String() string            { return proto.CompactTextString(m) }
func (*ConversationGroup) ProtoMessage()               {}
func (*ConversationGroup) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

func (m *ConversationGroup) GetGroupID() string {
	if m != nil && m.GroupID != nil {
		return *m.GroupID
	}
	return ""
}

func (m *ConversationGroup) GetGroupType() ConversationType {
	if m != nil && m.GroupType != nil {
		return *m.GroupType
	}
	return ConversationType_CTUnknownX
}

func (m *ConversationGroup) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *ConversationGroup) GetActivityDate() *Timestamp {
	if m != nil {
		return m.ActivityDate
	}
	return nil
}

func (m *ConversationGroup) GetHeadlineText() string {
	if m != nil && m.HeadlineText != nil {
		return *m.HeadlineText
	}
	return ""
}

func (m *ConversationGroup) GetStatusText() string {
	if m != nil && m.StatusText != nil {
		return *m.StatusText
	}
	return ""
}

func (m *ConversationGroup) GetLastMessage() string {
	if m != nil && m.LastMessage != nil {
		return *m.LastMessage
	}
	return ""
}

func (m *ConversationGroup) GetLastUserID() string {
	if m != nil && m.LastUserID != nil {
		return *m.LastUserID
	}
	return ""
}

func (m *ConversationGroup) GetTotalCount() int32 {
	if m != nil && m.TotalCount != nil {
		return *m.TotalCount
	}
	return 0
}

func (m *ConversationGroup) GetUnreadCount() int32 {
	if m != nil && m.UnreadCount != nil {
		return *m.UnreadCount
	}
	return 0
}

func (m *ConversationGroup) GetActionURL() string {
	if m != nil && m.ActionURL != nil {
		return *m.ActionURL
	}
	return ""
}

type ConversationRequest struct {
	UserIDs          []string `protobuf:"bytes,1,rep,name=userIDs" json:"userIDs,omitempty"`
	ParentFeedPostID *string  `protobuf:"bytes,2,opt,name=parentFeedPostID" json:"parentFeedPostID,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *ConversationRequest) Reset()                    { *m = ConversationRequest{} }
func (m *ConversationRequest) String() string            { return proto.CompactTextString(m) }
func (*ConversationRequest) ProtoMessage()               {}
func (*ConversationRequest) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

func (m *ConversationRequest) GetUserIDs() []string {
	if m != nil {
		return m.UserIDs
	}
	return nil
}

func (m *ConversationRequest) GetParentFeedPostID() string {
	if m != nil && m.ParentFeedPostID != nil {
		return *m.ParentFeedPostID
	}
	return ""
}

type ConversationResponse struct {
	Conversation     *Conversation  `protobuf:"bytes,1,opt,name=conversation" json:"conversation,omitempty"`
	Profiles         []*UserProfile `protobuf:"bytes,2,rep,name=profiles" json:"profiles,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *ConversationResponse) Reset()                    { *m = ConversationResponse{} }
func (m *ConversationResponse) String() string            { return proto.CompactTextString(m) }
func (*ConversationResponse) ProtoMessage()               {}
func (*ConversationResponse) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{3} }

func (m *ConversationResponse) GetConversation() *Conversation {
	if m != nil {
		return m.Conversation
	}
	return nil
}

func (m *ConversationResponse) GetProfiles() []*UserProfile {
	if m != nil {
		return m.Profiles
	}
	return nil
}

type FetchConversations struct {
	Timespan         *Timespan       `protobuf:"bytes,1,opt,name=timespan" json:"timespan,omitempty"`
	UserID           []string        `protobuf:"bytes,3,rep,name=userID" json:"userID,omitempty"`
	Conversations    []*Conversation `protobuf:"bytes,2,rep,name=conversations" json:"conversations,omitempty"`
	XXX_unrecognized []byte          `json:"-"`
}

func (m *FetchConversations) Reset()                    { *m = FetchConversations{} }
func (m *FetchConversations) String() string            { return proto.CompactTextString(m) }
func (*FetchConversations) ProtoMessage()               {}
func (*FetchConversations) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{4} }

func (m *FetchConversations) GetTimespan() *Timespan {
	if m != nil {
		return m.Timespan
	}
	return nil
}

func (m *FetchConversations) GetUserID() []string {
	if m != nil {
		return m.UserID
	}
	return nil
}

func (m *FetchConversations) GetConversations() []*Conversation {
	if m != nil {
		return m.Conversations
	}
	return nil
}

type FetchConversationGroups struct {
	Timespan         *Timespan            `protobuf:"bytes,1,opt,name=timespan" json:"timespan,omitempty"`
	Conversations    []*ConversationGroup `protobuf:"bytes,2,rep,name=conversations" json:"conversations,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *FetchConversationGroups) Reset()                    { *m = FetchConversationGroups{} }
func (m *FetchConversationGroups) String() string            { return proto.CompactTextString(m) }
func (*FetchConversationGroups) ProtoMessage()               {}
func (*FetchConversationGroups) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{5} }

func (m *FetchConversationGroups) GetTimespan() *Timespan {
	if m != nil {
		return m.Timespan
	}
	return nil
}

func (m *FetchConversationGroups) GetConversations() []*ConversationGroup {
	if m != nil {
		return m.Conversations
	}
	return nil
}

type UpdateConversationStatus struct {
	ConversationID   *string            `protobuf:"bytes,1,opt,name=conversationID" json:"conversationID,omitempty"`
	Status           *UserMessageStatus `protobuf:"varint,2,opt,name=status,enum=BlitzMessage.UserMessageStatus" json:"status,omitempty"`
	ConversationType *ConversationType  `protobuf:"varint,3,opt,name=conversationType,enum=BlitzMessage.ConversationType" json:"conversationType,omitempty"`
	PaymentStatus    *PaymentStatus     `protobuf:"varint,4,opt,name=paymentStatus,enum=BlitzMessage.PaymentStatus" json:"paymentStatus,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *UpdateConversationStatus) Reset()                    { *m = UpdateConversationStatus{} }
func (m *UpdateConversationStatus) String() string            { return proto.CompactTextString(m) }
func (*UpdateConversationStatus) ProtoMessage()               {}
func (*UpdateConversationStatus) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{6} }

func (m *UpdateConversationStatus) GetConversationID() string {
	if m != nil && m.ConversationID != nil {
		return *m.ConversationID
	}
	return ""
}

func (m *UpdateConversationStatus) GetStatus() UserMessageStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return UserMessageStatus_MSUnknown
}

func (m *UpdateConversationStatus) GetConversationType() ConversationType {
	if m != nil && m.ConversationType != nil {
		return *m.ConversationType
	}
	return ConversationType_CTUnknownX
}

func (m *UpdateConversationStatus) GetPaymentStatus() PaymentStatus {
	if m != nil && m.PaymentStatus != nil {
		return *m.PaymentStatus
	}
	return PaymentStatus_PSUnknown
}

type UserMessage struct {
	MessageID        *string            `protobuf:"bytes,1,opt,name=messageID" json:"messageID,omitempty"`
	SenderID         *string            `protobuf:"bytes,2,opt,name=senderID" json:"senderID,omitempty"`
	ConversationID   *string            `protobuf:"bytes,3,opt,name=conversationID" json:"conversationID,omitempty"`
	Recipients       []string           `protobuf:"bytes,4,rep,name=recipients" json:"recipients,omitempty"`
	CreationDate     *Timestamp         `protobuf:"bytes,5,opt,name=creationDate" json:"creationDate,omitempty"`
	NotificationDate *Timestamp         `protobuf:"bytes,6,opt,name=notificationDate" json:"notificationDate,omitempty"`
	ReadDate         *Timestamp         `protobuf:"bytes,7,opt,name=readDate" json:"readDate,omitempty"`
	MessageType      *UserMessageType   `protobuf:"varint,8,opt,name=messageType,enum=BlitzMessage.UserMessageType" json:"messageType,omitempty"`
	MessageStatus    *UserMessageStatus `protobuf:"varint,9,opt,name=messageStatus,enum=BlitzMessage.UserMessageStatus" json:"messageStatus,omitempty"`
	MessageText      *string            `protobuf:"bytes,10,opt,name=messageText" json:"messageText,omitempty"`
	ActionIcon       *string            `protobuf:"bytes,11,opt,name=actionIcon" json:"actionIcon,omitempty"`
	ActionURL        *string            `protobuf:"bytes,12,opt,name=actionURL" json:"actionURL,omitempty"`
	PaymentStatus    *PaymentStatus     `protobuf:"varint,13,opt,name=paymentStatus,enum=BlitzMessage.PaymentStatus" json:"paymentStatus,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *UserMessage) Reset()                    { *m = UserMessage{} }
func (m *UserMessage) String() string            { return proto.CompactTextString(m) }
func (*UserMessage) ProtoMessage()               {}
func (*UserMessage) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{7} }

func (m *UserMessage) GetMessageID() string {
	if m != nil && m.MessageID != nil {
		return *m.MessageID
	}
	return ""
}

func (m *UserMessage) GetSenderID() string {
	if m != nil && m.SenderID != nil {
		return *m.SenderID
	}
	return ""
}

func (m *UserMessage) GetConversationID() string {
	if m != nil && m.ConversationID != nil {
		return *m.ConversationID
	}
	return ""
}

func (m *UserMessage) GetRecipients() []string {
	if m != nil {
		return m.Recipients
	}
	return nil
}

func (m *UserMessage) GetCreationDate() *Timestamp {
	if m != nil {
		return m.CreationDate
	}
	return nil
}

func (m *UserMessage) GetNotificationDate() *Timestamp {
	if m != nil {
		return m.NotificationDate
	}
	return nil
}

func (m *UserMessage) GetReadDate() *Timestamp {
	if m != nil {
		return m.ReadDate
	}
	return nil
}

func (m *UserMessage) GetMessageType() UserMessageType {
	if m != nil && m.MessageType != nil {
		return *m.MessageType
	}
	return UserMessageType_MTUnknown
}

func (m *UserMessage) GetMessageStatus() UserMessageStatus {
	if m != nil && m.MessageStatus != nil {
		return *m.MessageStatus
	}
	return UserMessageStatus_MSUnknown
}

func (m *UserMessage) GetMessageText() string {
	if m != nil && m.MessageText != nil {
		return *m.MessageText
	}
	return ""
}

func (m *UserMessage) GetActionIcon() string {
	if m != nil && m.ActionIcon != nil {
		return *m.ActionIcon
	}
	return ""
}

func (m *UserMessage) GetActionURL() string {
	if m != nil && m.ActionURL != nil {
		return *m.ActionURL
	}
	return ""
}

func (m *UserMessage) GetPaymentStatus() PaymentStatus {
	if m != nil && m.PaymentStatus != nil {
		return *m.PaymentStatus
	}
	return PaymentStatus_PSUnknown
}

type UserMessageUpdate struct {
	Timespan         *Timespan      `protobuf:"bytes,1,opt,name=timespan" json:"timespan,omitempty"`
	Messages         []*UserMessage `protobuf:"bytes,2,rep,name=messages" json:"messages,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *UserMessageUpdate) Reset()                    { *m = UserMessageUpdate{} }
func (m *UserMessageUpdate) String() string            { return proto.CompactTextString(m) }
func (*UserMessageUpdate) ProtoMessage()               {}
func (*UserMessageUpdate) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{8} }

func (m *UserMessageUpdate) GetTimespan() *Timespan {
	if m != nil {
		return m.Timespan
	}
	return nil
}

func (m *UserMessageUpdate) GetMessages() []*UserMessage {
	if m != nil {
		return m.Messages
	}
	return nil
}

func init() {
	proto.RegisterType((*Conversation)(nil), "BlitzMessage.Conversation")
	proto.RegisterType((*ConversationGroup)(nil), "BlitzMessage.ConversationGroup")
	proto.RegisterType((*ConversationRequest)(nil), "BlitzMessage.ConversationRequest")
	proto.RegisterType((*ConversationResponse)(nil), "BlitzMessage.ConversationResponse")
	proto.RegisterType((*FetchConversations)(nil), "BlitzMessage.FetchConversations")
	proto.RegisterType((*FetchConversationGroups)(nil), "BlitzMessage.FetchConversationGroups")
	proto.RegisterType((*UpdateConversationStatus)(nil), "BlitzMessage.UpdateConversationStatus")
	proto.RegisterType((*UserMessage)(nil), "BlitzMessage.UserMessage")
	proto.RegisterType((*UserMessageUpdate)(nil), "BlitzMessage.UserMessageUpdate")
	proto.RegisterEnum("BlitzMessage.UserMessageStatus", UserMessageStatus_name, UserMessageStatus_value)
	proto.RegisterEnum("BlitzMessage.ConversationType", ConversationType_name, ConversationType_value)
	proto.RegisterEnum("BlitzMessage.PaymentStatus", PaymentStatus_name, PaymentStatus_value)
	proto.RegisterEnum("BlitzMessage.UserMessageType", UserMessageType_name, UserMessageType_value)
}

func init() { proto.RegisterFile("UserMessages.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 1046 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x9c, 0x56, 0x4d, 0x6f, 0xdb, 0x46,
	0x13, 0x0e, 0x45, 0x59, 0x96, 0x46, 0x1f, 0xa6, 0x68, 0x27, 0x66, 0x14, 0xbc, 0x6f, 0x02, 0x9d,
	0x52, 0x17, 0x71, 0x1a, 0x1d, 0x8a, 0x9e, 0x82, 0xda, 0x4a, 0x5d, 0x18, 0x28, 0x0d, 0xc1, 0x94,
	0x81, 0xa2, 0x97, 0x82, 0x26, 0x37, 0xd6, 0xa6, 0x22, 0x97, 0xdd, 0x5d, 0x25, 0x71, 0x7b, 0xea,
	0xad, 0xff, 0xa1, 0xe7, 0xfe, 0x96, 0x5e, 0xdb, 0xfc, 0xa2, 0xce, 0x2e, 0x49, 0x7b, 0x69, 0xcb,
	0xb2, 0xdd, 0x1b, 0x35, 0x3b, 0x3b, 0xcf, 0x7c, 0x3c, 0xf3, 0xac, 0xc0, 0x3d, 0x11, 0x84, 0xfb,
	0x44, 0x88, 0xf0, 0x8c, 0x88, 0xdd, 0x8c, 0x33, 0xc9, 0xdc, 0xce, 0xfe, 0x9c, 0xca, 0x5f, 0x0a,
	0xe3, 0xe0, 0x09, 0x3b, 0x7d, 0x47, 0x22, 0x49, 0xdf, 0x93, 0xe8, 0x45, 0x4c, 0x44, 0xc4, 0x69,
	0x26, 0x19, 0xcf, 0x5d, 0x07, 0xed, 0xe9, 0x79, 0x56, 0xde, 0x1b, 0xe8, 0x58, 0x13, 0xce, 0xde,
	0xd2, 0xf9, 0x85, 0xad, 0x37, 0x09, 0xcf, 0x13, 0x92, 0xca, 0xe2, 0xf7, 0xf0, 0xef, 0x3a, 0x74,
	0xc6, 0x2c, 0x7d, 0x4f, 0xb8, 0x08, 0x25, 0x65, 0xa9, 0xfb, 0x08, 0x7a, 0x91, 0xf1, 0xfb, 0xf0,
	0x8d, 0x67, 0x3d, 0xb3, 0x9e, 0xb7, 0xdc, 0x6d, 0xd8, 0xa0, 0x29, 0x95, 0x34, 0x44, 0x30, 0x15,
	0x17, 0x0f, 0x6a, 0xfa, 0xe0, 0x25, 0x34, 0x84, 0x0c, 0xe5, 0x42, 0x78, 0x36, 0xfe, 0xee, 0x8d,
	0x9e, 0xee, 0x9a, 0xe9, 0xee, 0x1a, 0xf5, 0x04, 0xda, 0xcd, 0xf5, 0xc0, 0xc9, 0x42, 0x8e, 0x39,
	0x1c, 0x10, 0x12, 0x4f, 0x98, 0x90, 0x18, 0xaa, 0xae, 0x43, 0xbd, 0x80, 0x4e, 0xc4, 0x89, 0xc6,
	0x7d, 0x13, 0x4a, 0xe2, 0xad, 0xa1, 0xb5, 0x3d, 0xda, 0xae, 0x06, 0x9c, 0xd2, 0x84, 0x20, 0x60,
	0x92, 0xb9, 0xaf, 0xc0, 0x99, 0x87, 0x42, 0xee, 0xa9, 0x66, 0x50, 0x79, 0xae, 0xaf, 0x34, 0x56,
	0x5f, 0xd9, 0x84, 0xb6, 0xba, 0x52, 0x1c, 0x78, 0xeb, 0x1a, 0x76, 0x0b, 0x3a, 0x49, 0x6e, 0x18,
	0xb3, 0x45, 0x2a, 0xbd, 0x26, 0x5a, 0xd7, 0x94, 0xeb, 0x22, 0xc5, 0x6c, 0xe2, 0xdc, 0xd8, 0xd2,
	0xc6, 0x3e, 0xb4, 0x12, 0x92, 0x9c, 0xaa, 0xf2, 0x85, 0x07, 0xcf, 0x6c, 0xbc, 0xfd, 0x39, 0x40,
	0x34, 0x67, 0x82, 0xc4, 0x1a, 0xbf, 0xbd, 0x1a, 0x1f, 0xa1, 0x66, 0x18, 0x72, 0x4e, 0x53, 0x32,
	0x25, 0x1f, 0xa5, 0xd7, 0xd1, 0x09, 0x0c, 0xc0, 0x35, 0x0b, 0x29, 0xda, 0xdb, 0xd5, 0x67, 0x0f,
	0xa1, 0x5b, 0x9e, 0xb1, 0xf4, 0xe4, 0xf8, 0x3b, 0xaf, 0xa7, 0xcd, 0x5f, 0x81, 0x63, 0x8e, 0x49,
	0x8d, 0xdd, 0xdb, 0xd0, 0xfd, 0xff, 0x7f, 0x15, 0x7b, 0x7c, 0xc5, 0xcb, 0x7d, 0x0c, 0x7d, 0x2a,
	0x0e, 0x38, 0x21, 0x3f, 0xc6, 0x24, 0xe3, 0x24, 0xc2, 0xac, 0x63, 0xcf, 0xc1, 0xab, 0x4d, 0xd7,
	0x81, 0x66, 0x34, 0x0b, 0xf9, 0x19, 0x41, 0xf4, 0xbe, 0x86, 0x19, 0x41, 0xb7, 0x20, 0x4c, 0x3e,
	0x3c, 0xcf, 0xd5, 0x18, 0x4f, 0xaa, 0x18, 0x15, 0x97, 0xe1, 0x9f, 0x35, 0xe8, 0x9b, 0xa8, 0xdf,
	0x72, 0xb6, 0xc8, 0xdc, 0x0d, 0x58, 0x3f, 0x53, 0x1f, 0x17, 0x84, 0x7a, 0x05, 0x2d, 0x6d, 0xd0,
	0xa9, 0xd7, 0xee, 0x94, 0x7a, 0x0f, 0x1a, 0x8b, 0xbc, 0x37, 0x76, 0xc9, 0x97, 0xd0, 0x1c, 0x7e,
	0xfd, 0x7e, 0xcd, 0x5f, 0xd3, 0x41, 0x5c, 0x80, 0x9c, 0xbf, 0xda, 0xd6, 0xd0, 0xb6, 0xa5, 0x34,
	0x41, 0x47, 0x65, 0x2c, 0xa6, 0xd3, 0x2c, 0x6d, 0x92, 0xc9, 0x70, 0x6e, 0x72, 0xe4, 0x0a, 0x71,
	0xa0, 0x24, 0x4e, 0x78, 0x31, 0x42, 0x45, 0x92, 0xd6, 0xf0, 0x6b, 0xd8, 0x34, 0x2b, 0x3c, 0x26,
	0x3f, 0x2f, 0x30, 0x51, 0xd5, 0xa8, 0xbc, 0x48, 0x81, 0x8d, 0x52, 0x04, 0x5b, 0xb6, 0x2f, 0x7a,
	0xf5, 0x86, 0x0b, 0xd8, 0xaa, 0x46, 0x10, 0x19, 0x4b, 0x05, 0x71, 0xbf, 0xc0, 0x3d, 0x32, 0xec,
	0xba, 0xe1, 0xed, 0xd1, 0xe0, 0xe6, 0xee, 0x22, 0x89, 0x9b, 0x59, 0x21, 0x14, 0x18, 0xdb, 0x46,
	0xef, 0xc7, 0xd7, 0xd7, 0xb8, 0x90, 0x92, 0xe1, 0x6f, 0x16, 0xb8, 0x07, 0x44, 0x46, 0x33, 0x33,
	0x84, 0x70, 0x9f, 0x43, 0x53, 0xaa, 0x5e, 0x67, 0x61, 0x89, 0xf8, 0x68, 0xc9, 0x24, 0xf0, 0xb4,
	0x32, 0x47, 0x5b, 0x53, 0xa1, 0x6b, 0xe6, 0x5b, 0xa6, 0xb0, 0x22, 0xe1, 0xe1, 0xaf, 0xb0, 0x7d,
	0x2d, 0x05, 0x4d, 0xb4, 0xfb, 0xe4, 0xf1, 0xe5, 0x72, 0xdc, 0xa7, 0x37, 0xe3, 0x6a, 0x88, 0xe1,
	0x3f, 0x16, 0x78, 0x27, 0x59, 0x8c, 0x94, 0x33, 0xcf, 0x0a, 0x79, 0xbb, 0x49, 0x40, 0x2f, 0x75,
	0xb2, 0x76, 0x37, 0x9d, 0x5c, 0xb6, 0xe2, 0xf6, 0x9d, 0xf6, 0x04, 0xb7, 0x36, 0xab, 0x6c, 0x6d,
	0xfd, 0xf6, 0xad, 0xfd, 0xcb, 0x86, 0xb6, 0x91, 0x43, 0xae, 0x74, 0xfa, 0xf3, 0xa2, 0x02, 0x94,
	0x07, 0x41, 0xd2, 0xd8, 0xd0, 0xfe, 0xeb, 0xb5, 0xda, 0xe5, 0x5a, 0xa0, 0xb2, 0xd0, 0x8c, 0xaa,
	0x97, 0x06, 0xd1, 0xed, 0xff, 0x24, 0xee, 0x29, 0x93, 0xf4, 0x2d, 0x8d, 0x2e, 0xaf, 0xdc, 0x22,
	0xee, 0x9f, 0x41, 0x53, 0xad, 0x9d, 0x76, 0x5d, 0x5f, 0xed, 0x3a, 0x82, 0x76, 0x51, 0x9d, 0x6e,
	0x6b, 0x53, 0xf7, 0xe7, 0x7f, 0x37, 0x4e, 0x44, 0x77, 0x15, 0xd9, 0x92, 0x98, 0x03, 0xd2, 0xeb,
	0x7e, 0x87, 0x39, 0x6e, 0x5e, 0x62, 0x29, 0x85, 0x81, 0xb2, 0x43, 0xb9, 0x1e, 0x1c, 0x62, 0x03,
	0x73, 0x41, 0xa8, 0x6a, 0x44, 0xa7, 0xd4, 0xdf, 0xea, 0x24, 0xbb, 0xb7, 0x4f, 0xf2, 0x1d, 0xf4,
	0x8d, 0x24, 0x72, 0x9e, 0xde, 0x63, 0x29, 0x50, 0x0a, 0x8a, 0x74, 0x57, 0x48, 0x41, 0xf1, 0xbd,
	0x33, 0xab, 0x60, 0x15, 0x05, 0x77, 0xa1, 0xe5, 0x07, 0x27, 0xe9, 0x4f, 0x29, 0xfb, 0x90, 0x3a,
	0x0f, 0x50, 0xd0, 0xda, 0x7e, 0x70, 0x98, 0x64, 0x8c, 0xcb, 0x30, 0x95, 0x8e, 0xe5, 0xb6, 0x60,
	0xcd, 0x0f, 0x8e, 0xc8, 0x07, 0xa7, 0x86, 0x5d, 0x68, 0xf8, 0xc1, 0x31, 0x0e, 0xcd, 0xb1, 0x51,
	0x15, 0xc0, 0x0f, 0xf6, 0x78, 0x34, 0xc3, 0xbf, 0x36, 0xb1, 0x53, 0x77, 0x3b, 0xd0, 0xf4, 0x83,
	0xb1, 0x7e, 0x5a, 0x9d, 0xb5, 0x9d, 0x1f, 0xc0, 0x59, 0xf2, 0x1e, 0xc0, 0x78, 0x5a, 0x00, 0x7d,
	0x8f, 0x48, 0x2e, 0xf4, 0xc6, 0x53, 0xd3, 0x0b, 0xc1, 0xb4, 0x4f, 0xa9, 0x9c, 0x88, 0xa8, 0x7d,
	0x8e, 0x0c, 0x66, 0x39, 0xf6, 0xce, 0x1f, 0xd6, 0x95, 0x67, 0x4e, 0x95, 0x30, 0x31, 0x4a, 0xc0,
	0x54, 0x26, 0xc1, 0xa1, 0x7e, 0x35, 0x31, 0x64, 0x1f, 0xbd, 0x83, 0x29, 0xa7, 0xe1, 0x7c, 0x42,
	0x38, 0x65, 0x31, 0x46, 0x7d, 0x08, 0xfd, 0x49, 0x50, 0x84, 0x50, 0x42, 0x4e, 0x39, 0x51, 0x25,
	0x6d, 0xc3, 0xe6, 0x24, 0xf8, 0xe6, 0x63, 0x46, 0xb8, 0x3c, 0xc2, 0x14, 0xc4, 0x5e, 0x14, 0x91,
	0x4c, 0x62, 0x6d, 0x5b, 0xe0, 0x94, 0x07, 0xc7, 0x44, 0xfd, 0x9d, 0x53, 0x35, 0x9a, 0xd6, 0xdc,
	0x13, 0xad, 0x8d, 0x9d, 0x0c, 0x36, 0xae, 0x52, 0x51, 0x75, 0x78, 0x5a, 0x49, 0xcf, 0x9f, 0x06,
	0xe7, 0x42, 0x92, 0x04, 0xd3, 0xc3, 0x0a, 0xfd, 0x6a, 0x17, 0x6a, 0xb9, 0xad, 0x5a, 0x35, 0xbe,
	0x2b, 0x5b, 0xfe, 0x34, 0xff, 0x5f, 0x51, 0x39, 0xa9, 0xef, 0xbf, 0xfc, 0xf4, 0xba, 0x06, 0x0f,
	0x3e, 0xbd, 0xb6, 0x5d, 0x6b, 0x1f, 0x3f, 0x3d, 0x0b, 0x06, 0x11, 0x4b, 0x76, 0x4f, 0x15, 0x0b,
	0x66, 0x84, 0x93, 0x0a, 0x1f, 0x7e, 0xb7, 0xac, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff, 0x51, 0x08,
	0xd1, 0xdc, 0xb6, 0x0a, 0x00, 0x00,
}
