// Code generated by protoc-gen-go.
// source: Device.proto
// DO NOT EDIT!

package BlitzMessage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"


// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type PlatformType int32

const (
	PlatformType_PTUnknown PlatformType = 0
	PlatformType_PTiOS     PlatformType = 1
	PlatformType_PTAndroid PlatformType = 2
	PlatformType_PTWeb     PlatformType = 3
)

var PlatformType_name = map[int32]string{
	0: "PTUnknown",
	1: "PTiOS",
	2: "PTAndroid",
	3: "PTWeb",
}
var PlatformType_value = map[string]int32{
	"PTUnknown": 0,
	"PTiOS":     1,
	"PTAndroid": 2,
	"PTWeb":     3,
}

func (x PlatformType) Enum() *PlatformType {
	p := new(PlatformType)
	*p = x
	return p
}
func (x PlatformType) String() string {
	return proto.EnumName(PlatformType_name, int32(x))
}
func (x *PlatformType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(PlatformType_value, data, "PlatformType")
	if err != nil {
		return err
	}
	*x = PlatformType(value)
	return nil
}
func (PlatformType) EnumDescriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type DeviceInfo struct {
	VendorUID                     *string       `protobuf:"bytes,1,opt,name=vendorUID" json:"vendorUID,omitempty"`
	AdvertisingUID                *string       `protobuf:"bytes,2,opt,name=advertisingUID" json:"advertisingUID,omitempty"`
	PlatformType                  *PlatformType `protobuf:"varint,3,opt,name=platformType,enum=BlitzMessage.PlatformType" json:"platformType,omitempty"`
	ModelName                     *string       `protobuf:"bytes,4,opt,name=modelName" json:"modelName,omitempty"`
	SystemVersion                 *string       `protobuf:"bytes,5,opt,name=systemVersion" json:"systemVersion,omitempty"`
	Language                      *string       `protobuf:"bytes,6,opt,name=language" json:"language,omitempty"`
	Timezone                      *string       `protobuf:"bytes,7,opt,name=timezone" json:"timezone,omitempty"`
	PhoneCountryCode              *string       `protobuf:"bytes,8,opt,name=phoneCountryCode" json:"phoneCountryCode,omitempty"`
	ScreenSize                    *Size         `protobuf:"bytes,9,opt,name=screenSize" json:"screenSize,omitempty"`
	ScreenScale                   *float32      `protobuf:"fixed32,10,opt,name=screenScale,def=1" json:"screenScale,omitempty"`
	AppID                         *string       `protobuf:"bytes,11,opt,name=appID" json:"appID,omitempty"`
	AppVersion                    *string       `protobuf:"bytes,12,opt,name=appVersion" json:"appVersion,omitempty"`
	NotificationToken             *string       `protobuf:"bytes,13,opt,name=notificationToken" json:"notificationToken,omitempty"`
	LastContentRefresh_Deprecated *Timestamp    `protobuf:"bytes,14,opt,name=lastContentRefresh_Deprecated" json:"lastContentRefresh_Deprecated,omitempty"`
	UserTags                      []string      `protobuf:"bytes,15,rep,name=userTags" json:"userTags,omitempty"`
	DeviceUDID                    *string       `protobuf:"bytes,16,opt,name=deviceUDID" json:"deviceUDID,omitempty"`
	AppIsReleaseVersion           *bool         `protobuf:"varint,17,opt,name=appIsReleaseVersion" json:"appIsReleaseVersion,omitempty"`
	ColorDepth                    *float32      `protobuf:"fixed32,18,opt,name=colorDepth" json:"colorDepth,omitempty"`
	IPAddress                     *string       `protobuf:"bytes,19,opt,name=IPAddress" json:"IPAddress,omitempty"`
	SystemBuildVersion            *string       `protobuf:"bytes,20,opt,name=systemBuildVersion" json:"systemBuildVersion,omitempty"`
	LocalIPAddress                *string       `protobuf:"bytes,21,opt,name=localIPAddress" json:"localIPAddress,omitempty"`
	XXX_unrecognized              []byte        `json:"-"`
}

func (m *DeviceInfo) Reset()                    { *m = DeviceInfo{} }
func (m *DeviceInfo) String() string            { return proto.CompactTextString(m) }
func (*DeviceInfo) ProtoMessage()               {}
func (*DeviceInfo) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

const Default_DeviceInfo_ScreenScale float32 = 1

func (m *DeviceInfo) GetVendorUID() string {
	if m != nil && m.VendorUID != nil {
		return *m.VendorUID
	}
	return ""
}

func (m *DeviceInfo) GetAdvertisingUID() string {
	if m != nil && m.AdvertisingUID != nil {
		return *m.AdvertisingUID
	}
	return ""
}

func (m *DeviceInfo) GetPlatformType() PlatformType {
	if m != nil && m.PlatformType != nil {
		return *m.PlatformType
	}
	return PlatformType_PTUnknown
}

func (m *DeviceInfo) GetModelName() string {
	if m != nil && m.ModelName != nil {
		return *m.ModelName
	}
	return ""
}

func (m *DeviceInfo) GetSystemVersion() string {
	if m != nil && m.SystemVersion != nil {
		return *m.SystemVersion
	}
	return ""
}

func (m *DeviceInfo) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *DeviceInfo) GetTimezone() string {
	if m != nil && m.Timezone != nil {
		return *m.Timezone
	}
	return ""
}

func (m *DeviceInfo) GetPhoneCountryCode() string {
	if m != nil && m.PhoneCountryCode != nil {
		return *m.PhoneCountryCode
	}
	return ""
}

func (m *DeviceInfo) GetScreenSize() *Size {
	if m != nil {
		return m.ScreenSize
	}
	return nil
}

func (m *DeviceInfo) GetScreenScale() float32 {
	if m != nil && m.ScreenScale != nil {
		return *m.ScreenScale
	}
	return Default_DeviceInfo_ScreenScale
}

func (m *DeviceInfo) GetAppID() string {
	if m != nil && m.AppID != nil {
		return *m.AppID
	}
	return ""
}

func (m *DeviceInfo) GetAppVersion() string {
	if m != nil && m.AppVersion != nil {
		return *m.AppVersion
	}
	return ""
}

func (m *DeviceInfo) GetNotificationToken() string {
	if m != nil && m.NotificationToken != nil {
		return *m.NotificationToken
	}
	return ""
}

func (m *DeviceInfo) GetLastContentRefresh_Deprecated() *Timestamp {
	if m != nil {
		return m.LastContentRefresh_Deprecated
	}
	return nil
}

func (m *DeviceInfo) GetUserTags() []string {
	if m != nil {
		return m.UserTags
	}
	return nil
}

func (m *DeviceInfo) GetDeviceUDID() string {
	if m != nil && m.DeviceUDID != nil {
		return *m.DeviceUDID
	}
	return ""
}

func (m *DeviceInfo) GetAppIsReleaseVersion() bool {
	if m != nil && m.AppIsReleaseVersion != nil {
		return *m.AppIsReleaseVersion
	}
	return false
}

func (m *DeviceInfo) GetColorDepth() float32 {
	if m != nil && m.ColorDepth != nil {
		return *m.ColorDepth
	}
	return 0
}

func (m *DeviceInfo) GetIPAddress() string {
	if m != nil && m.IPAddress != nil {
		return *m.IPAddress
	}
	return ""
}

func (m *DeviceInfo) GetSystemBuildVersion() string {
	if m != nil && m.SystemBuildVersion != nil {
		return *m.SystemBuildVersion
	}
	return ""
}

func (m *DeviceInfo) GetLocalIPAddress() string {
	if m != nil && m.LocalIPAddress != nil {
		return *m.LocalIPAddress
	}
	return ""
}

func init() {
	proto.RegisterType((*DeviceInfo)(nil), "BlitzMessage.DeviceInfo")
	proto.RegisterEnum("BlitzMessage.PlatformType", PlatformType_name, PlatformType_value)
}

var fileDescriptor1 = []byte{
	// 499 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x54, 0x51, 0x4d, 0x6f, 0x13, 0x31,
	0x14, 0xec, 0x26, 0x0d, 0x24, 0x2f, 0x1f, 0x6c, 0xb6, 0x14, 0x4c, 0x2a, 0xa4, 0x8a, 0x03, 0x42,
	0x48, 0x04, 0xe8, 0x91, 0x43, 0xa4, 0x26, 0xb9, 0xe4, 0x00, 0x44, 0xed, 0x06, 0x8e, 0xc8, 0x59,
	0xbf, 0x24, 0xa6, 0x5e, 0x7b, 0x65, 0x3b, 0x41, 0xc9, 0x2f, 0xe0, 0xcf, 0xf0, 0x67, 0xfa, 0x8b,
	0xb0, 0xbd, 0xac, 0x68, 0x6e, 0xfb, 0x66, 0xde, 0x8e, 0x67, 0xe6, 0x41, 0x67, 0x8a, 0x3b, 0x9e,
	0xe1, 0xb0, 0xd0, 0xca, 0xaa, 0xa4, 0x33, 0x16, 0xdc, 0x1e, 0x3e, 0xa3, 0x31, 0x74, 0x8d, 0x83,
	0x0b, 0xb5, 0xfc, 0x89, 0x99, 0xe5, 0x3b, 0xcc, 0xde, 0x31, 0x34, 0x99, 0xe6, 0x85, 0x55, 0xba,
	0x5c, 0x1d, 0xb4, 0xd3, 0x7d, 0x81, 0xa6, 0x1c, 0x5e, 0xfd, 0x39, 0x05, 0x28, 0x85, 0x66, 0x72,
	0xa5, 0x92, 0x3e, 0xb4, 0x76, 0x28, 0x99, 0xd2, 0x8b, 0xd9, 0x94, 0x44, 0x97, 0xd1, 0x9b, 0x56,
	0xf2, 0x0c, 0x7a, 0x94, 0xed, 0x50, 0x5b, 0x6e, 0xb8, 0x5c, 0x7b, 0xbc, 0x16, 0xf0, 0x0f, 0xd0,
	0x29, 0x04, 0xb5, 0x2b, 0xa5, 0x73, 0x2f, 0x48, 0xea, 0x0e, 0xed, 0x5d, 0x0d, 0x86, 0x0f, 0x8d,
	0x0c, 0xe7, 0x0f, 0x36, 0xbc, 0x78, 0xae, 0x18, 0x8a, 0x2f, 0x34, 0x47, 0x72, 0x1a, 0x44, 0xce,
	0xa1, 0x6b, 0xf6, 0xc6, 0x62, 0xfe, 0x0d, 0xb5, 0xe1, 0x4a, 0x92, 0x46, 0x80, 0x63, 0x68, 0x0a,
	0x2a, 0xd7, 0x5b, 0x27, 0x41, 0x1e, 0x55, 0x88, 0xe5, 0x39, 0x1e, 0x94, 0x44, 0xf2, 0x38, 0x20,
	0x04, 0xe2, 0x62, 0xe3, 0xc6, 0x89, 0xda, 0x4a, 0xab, 0xf7, 0x13, 0xa7, 0x4c, 0x9a, 0x81, 0x79,
	0x0d, 0xe0, 0x22, 0x23, 0xca, 0x5b, 0x7e, 0x40, 0xd2, 0x72, 0x58, 0xfb, 0x2a, 0x39, 0xf6, 0xe5,
	0x19, 0x97, 0xac, 0xfd, 0x6f, 0x2f, 0xa3, 0x02, 0x09, 0xb8, 0xc5, 0xda, 0xa7, 0xe8, 0x63, 0xd2,
	0x85, 0x06, 0x2d, 0x0a, 0x17, 0xb4, 0x1d, 0xe4, 0x12, 0x00, 0x37, 0x56, 0x06, 0x3b, 0x01, 0x7b,
	0x01, 0x7d, 0xa9, 0x2c, 0x5f, 0xf1, 0x8c, 0x5a, 0x87, 0xa6, 0xea, 0x0e, 0x25, 0xe9, 0x06, 0x6a,
	0x04, 0x2f, 0x05, 0x35, 0x76, 0xa2, 0xa4, 0x45, 0x69, 0x6f, 0x70, 0xa5, 0xd1, 0x6c, 0x7e, 0x4c,
	0xb1, 0xd0, 0xe8, 0x96, 0x91, 0x91, 0x5e, 0x30, 0xf4, 0xfc, 0xd8, 0x50, 0xea, 0xc2, 0x19, 0x4b,
	0xf3, 0xc2, 0x27, 0xdd, 0x1a, 0xd4, 0x29, 0x5d, 0x1b, 0xf2, 0xe4, 0xb2, 0x5e, 0x1a, 0x60, 0xe1,
	0x44, 0x8b, 0xa9, 0x33, 0x15, 0x87, 0x57, 0x2e, 0xe0, 0xcc, 0x7b, 0x34, 0x37, 0x28, 0x90, 0x1a,
	0xac, 0xdc, 0xf5, 0x1d, 0xd9, 0xf4, 0x3f, 0x64, 0x4a, 0x28, 0xed, 0x1e, 0xb5, 0x1b, 0x92, 0xf8,
	0x5c, 0xbe, 0xfc, 0xd9, 0xfc, 0x9a, 0x31, 0xe7, 0xc6, 0x90, 0xb3, 0xa0, 0x31, 0x80, 0xa4, 0x2c,
	0x7f, 0xbc, 0xe5, 0x82, 0x55, 0x12, 0x4f, 0xab, 0xab, 0x0b, 0xe5, 0x6a, 0xf9, 0xff, 0xcf, 0xb9,
	0xc7, 0xdf, 0x8e, 0xa1, 0x73, 0x74, 0xd3, 0x2e, 0xb4, 0xe6, 0xe9, 0x42, 0xde, 0x49, 0xf5, 0x4b,
	0xc6, 0x27, 0x49, 0x0b, 0x1a, 0xf3, 0x94, 0x7f, 0xbd, 0x8d, 0xa3, 0x92, 0xb9, 0x96, 0x4c, 0x2b,
	0xce, 0xe2, 0x5a, 0xc9, 0x7c, 0xc7, 0x65, 0x5c, 0x1f, 0xbf, 0xbf, 0x1f, 0xd5, 0xe0, 0xe4, 0x7e,
	0x54, 0x4f, 0xa2, 0xb1, 0xfb, 0x24, 0x11, 0x0c, 0x32, 0x95, 0x0f, 0x97, 0xbe, 0x8f, 0x0d, 0x6a,
	0x3c, 0x6a, 0xe6, 0x77, 0x14, 0xfd, 0x0d, 0x00, 0x00, 0xff, 0xff, 0x66, 0x1c, 0xc5, 0xa6, 0xeb,
	0x02, 0x00, 0x00,
}
