// Code generated by protoc-gen-go.
// source: Globals.proto
// DO NOT EDIT!

package BlitzMessage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"


// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Global struct {
	//  Global users:
	SystemUserID     *string `protobuf:"bytes,1,opt,name=SystemUserID,def=e4227250-c8e5-4da9-8177-f084020910b8" json:"SystemUserID,omitempty"`
	BlitzUserID      *string `protobuf:"bytes,2,opt,name=BlitzUserID,def=a8277a5e-b461-476b-9f4a-922a50b97f26" json:"BlitzUserID,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Global) Reset()                    { *m = Global{} }
func (m *Global) String() string            { return proto.CompactTextString(m) }
func (*Global) ProtoMessage()               {}
func (*Global) Descriptor() ([]byte, []int) { return fileDescriptor3, []int{0} }

const Default_Global_SystemUserID string = "e4227250-c8e5-4da9-8177-f084020910b8"
const Default_Global_BlitzUserID string = "a8277a5e-b461-476b-9f4a-922a50b97f26"

func (m *Global) GetSystemUserID() string {
	if m != nil && m.SystemUserID != nil {
		return *m.SystemUserID
	}
	return Default_Global_SystemUserID
}

func (m *Global) GetBlitzUserID() string {
	if m != nil && m.BlitzUserID != nil {
		return *m.BlitzUserID
	}
	return Default_Global_BlitzUserID
}

func init() {
	proto.RegisterType((*Global)(nil), "BlitzMessage.Global")
}

func init() { proto.RegisterFile("Globals.proto", fileDescriptor3) }

var fileDescriptor3 = []byte{
	// 225 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x4c, 0xcf, 0x31, 0x4b, 0xc4, 0x30,
	0x1c, 0x05, 0x70, 0x53, 0x41, 0x30, 0x9e, 0x4b, 0xa7, 0xe3, 0x5c, 0x44, 0x1c, 0x5c, 0xfe, 0x35,
	0x0d, 0x49, 0x93, 0xdc, 0xd0, 0xa1, 0x08, 0xe2, 0xe0, 0x24, 0x7e, 0x80, 0x24, 0xf7, 0xaf, 0x56,
	0x7a, 0xa4, 0x24, 0x41, 0xd0, 0xc5, 0xd5, 0xcf, 0xd7, 0x4f, 0x24, 0x5a, 0x87, 0xdb, 0xdf, 0xef,
	0x3d, 0x1e, 0x3d, 0xbf, 0x1f, 0x83, 0xb3, 0x63, 0xaa, 0xa6, 0x18, 0x72, 0x28, 0x57, 0xdd, 0x38,
	0xe4, 0xcf, 0x47, 0x4c, 0xc9, 0xbe, 0xe0, 0xe6, 0x22, 0xb8, 0x37, 0xf4, 0x79, 0x78, 0x47, 0x0f,
	0x3b, 0x4c, 0x3e, 0x0e, 0x53, 0x0e, 0x71, 0x89, 0x5e, 0x7d, 0xd1, 0x93, 0xc5, 0x96, 0x5b, 0xba,
	0x7a, 0xfa, 0x48, 0x19, 0xf7, 0xcf, 0x09, 0xe3, 0xc3, 0xdd, 0x9a, 0x5c, 0x92, 0x9b, 0xd3, 0xed,
	0x35, 0x0a, 0xce, 0x15, 0x97, 0x0c, 0xbc, 0x46, 0x09, 0x62, 0x67, 0x0d, 0xe8, 0x5a, 0x29, 0xe8,
	0x99, 0x16, 0x8c, 0x33, 0x53, 0x33, 0xa7, 0x4b, 0x43, 0xcf, 0xfe, 0x26, 0xff, 0x69, 0xb1, 0x50,
	0xab, 0xb9, 0x52, 0x56, 0x22, 0x38, 0xd1, 0xd4, 0x20, 0x54, 0xe3, 0xc0, 0xf4, 0xc2, 0x82, 0xe1,
	0xdc, 0x4a, 0xe6, 0x8c, 0xea, 0x79, 0xd3, 0xdd, 0xce, 0x6d, 0x41, 0x8f, 0xe6, 0xf6, 0xb8, 0x24,
	0xdd, 0xdc, 0x16, 0x6b, 0x42, 0x37, 0x3e, 0xec, 0x2b, 0xf7, 0x5b, 0xf7, 0x8a, 0x11, 0xab, 0xc3,
	0x2f, 0xdf, 0x84, 0xfc, 0x04, 0x00, 0x00, 0xff, 0xff, 0x69, 0xd0, 0x15, 0xf5, 0xec, 0x00, 0x00,
	0x00,
}
