#!/bin/bash
set -euo pipefail
scriptname=$(resolvepath "$0")
scriptpath=$(dirname "$scriptname")
scriptname=$(basename "$scriptname")
cd "$scriptpath"


if [ -z ${1+x} ]; then
    echo ">>> A database name is expected on the command line." >&2
    exit 1
fi

database="$1"
if  ! askYN "Create database '$database'?"; then
    exit 1
fi

echo ">>> Creating database '$database'..."
databaselower=$(echo "$database" | tr '[:upper:]' '[:lower:]')


psql postgres -U postgres -X --pset pager=off  -v ON_ERROR_STOP=1 <<DATABASE

--  $database Postgres Database
--
--  E.B.Smith  -  March 2016


drop schema if exists ${database}Schema cascade;
drop database if exists ${database};
drop user if exists ${database};


create extension if not exists "uuid-ossp";
create extension if not exists adminpack;


create user ${database}
   with createdb superuser;


create database ${database}
   with encoding 'UTF8' owner ${database};


create extension if not exists pg_trgm with schema ${database}Schema;


alter user ${database}
   with nocreatedb nosuperuser login password '${databaselower}';


\connect  $databaselower  $databaselower

create schema ${database}Schema authorization ${database};
alter user ${database} set search_path to ${database}Schema, public;
\connect  $databaselower  $databaselower


\include_relative CommonSchema.sql

truncate AppTable;
insert into AppTable (appID, appName, minAppVersion, minAppDataDate) values
     ('com.blitzhere.blitzhere-labs',   'EkspertoLabs',     '1.3.0',   '2016-06-01 05:48:42.357598+00')
    ,('com.blitzhere.blitzhere',        'Eksperto',         '1.3.0',   '2016-06-01 05:48:42.357598+00')
    ;

DATABASE

printf "\n>>> Database initialized.\n"
