syntax = "proto2";

package Message;

//import "google/protobuf/descriptor.proto";
import "objectivec-descriptor.proto";

option java_package = "com.blitz.server.proto";
option java_multiple_files = true;
option java_generic_services = true;

option (google.protobuf.objectivec_file_options).package = "";
option (google.protobuf.objectivec_file_options).class_prefix = "B";
option (google.protobuf.objectivec_file_options).relax_camel_case = true;

import "user.proto";
import "util.proto";

//----------------------------------------------------------------------------------------
//
// System Messages
//
//----------------------------------------------------------------------------------------

enum UserMessageType {
  MTUnknown      = 0;
  MTSystem       = 1;
  MTNotification = 2;
}

enum UserMessageStatus {
  MSNew     = 0;
  MSHidden  = 1;
  MSRead    = 2;
}

message UserMessage {
  optional string messageID = 1;
  optional string senderID = 2;
  optional string recipients = 3;
  optional util.Timestamp creationDate = 4;
  optional util.Timestamp notificationDate = 5;
  optional util.Timestamp readDate = 6;
  optional UserMessageType messageType = 7;
  optional string messageText = 8;
  optional UserMessageStatus messageStatus = 9;
  optional string actionIcon = 10;
  optional string actionURL = 11;
}

//----------------------------------------------------------------------------------------
// Message related to user authentication
//----------------------------------------------------------------------------------------

message PhoneAuth {

  message AuthTokenRequest {
    // UUID is only needed in case of a retry request.
    optional string userId = 1;
    // phone number
    optional string phoneNumber = 2;
    // the timestamp on the client.
    optional int64 clientTimestamp = 3;
  }

  message AuthTokenVerifyRequest {
    // UUID issued in the first authTokenRequest step.
    optional string userId = 1;
    // The authToken received via sms.
    optional string authToken = 2;
    // The phone number used throughout for receiving the sms in.
    optional string phoneNumber = 3;
  }

  enum AuthStep {
    TOKEN_REQUEST = 1;
    TOKEN_VERIFY_REQUEST = 2;
  }

  optional AuthStep authStep = 1;

  optional AuthTokenRequest tokenRequest = 2;

  optional AuthTokenVerifyRequest tokenVerifyRequest = 3;

  optional string expertCode = 4;
}

message SocialAuth {
  optional string linkedinAccessToken = 1;
  optional string linkedinAccessTokenSecret = 2;
  optional string linkedinSocialId = 3;
}

// Different ways of authorizing a user.
message AuthProfile {
  optional PhoneAuth phoneAuth = 1;
  optional SocialAuth socialAuth = 2;
}

message SessionRequest {
  optional util.Location location = 1;
  optional user.DeviceInfo deviceInfo = 2;
  optional util.Timestamp lastAppDataResetDate = 3;
  optional AuthProfile authProfile = 4;
}

message SessionResponse {
  optional string userID = 1;
  optional string sessionToken = 2;
  optional user.UserProfile  userProfile = 3;   //  The profile for the user.
  optional bool resetAppData = 4;       //  The client should clear all data.
  optional int64 expirationTimestamp = 5;

  optional bool isNewUser = 6 [default = false]; // internal message

  // The 'pasword' for jabber.
  optional string jabberAuthToken = 7;

  optional string debug_string = 100;
}
