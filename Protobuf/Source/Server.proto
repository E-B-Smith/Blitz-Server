syntax = "proto2";
package BlitzMessage;

option java_package = "com.blitzhere.BlitzMessage";
option java_generic_services = true;

import "objectivec-descriptor.proto";
option (google.protobuf.objectivec_file_options).package = "";
option (google.protobuf.objectivec_file_options).class_prefix = "B";
option (google.protobuf.objectivec_file_options).relax_camel_case = true;


import "Types.proto";
import "Device.proto";
import "Connections.proto";
import "Notifications.proto";
import "UserProfiles.proto";
import "UserTracking.proto";
//----------------------------------------------------------------------------------------
//
//                                                                                  Server
//                                                               Client App / Server Nexus
//
//----------------------------------------------------------------------------------------


message DebugMessage {
    repeated string debugText = 1;
}


//----------------------------------------------------------------------------------------
//                                                                         Client Sessions
//----------------------------------------------------------------------------------------


message SessionRequest {
  optional Location location     = 1;
  optional DeviceInfo deviceInfo = 2;
  optional UserProfile profile   = 3;
  optional Timestamp lastAppDataResetDate = 4;
}


message BlitzHereAppOptions {
  //  None now...
}

message AppOptions {
  oneof Options {
    BlitzHereAppOptions  blitzHereOptions = 1;
  }
}


message SessionResponse {
  optional string             userID          = 1;
  optional string             sessionToken    = 2;
  optional string             serverURL       = 3;
  repeated Notification       userNotifications = 4;   //  New messages for the user.
  optional UserProfile        userProfile     = 5;     //  The updated profile for the user.
  optional bool               resetAllAppData = 6;     //  The client should clear all data.
  optional AppOptions         appOptions      = 7;
}


//----------------------------------------------------------------------------------------
//                                                                Client / Server Requests
//----------------------------------------------------------------------------------------


message ClientRequest {
  optional string sessionToken = 1;

  oneof clientRequestMessage {
    SessionRequest          sessionRequest    = 2;
    UserTrackingBatch       userTrackingBatch = 3;
    UserProfileUpdate       userProfileUpdate = 4;
    UserProfileQuery        userProfileQuery  = 5;
//  ConfirmationRequest confirmationRequest = 6;
    NotificationUpdate      notificationSendRequest  = 7;
    NotificationUpdate      notificationFetchRequest = 8;

    DebugMessage    debugMessage        = 9;
    ImageUpload     imageUpload         = 10;
    AcceptConnectionRequest acceptInviteRequest = 15;
  }
}


enum ResponseCode {
  RCSuccess       = 1;
  RCInputCorrupt  = 2;
  RCInputInvalid  = 3;
  RCServerError   = 4;
  RCNotAuthorized = 5;
  RCClientTooOld  = 6;
}


message ServerResponse {
  required ResponseCode responseCode  = 1;
  optional string responseMessage     = 2;

  oneof response {
    SessionResponse        sessionResponse   = 3;
    UserTrackingResponse   userTrackingResponse = 4;
    UserProfileUpdate       profileUpdate     = 5;
    UserProfileQuery        profileQuery      = 6;
    NotificationUpdate      notificationUpdate= 10;
    DebugMessage            debugMessage      = 12;
    ImageUpload             imageUploadReply  = 13;
//  ConfirmationRequest     confirmationRequest   = 14;
  }
}

