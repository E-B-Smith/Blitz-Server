syntax = "proto2";
package BlitzMessage;

option java_package = "com.blitzhere.BlitzMessage";
option java_generic_services = true;

import "objectivec-descriptor.proto";
option (google.protobuf.objectivec_file_options).package = "";
option (google.protobuf.objectivec_file_options).class_prefix = "B";
option (google.protobuf.objectivec_file_options).relax_camel_case = true;


import "Types.proto";
import "EntityTags.proto";
import "Feed.proto";
import "Device.proto";
import "Search.proto";
import "Friends.proto";
import "UserEvents.proto";
import "UserMessages.proto";
import "UserProfiles.proto";
//----------------------------------------------------------------------------------------
//
//                                                                                  Server
//                                                               Client App / Server Nexus
//
//----------------------------------------------------------------------------------------


message DebugMessage {
    repeated string debugText = 1;
}


//----------------------------------------------------------------------------------------
//                                                                         Client Sessions
//----------------------------------------------------------------------------------------


message SessionRequest {
  optional Location location     = 1;
  optional DeviceInfo deviceInfo = 2;
  optional UserProfile profile   = 3;
  optional Timestamp lastAppDataResetDate = 4;
}


message BlitzHereAppOptions {
  //  None now...
}

message AppOptions {
  optional BlitzHereAppOptions  blitzHereOptions = 1;
}


message SessionResponse {
  optional string             userID          = 1;
  optional string             sessionToken    = 2;
  optional string             serverURL       = 3;
  repeated UserMessage        userMessages    = 4;    //  New messages for the user.
  optional UserProfile        userProfile     = 5;    //  The updated profile for the user.
  optional bool               resetAllAppData = 6;    //  The client should clear all data.
  optional AcceptInviteRequest inviteRequest  = 7;
  optional AppOptions         appOptions      = 8;
}


//----------------------------------------------------------------------------------------
//                                                                Client / Server Requests
//----------------------------------------------------------------------------------------


message RequestType {
  optional SessionRequest           sessionRequest    = 1;
  optional UserEventBatch           userEventBatch    = 2;
  optional UserProfileUpdate        userProfileUpdate = 3;
  optional UserProfileQuery         userProfileQuery  = 4;
  optional ConfirmationRequest      confirmationRequest = 5;
  optional UserMessageUpdate        messageSendRequest  = 6;
  optional UserMessageUpdate        messageFetchRequest = 7;
  optional DebugMessage             debugMessage        = 8;
  optional ImageUpload              imageUpload         = 9;
  optional AcceptInviteRequest      acceptInviteRequest = 10;
  optional FeedPostFetchRequest     feedPostFetchRequest  = 11;
  optional FeedPostUpdateRequest    feedPostUpdateRequest = 12;
  optional AutocompleteRequest      autocompleteRequest   = 13;
  optional EntityTagList            updateEntityTags      = 14;
}


message ServerRequest {
  optional string       sessionToken  = 1;
  optional RequestType  requestType   = 2;
}


enum ResponseCode {
  RCSuccess       = 1;
  RCInputCorrupt  = 2;
  RCInputInvalid  = 3;
  RCServerWarning = 4;
  RCServerError   = 5;
  RCNotAuthorized = 6;
  RCClientTooOld  = 7;
}


message ResponseType {
  optional SessionResponse        sessionResponse         = 1;
  optional UserEventBatchResponse userEventBatchResponse  = 2;
  optional UserProfileUpdate      userProfileUpdate       = 3;
  optional UserProfileQuery       userProfileQuery        = 4;
  optional ConfirmationRequest    confirmationRequest     = 5;
  optional UserMessageUpdate      userMessageUpdate       = 6;
  optional DebugMessage           debugMessage            = 7;
  optional ImageUpload            imageUploadReply        = 8;
  optional AcceptInviteResponse   acceptInviteResponse    = 9;
  optional FeedPostFetchResponse  feedPostFetchResponse   = 10;
  optional FeedPostUpdateResponse feedPostUpdateResponse  = 11;
  optional AutocompleteResponse   autocompleteResponse    = 12;
}


message ServerResponse {
  optional ResponseCode   responseCode    = 1;
  optional string         responseMessage = 2;
  optional ResponseType   responseType    = 3;
}

