syntax = "proto2";
package BlitzMessage;

option java_package = "com.blitzhere.BlitzMessage";
option java_generic_services = true;

import "objectivec-descriptor.proto";
option (google.protobuf.objectivec_file_options).package = "";
option (google.protobuf.objectivec_file_options).class_prefix = "B";
option (google.protobuf.objectivec_file_options).relax_camel_case = true;


import "Types.proto";
import "EntityTags.proto";
//----------------------------------------------------------------------------------------
//
//                                                                               User Info
//
//----------------------------------------------------------------------------------------


message SocialIdentity {
  required string socialService = 1;
  optional string socialID      = 2;
  optional string userName      = 3;
  optional string displayName   = 4;
  optional string userURI       = 5;
  optional string authToken     = 6;
  optional Timestamp authExpire = 7;
  optional string authSecret    = 8;
}


enum ContactType {
  CTUnknown = 0;
  CTPhoneSMS= 1;
  CTEmail   = 2;
  CTChat    = 3;
  CTSocialService = 4;
}


message ContactInfo {
    required ContactType contactType  = 1;
    required string   contact         = 2;
    optional bool     isVerified      = 3;
}


message Employment {
  optional string   jobTitle = 1;
  optional string   companyName = 2;
  optional string   location = 3;
  optional string   industry = 4;
  optional Timespan timespan = 5;
  optional string   summary  = 6;
  optional bool     isHeadlineItem = 7;
}


message Education {
  optional string   schoolName = 1;
  optional string   degree     = 2;
  optional string   emphasis   = 3;
  optional Timespan timespan   = 4;
  optional string   summary    = 5;
}


enum UserStatus {
  USUnknown    = 0;
  USBlocked    = 1;
  USInvited    = 2;
  USActive     = 3;
  USConfirming = 4;
  USConfirmed  = 5;
}


enum Gender {
  GUnknown  = 0;
  GFemale   = 1;
  GMale     = 2;
  GOther    = 3;
}


enum ImageContent {
  ICUnknown        = 0;
  ICUserProfile    = 1;
  ICUserBackground = 2;
}


message ImageData {
  optional ImageContent   imageContent  = 1;
  optional bytes          imageBytes    = 2;
  optional string         contentType   = 3;
  optional string         imageURL      = 4;
  optional Timestamp      dateAdded     = 5;
  optional int64          crc32         = 6;
  optional bool           deleted       = 7;
}


message UserReview {
  optional string       userID          = 1;
  optional string       reviewerID      = 2;
  optional Timestamp    timestamp       = 3;
  optional string       conversationID  = 4;
  optional double       responsive      = 5;
  optional double       outgoing        = 6;
  optional double       recommended     = 7;
  optional string       reviewText      = 8;
  repeated string       tags            = 9;
}


message UserProfile {
  optional string       userID        = 1;
  optional UserStatus   userStatus    = 2;
  optional Timestamp    creationDate  = 3;
  optional Timestamp    lastSeen      = 4;

  //  User fields --

  optional string       name          = 5;
  optional Gender       gender        = 6;
  optional Timestamp    birthday      = 7;
  repeated ImageData    images        = 8;
  repeated SocialIdentity socialIdentities = 9;
  repeated ContactInfo  contactInfo   = 10;

  //  Blitz Experience fields --

  optional Employment   headlineEmployment = 11;

  repeated Employment   employment    = 12;
  repeated Education    education     = 13;
  repeated EntityTag    entityTags    = 14;
  repeated string       interestTags  = 15;
  optional string       backgroundSummary = 16;

  //  Reviews --

  optional int32        ratingCount       = 17;
  optional double       ratingResponsive  = 18;
  optional double       ratingOutgoing    = 19;
  optional double       ratingRecommended = 20;
  optional double       responseSeconds   = 21;
  repeated UserReview   reviews           = 22;

  //  Expert fields --

  optional bool         isExpert          = 23;
  optional string       stripeAccount     = 24;
  optional bool         serviceIsFreeForUser = 25;
  optional string       chatFee           = 26;
  optional string       callFeePerHour    = 30;

  optional int64        userInfo          = 27; //  Ignored / not saved.

  optional string       editProfileID     = 28;
  optional bool         isAdmin           = 29;

  optional string       shortQAFee        = 31;
  optional string       longQAFee         = 32;
  optional double       charityPercent    = 33;
}


message ImageUpload {
  repeated ImageData imageData = 1;
}

message UserProfileUpdate {
  repeated UserProfile profiles = 1;
}


message UserProfileQuery {
  //  Fetch by userID:
  repeated string userIDs           = 1;

  //  Fetch some demo profiles:
  optional bool   fetchDemoProfiles = 2;

  //  Fetch by tag:
  optional string entityTag_deprecated = 3;
  optional string entityUserID      = 4;
  optional string entityID          = 5;
  repeated string entityTags        = 6;
}


message ConfirmationRequest {
    optional ContactInfo  contactInfo     = 1;
    optional UserProfile  userProfile     = 2;
    optional string       confirmationCode= 3;
    optional string       inviterUserID   = 4;
}


message ProfilesFromContactInfo {
  repeated UserProfile profiles = 1;
}


enum FriendStatus {
  FSUnknown   = 0;
  FSDidAsk    = 1;
  FSIgnored   = 2;
  FSAccepted  = 3;

  FSWasAsked  = 4;
  FSFriends   = 5;
}


message FriendUpdate {
  optional FriendStatus friendStatus = 1;
  optional string       friendID     = 2;
  repeated UserProfile  profiles     = 3;
}


message UserInvite {
  optional string       userID      = 1;
  optional string       friendID    = 2;
  optional string       message     = 3;
  optional ContactInfo  contactInfo = 4;
  repeated UserProfile  profiles    = 5;
  optional string       confirmationCode = 6;
  optional string       name        = 7;
}


message UserInvites {
  repeated UserInvite   UserInvites     = 1;
}


message EditProfile {
  optional string       profileID       = 1;
  optional UserProfile  profile         = 2;
  optional UserProfile  editProfile     = 3;
  optional bool         discardEdit     = 4;
}


