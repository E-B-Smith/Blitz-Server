// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import <ProtocolBuffers/ProtocolBuffers.h>

#import "Types.pb.h"
#import "Device.pb.h"
#import "Connections.pb.h"
#import "Notifications.pb.h"
#import "UserProfiles.pb.h"
#import "UserTracking.pb.h"
// @@protoc_insertion_point(imports)

@class BAcceptConnectionRequest;
@class BAcceptConnectionRequestBuilder;
@class BAcceptConnectionResponse;
@class BAcceptConnectionResponseBuilder;
@class BAppOptions;
@class BAppOptionsBuilder;
@class BBlitzHereAppOptions;
@class BBlitzHereAppOptionsBuilder;
@class BClientRequest;
@class BClientRequestBuilder;
@class BConnection;
@class BConnectionBuilder;
@class BConnectionRequest;
@class BConnectionRequestBuilder;
@class BConnectionUpdate;
@class BConnectionUpdateBuilder;
@class BContactInfo;
@class BContactInfoBuilder;
@class BCoordinate;
@class BCoordinateBuilder;
@class BCoordinatePolygon;
@class BCoordinatePolygonBuilder;
@class BCoordinateRegion;
@class BCoordinateRegionBuilder;
@class BDebugMessage;
@class BDebugMessageBuilder;
@class BDeviceInfo;
@class BDeviceInfoBuilder;
@class BEducation;
@class BEducationBuilder;
@class BEmployment;
@class BEmploymentBuilder;
@class BGlobals;
@class BGlobalsBuilder;
@class BImageData;
@class BImageDataBuilder;
@class BImageUpload;
@class BImageUploadBuilder;
@class BKeyValue;
@class BKeyValueBuilder;
@class BLocation;
@class BLocationBuilder;
@class BNotification;
@class BNotificationBuilder;
@class BNotificationUpdate;
@class BNotificationUpdateBuilder;
@class BServerResponse;
@class BServerResponseBuilder;
@class BSessionRequest;
@class BSessionRequestBuilder;
@class BSessionResponse;
@class BSessionResponseBuilder;
@class BSize;
@class BSizeBuilder;
@class BSocialIdentity;
@class BSocialIdentityBuilder;
@class BTimespan;
@class BTimespanBuilder;
@class BTimestamp;
@class BTimestampBuilder;
@class BUserProfile;
@class BUserProfileBuilder;
@class BUserProfileQuery;
@class BUserProfileQueryBuilder;
@class BUserProfileUpdate;
@class BUserProfileUpdateBuilder;
@class BUserTrackingBatch;
@class BUserTrackingBatchBuilder;
@class BUserTrackingEvent;
@class BUserTrackingEventBuilder;
@class BUserTrackingResponse;
@class BUserTrackingResponseBuilder;
@class BVoid;
@class BVoidBuilder;
@class ObjectiveCFileOptions;
@class ObjectiveCFileOptionsBuilder;
@class PBDescriptorProto;
@class PBDescriptorProtoBuilder;
@class PBDescriptorProtoExtensionRange;
@class PBDescriptorProtoExtensionRangeBuilder;
@class PBDescriptorProtoReservedRange;
@class PBDescriptorProtoReservedRangeBuilder;
@class PBEnumDescriptorProto;
@class PBEnumDescriptorProtoBuilder;
@class PBEnumOptions;
@class PBEnumOptionsBuilder;
@class PBEnumValueDescriptorProto;
@class PBEnumValueDescriptorProtoBuilder;
@class PBEnumValueOptions;
@class PBEnumValueOptionsBuilder;
@class PBFieldDescriptorProto;
@class PBFieldDescriptorProtoBuilder;
@class PBFieldOptions;
@class PBFieldOptionsBuilder;
@class PBFileDescriptorProto;
@class PBFileDescriptorProtoBuilder;
@class PBFileDescriptorSet;
@class PBFileDescriptorSetBuilder;
@class PBFileOptions;
@class PBFileOptionsBuilder;
@class PBMessageOptions;
@class PBMessageOptionsBuilder;
@class PBMethodDescriptorProto;
@class PBMethodDescriptorProtoBuilder;
@class PBMethodOptions;
@class PBMethodOptionsBuilder;
@class PBOneofDescriptorProto;
@class PBOneofDescriptorProtoBuilder;
@class PBServiceDescriptorProto;
@class PBServiceDescriptorProtoBuilder;
@class PBServiceOptions;
@class PBServiceOptionsBuilder;
@class PBSourceCodeInfo;
@class PBSourceCodeInfoBuilder;
@class PBSourceCodeInfoLocation;
@class PBSourceCodeInfoLocationBuilder;
@class PBUninterpretedOption;
@class PBUninterpretedOptionBuilder;
@class PBUninterpretedOptionNamePart;
@class PBUninterpretedOptionNamePartBuilder;


typedef NS_ENUM(SInt32, BResponseCode) {
  BResponseCodeRCSuccess = 1,
  BResponseCodeRCInputCorrupt = 2,
  BResponseCodeRCInputInvalid = 3,
  BResponseCodeRCServerError = 4,
  BResponseCodeRCNotAuthorized = 5,
  BResponseCodeRCClientTooOld = 6,
};

BOOL BResponseCodeIsValidValue(BResponseCode value);
NSString *NSStringFromBResponseCode(BResponseCode value);


@interface BServerRoot : NSObject {
}
+ (PBExtensionRegistry*) extensionRegistry;
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry;
@end

#define DebugMessage_debugText @"debugText"
@interface BDebugMessage : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  NSMutableArray * debugTextArray;
}
@property (readonly, strong) NSArray * debugText;
- (NSString*)debugTextAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BDebugMessageBuilder*) builder;
+ (BDebugMessageBuilder*) builder;
+ (BDebugMessageBuilder*) builderWithPrototype:(BDebugMessage*) prototype;
- (BDebugMessageBuilder*) toBuilder;

+ (BDebugMessage*) parseFromData:(NSData*) data;
+ (BDebugMessage*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BDebugMessage*) parseFromInputStream:(NSInputStream*) input;
+ (BDebugMessage*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BDebugMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BDebugMessage*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BDebugMessageBuilder : PBGeneratedMessageBuilder {
@private
  BDebugMessage* resultDebugMessage;
}

- (BDebugMessage*) defaultInstance;

- (BDebugMessageBuilder*) clear;
- (BDebugMessageBuilder*) clone;

- (BDebugMessage*) build;
- (BDebugMessage*) buildPartial;

- (BDebugMessageBuilder*) mergeFrom:(BDebugMessage*) other;
- (BDebugMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BDebugMessageBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (NSMutableArray *)debugText;
- (NSString*)debugTextAtIndex:(NSUInteger)index;
- (BDebugMessageBuilder *)addDebugText:(NSString*)value;
- (BDebugMessageBuilder *)setDebugTextArray:(NSArray *)array;
- (BDebugMessageBuilder *)clearDebugText;
@end

#define SessionRequest_location @"location"
#define SessionRequest_deviceInfo @"deviceInfo"
#define SessionRequest_profile @"profile"
#define SessionRequest_lastAppDataResetDate @"lastAppDataResetDate"
@interface BSessionRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasLocation_:1;
  BOOL hasDeviceInfo_:1;
  BOOL hasProfile_:1;
  BOOL hasLastAppDataResetDate_:1;
  BLocation* location;
  BDeviceInfo* deviceInfo;
  BUserProfile* profile;
  BTimestamp* lastAppDataResetDate;
}
- (BOOL) hasLocation;
- (BOOL) hasDeviceInfo;
- (BOOL) hasProfile;
- (BOOL) hasLastAppDataResetDate;
@property (readonly, strong) BLocation* location;
@property (readonly, strong) BDeviceInfo* deviceInfo;
@property (readonly, strong) BUserProfile* profile;
@property (readonly, strong) BTimestamp* lastAppDataResetDate;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BSessionRequestBuilder*) builder;
+ (BSessionRequestBuilder*) builder;
+ (BSessionRequestBuilder*) builderWithPrototype:(BSessionRequest*) prototype;
- (BSessionRequestBuilder*) toBuilder;

+ (BSessionRequest*) parseFromData:(NSData*) data;
+ (BSessionRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BSessionRequest*) parseFromInputStream:(NSInputStream*) input;
+ (BSessionRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BSessionRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BSessionRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BSessionRequestBuilder : PBGeneratedMessageBuilder {
@private
  BSessionRequest* resultSessionRequest;
}

- (BSessionRequest*) defaultInstance;

- (BSessionRequestBuilder*) clear;
- (BSessionRequestBuilder*) clone;

- (BSessionRequest*) build;
- (BSessionRequest*) buildPartial;

- (BSessionRequestBuilder*) mergeFrom:(BSessionRequest*) other;
- (BSessionRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BSessionRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasLocation;
- (BLocation*) location;
- (BSessionRequestBuilder*) setLocation:(BLocation*) value;
- (BSessionRequestBuilder*) setLocationBuilder:(BLocationBuilder*) builderForValue;
- (BSessionRequestBuilder*) mergeLocation:(BLocation*) value;
- (BSessionRequestBuilder*) clearLocation;

- (BOOL) hasDeviceInfo;
- (BDeviceInfo*) deviceInfo;
- (BSessionRequestBuilder*) setDeviceInfo:(BDeviceInfo*) value;
- (BSessionRequestBuilder*) setDeviceInfoBuilder:(BDeviceInfoBuilder*) builderForValue;
- (BSessionRequestBuilder*) mergeDeviceInfo:(BDeviceInfo*) value;
- (BSessionRequestBuilder*) clearDeviceInfo;

- (BOOL) hasProfile;
- (BUserProfile*) profile;
- (BSessionRequestBuilder*) setProfile:(BUserProfile*) value;
- (BSessionRequestBuilder*) setProfileBuilder:(BUserProfileBuilder*) builderForValue;
- (BSessionRequestBuilder*) mergeProfile:(BUserProfile*) value;
- (BSessionRequestBuilder*) clearProfile;

- (BOOL) hasLastAppDataResetDate;
- (BTimestamp*) lastAppDataResetDate;
- (BSessionRequestBuilder*) setLastAppDataResetDate:(BTimestamp*) value;
- (BSessionRequestBuilder*) setLastAppDataResetDateBuilder:(BTimestampBuilder*) builderForValue;
- (BSessionRequestBuilder*) mergeLastAppDataResetDate:(BTimestamp*) value;
- (BSessionRequestBuilder*) clearLastAppDataResetDate;
@end

@interface BBlitzHereAppOptions : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
}

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BBlitzHereAppOptionsBuilder*) builder;
+ (BBlitzHereAppOptionsBuilder*) builder;
+ (BBlitzHereAppOptionsBuilder*) builderWithPrototype:(BBlitzHereAppOptions*) prototype;
- (BBlitzHereAppOptionsBuilder*) toBuilder;

+ (BBlitzHereAppOptions*) parseFromData:(NSData*) data;
+ (BBlitzHereAppOptions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BBlitzHereAppOptions*) parseFromInputStream:(NSInputStream*) input;
+ (BBlitzHereAppOptions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BBlitzHereAppOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BBlitzHereAppOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BBlitzHereAppOptionsBuilder : PBGeneratedMessageBuilder {
@private
  BBlitzHereAppOptions* resultBlitzHereAppOptions;
}

- (BBlitzHereAppOptions*) defaultInstance;

- (BBlitzHereAppOptionsBuilder*) clear;
- (BBlitzHereAppOptionsBuilder*) clone;

- (BBlitzHereAppOptions*) build;
- (BBlitzHereAppOptions*) buildPartial;

- (BBlitzHereAppOptionsBuilder*) mergeFrom:(BBlitzHereAppOptions*) other;
- (BBlitzHereAppOptionsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BBlitzHereAppOptionsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

#define AppOptions_blitzHereOptions @"blitzHereOptions"
@interface BAppOptions : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasBlitzHereOptions_:1;
  BBlitzHereAppOptions* blitzHereOptions;
}
- (BOOL) hasBlitzHereOptions;
@property (readonly, strong) BBlitzHereAppOptions* blitzHereOptions;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BAppOptionsBuilder*) builder;
+ (BAppOptionsBuilder*) builder;
+ (BAppOptionsBuilder*) builderWithPrototype:(BAppOptions*) prototype;
- (BAppOptionsBuilder*) toBuilder;

+ (BAppOptions*) parseFromData:(NSData*) data;
+ (BAppOptions*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BAppOptions*) parseFromInputStream:(NSInputStream*) input;
+ (BAppOptions*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BAppOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BAppOptions*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BAppOptionsBuilder : PBGeneratedMessageBuilder {
@private
  BAppOptions* resultAppOptions;
}

- (BAppOptions*) defaultInstance;

- (BAppOptionsBuilder*) clear;
- (BAppOptionsBuilder*) clone;

- (BAppOptions*) build;
- (BAppOptions*) buildPartial;

- (BAppOptionsBuilder*) mergeFrom:(BAppOptions*) other;
- (BAppOptionsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BAppOptionsBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasBlitzHereOptions;
- (BBlitzHereAppOptions*) blitzHereOptions;
- (BAppOptionsBuilder*) setBlitzHereOptions:(BBlitzHereAppOptions*) value;
- (BAppOptionsBuilder*) setBlitzHereOptionsBuilder:(BBlitzHereAppOptionsBuilder*) builderForValue;
- (BAppOptionsBuilder*) mergeBlitzHereOptions:(BBlitzHereAppOptions*) value;
- (BAppOptionsBuilder*) clearBlitzHereOptions;
@end

#define SessionResponse_userID @"userID"
#define SessionResponse_sessionToken @"sessionToken"
#define SessionResponse_serverURL @"serverURL"
#define SessionResponse_userNotifications @"userNotifications"
#define SessionResponse_userProfile @"userProfile"
#define SessionResponse_resetAllAppData @"resetAllAppData"
#define SessionResponse_appOptions @"appOptions"
@interface BSessionResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasResetAllAppData_:1;
  BOOL hasUserID_:1;
  BOOL hasSessionToken_:1;
  BOOL hasServerURL_:1;
  BOOL hasUserProfile_:1;
  BOOL hasAppOptions_:1;
  BOOL resetAllAppData_:1;
  NSString* userID;
  NSString* sessionToken;
  NSString* serverURL;
  BUserProfile* userProfile;
  BAppOptions* appOptions;
  NSMutableArray * userNotificationsArray;
}
- (BOOL) hasUserID;
- (BOOL) hasSessionToken;
- (BOOL) hasServerURL;
- (BOOL) hasUserProfile;
- (BOOL) hasResetAllAppData;
- (BOOL) hasAppOptions;
@property (readonly, strong) NSString* userID;
@property (readonly, strong) NSString* sessionToken;
@property (readonly, strong) NSString* serverURL;
@property (readonly, strong) NSArray * userNotifications;
@property (readonly, strong) BUserProfile* userProfile;
- (BOOL) resetAllAppData;
@property (readonly, strong) BAppOptions* appOptions;
- (BNotification*)userNotificationsAtIndex:(NSUInteger)index;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BSessionResponseBuilder*) builder;
+ (BSessionResponseBuilder*) builder;
+ (BSessionResponseBuilder*) builderWithPrototype:(BSessionResponse*) prototype;
- (BSessionResponseBuilder*) toBuilder;

+ (BSessionResponse*) parseFromData:(NSData*) data;
+ (BSessionResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BSessionResponse*) parseFromInputStream:(NSInputStream*) input;
+ (BSessionResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BSessionResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BSessionResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BSessionResponseBuilder : PBGeneratedMessageBuilder {
@private
  BSessionResponse* resultSessionResponse;
}

- (BSessionResponse*) defaultInstance;

- (BSessionResponseBuilder*) clear;
- (BSessionResponseBuilder*) clone;

- (BSessionResponse*) build;
- (BSessionResponse*) buildPartial;

- (BSessionResponseBuilder*) mergeFrom:(BSessionResponse*) other;
- (BSessionResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BSessionResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasUserID;
- (NSString*) userID;
- (BSessionResponseBuilder*) setUserID:(NSString*) value;
- (BSessionResponseBuilder*) clearUserID;

- (BOOL) hasSessionToken;
- (NSString*) sessionToken;
- (BSessionResponseBuilder*) setSessionToken:(NSString*) value;
- (BSessionResponseBuilder*) clearSessionToken;

- (BOOL) hasServerURL;
- (NSString*) serverURL;
- (BSessionResponseBuilder*) setServerURL:(NSString*) value;
- (BSessionResponseBuilder*) clearServerURL;

- (NSMutableArray *)userNotifications;
- (BNotification*)userNotificationsAtIndex:(NSUInteger)index;
- (BSessionResponseBuilder *)addUserNotifications:(BNotification*)value;
- (BSessionResponseBuilder *)setUserNotificationsArray:(NSArray *)array;
- (BSessionResponseBuilder *)clearUserNotifications;

- (BOOL) hasUserProfile;
- (BUserProfile*) userProfile;
- (BSessionResponseBuilder*) setUserProfile:(BUserProfile*) value;
- (BSessionResponseBuilder*) setUserProfileBuilder:(BUserProfileBuilder*) builderForValue;
- (BSessionResponseBuilder*) mergeUserProfile:(BUserProfile*) value;
- (BSessionResponseBuilder*) clearUserProfile;

- (BOOL) hasResetAllAppData;
- (BOOL) resetAllAppData;
- (BSessionResponseBuilder*) setResetAllAppData:(BOOL) value;
- (BSessionResponseBuilder*) clearResetAllAppData;

- (BOOL) hasAppOptions;
- (BAppOptions*) appOptions;
- (BSessionResponseBuilder*) setAppOptions:(BAppOptions*) value;
- (BSessionResponseBuilder*) setAppOptionsBuilder:(BAppOptionsBuilder*) builderForValue;
- (BSessionResponseBuilder*) mergeAppOptions:(BAppOptions*) value;
- (BSessionResponseBuilder*) clearAppOptions;
@end

#define ClientRequest_sessionToken @"sessionToken"
#define ClientRequest_sessionRequest @"sessionRequest"
#define ClientRequest_userTrackingBatch @"userTrackingBatch"
#define ClientRequest_userProfileUpdate @"userProfileUpdate"
#define ClientRequest_userProfileQuery @"userProfileQuery"
#define ClientRequest_notificationSendRequest @"notificationSendRequest"
#define ClientRequest_notificationFetchRequest @"notificationFetchRequest"
#define ClientRequest_debugMessage @"debugMessage"
#define ClientRequest_imageUpload @"imageUpload"
#define ClientRequest_acceptInviteRequest @"acceptInviteRequest"
@interface BClientRequest : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasSessionToken_:1;
  BOOL hasSessionRequest_:1;
  BOOL hasUserTrackingBatch_:1;
  BOOL hasUserProfileUpdate_:1;
  BOOL hasUserProfileQuery_:1;
  BOOL hasNotificationSendRequest_:1;
  BOOL hasNotificationFetchRequest_:1;
  BOOL hasDebugMessage_:1;
  BOOL hasImageUpload_:1;
  BOOL hasAcceptInviteRequest_:1;
  NSString* sessionToken;
  BSessionRequest* sessionRequest;
  BUserTrackingBatch* userTrackingBatch;
  BUserProfileUpdate* userProfileUpdate;
  BUserProfileQuery* userProfileQuery;
  BNotificationUpdate* notificationSendRequest;
  BNotificationUpdate* notificationFetchRequest;
  BDebugMessage* debugMessage;
  BImageUpload* imageUpload;
  BAcceptConnectionRequest* acceptInviteRequest;
}
- (BOOL) hasSessionToken;
- (BOOL) hasSessionRequest;
- (BOOL) hasUserTrackingBatch;
- (BOOL) hasUserProfileUpdate;
- (BOOL) hasUserProfileQuery;
- (BOOL) hasNotificationSendRequest;
- (BOOL) hasNotificationFetchRequest;
- (BOOL) hasDebugMessage;
- (BOOL) hasImageUpload;
- (BOOL) hasAcceptInviteRequest;
@property (readonly, strong) NSString* sessionToken;
@property (readonly, strong) BSessionRequest* sessionRequest;
@property (readonly, strong) BUserTrackingBatch* userTrackingBatch;
@property (readonly, strong) BUserProfileUpdate* userProfileUpdate;
@property (readonly, strong) BUserProfileQuery* userProfileQuery;
@property (readonly, strong) BNotificationUpdate* notificationSendRequest;
@property (readonly, strong) BNotificationUpdate* notificationFetchRequest;
@property (readonly, strong) BDebugMessage* debugMessage;
@property (readonly, strong) BImageUpload* imageUpload;
@property (readonly, strong) BAcceptConnectionRequest* acceptInviteRequest;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BClientRequestBuilder*) builder;
+ (BClientRequestBuilder*) builder;
+ (BClientRequestBuilder*) builderWithPrototype:(BClientRequest*) prototype;
- (BClientRequestBuilder*) toBuilder;

+ (BClientRequest*) parseFromData:(NSData*) data;
+ (BClientRequest*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BClientRequest*) parseFromInputStream:(NSInputStream*) input;
+ (BClientRequest*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BClientRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BClientRequest*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BClientRequestBuilder : PBGeneratedMessageBuilder {
@private
  BClientRequest* resultClientRequest;
}

- (BClientRequest*) defaultInstance;

- (BClientRequestBuilder*) clear;
- (BClientRequestBuilder*) clone;

- (BClientRequest*) build;
- (BClientRequest*) buildPartial;

- (BClientRequestBuilder*) mergeFrom:(BClientRequest*) other;
- (BClientRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BClientRequestBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasSessionToken;
- (NSString*) sessionToken;
- (BClientRequestBuilder*) setSessionToken:(NSString*) value;
- (BClientRequestBuilder*) clearSessionToken;

- (BOOL) hasSessionRequest;
- (BSessionRequest*) sessionRequest;
- (BClientRequestBuilder*) setSessionRequest:(BSessionRequest*) value;
- (BClientRequestBuilder*) setSessionRequestBuilder:(BSessionRequestBuilder*) builderForValue;
- (BClientRequestBuilder*) mergeSessionRequest:(BSessionRequest*) value;
- (BClientRequestBuilder*) clearSessionRequest;

- (BOOL) hasUserTrackingBatch;
- (BUserTrackingBatch*) userTrackingBatch;
- (BClientRequestBuilder*) setUserTrackingBatch:(BUserTrackingBatch*) value;
- (BClientRequestBuilder*) setUserTrackingBatchBuilder:(BUserTrackingBatchBuilder*) builderForValue;
- (BClientRequestBuilder*) mergeUserTrackingBatch:(BUserTrackingBatch*) value;
- (BClientRequestBuilder*) clearUserTrackingBatch;

- (BOOL) hasUserProfileUpdate;
- (BUserProfileUpdate*) userProfileUpdate;
- (BClientRequestBuilder*) setUserProfileUpdate:(BUserProfileUpdate*) value;
- (BClientRequestBuilder*) setUserProfileUpdateBuilder:(BUserProfileUpdateBuilder*) builderForValue;
- (BClientRequestBuilder*) mergeUserProfileUpdate:(BUserProfileUpdate*) value;
- (BClientRequestBuilder*) clearUserProfileUpdate;

- (BOOL) hasUserProfileQuery;
- (BUserProfileQuery*) userProfileQuery;
- (BClientRequestBuilder*) setUserProfileQuery:(BUserProfileQuery*) value;
- (BClientRequestBuilder*) setUserProfileQueryBuilder:(BUserProfileQueryBuilder*) builderForValue;
- (BClientRequestBuilder*) mergeUserProfileQuery:(BUserProfileQuery*) value;
- (BClientRequestBuilder*) clearUserProfileQuery;

- (BOOL) hasNotificationSendRequest;
- (BNotificationUpdate*) notificationSendRequest;
- (BClientRequestBuilder*) setNotificationSendRequest:(BNotificationUpdate*) value;
- (BClientRequestBuilder*) setNotificationSendRequestBuilder:(BNotificationUpdateBuilder*) builderForValue;
- (BClientRequestBuilder*) mergeNotificationSendRequest:(BNotificationUpdate*) value;
- (BClientRequestBuilder*) clearNotificationSendRequest;

- (BOOL) hasNotificationFetchRequest;
- (BNotificationUpdate*) notificationFetchRequest;
- (BClientRequestBuilder*) setNotificationFetchRequest:(BNotificationUpdate*) value;
- (BClientRequestBuilder*) setNotificationFetchRequestBuilder:(BNotificationUpdateBuilder*) builderForValue;
- (BClientRequestBuilder*) mergeNotificationFetchRequest:(BNotificationUpdate*) value;
- (BClientRequestBuilder*) clearNotificationFetchRequest;

- (BOOL) hasDebugMessage;
- (BDebugMessage*) debugMessage;
- (BClientRequestBuilder*) setDebugMessage:(BDebugMessage*) value;
- (BClientRequestBuilder*) setDebugMessageBuilder:(BDebugMessageBuilder*) builderForValue;
- (BClientRequestBuilder*) mergeDebugMessage:(BDebugMessage*) value;
- (BClientRequestBuilder*) clearDebugMessage;

- (BOOL) hasImageUpload;
- (BImageUpload*) imageUpload;
- (BClientRequestBuilder*) setImageUpload:(BImageUpload*) value;
- (BClientRequestBuilder*) setImageUploadBuilder:(BImageUploadBuilder*) builderForValue;
- (BClientRequestBuilder*) mergeImageUpload:(BImageUpload*) value;
- (BClientRequestBuilder*) clearImageUpload;

- (BOOL) hasAcceptInviteRequest;
- (BAcceptConnectionRequest*) acceptInviteRequest;
- (BClientRequestBuilder*) setAcceptInviteRequest:(BAcceptConnectionRequest*) value;
- (BClientRequestBuilder*) setAcceptInviteRequestBuilder:(BAcceptConnectionRequestBuilder*) builderForValue;
- (BClientRequestBuilder*) mergeAcceptInviteRequest:(BAcceptConnectionRequest*) value;
- (BClientRequestBuilder*) clearAcceptInviteRequest;
@end

#define ServerResponse_responseCode @"responseCode"
#define ServerResponse_responseMessage @"responseMessage"
#define ServerResponse_sessionResponse @"sessionResponse"
#define ServerResponse_userTrackingResponse @"userTrackingResponse"
#define ServerResponse_profileUpdate @"profileUpdate"
#define ServerResponse_profileQuery @"profileQuery"
#define ServerResponse_notificationUpdate @"notificationUpdate"
#define ServerResponse_debugMessage @"debugMessage"
#define ServerResponse_imageUploadReply @"imageUploadReply"
@interface BServerResponse : PBGeneratedMessage<GeneratedMessageProtocol> {
@private
  BOOL hasResponseMessage_:1;
  BOOL hasSessionResponse_:1;
  BOOL hasUserTrackingResponse_:1;
  BOOL hasProfileUpdate_:1;
  BOOL hasProfileQuery_:1;
  BOOL hasNotificationUpdate_:1;
  BOOL hasDebugMessage_:1;
  BOOL hasImageUploadReply_:1;
  BOOL hasResponseCode_:1;
  NSString* responseMessage;
  BSessionResponse* sessionResponse;
  BUserTrackingResponse* userTrackingResponse;
  BUserProfileUpdate* profileUpdate;
  BUserProfileQuery* profileQuery;
  BNotificationUpdate* notificationUpdate;
  BDebugMessage* debugMessage;
  BImageUpload* imageUploadReply;
  BResponseCode responseCode;
}
- (BOOL) hasResponseCode;
- (BOOL) hasResponseMessage;
- (BOOL) hasSessionResponse;
- (BOOL) hasUserTrackingResponse;
- (BOOL) hasProfileUpdate;
- (BOOL) hasProfileQuery;
- (BOOL) hasNotificationUpdate;
- (BOOL) hasDebugMessage;
- (BOOL) hasImageUploadReply;
@property (readonly) BResponseCode responseCode;
@property (readonly, strong) NSString* responseMessage;
@property (readonly, strong) BSessionResponse* sessionResponse;
@property (readonly, strong) BUserTrackingResponse* userTrackingResponse;
@property (readonly, strong) BUserProfileUpdate* profileUpdate;
@property (readonly, strong) BUserProfileQuery* profileQuery;
@property (readonly, strong) BNotificationUpdate* notificationUpdate;
@property (readonly, strong) BDebugMessage* debugMessage;
@property (readonly, strong) BImageUpload* imageUploadReply;

+ (instancetype) defaultInstance;
- (instancetype) defaultInstance;

- (BOOL) isInitialized;
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output;
- (BServerResponseBuilder*) builder;
+ (BServerResponseBuilder*) builder;
+ (BServerResponseBuilder*) builderWithPrototype:(BServerResponse*) prototype;
- (BServerResponseBuilder*) toBuilder;

+ (BServerResponse*) parseFromData:(NSData*) data;
+ (BServerResponse*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BServerResponse*) parseFromInputStream:(NSInputStream*) input;
+ (BServerResponse*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
+ (BServerResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input;
+ (BServerResponse*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;
@end

@interface BServerResponseBuilder : PBGeneratedMessageBuilder {
@private
  BServerResponse* resultServerResponse;
}

- (BServerResponse*) defaultInstance;

- (BServerResponseBuilder*) clear;
- (BServerResponseBuilder*) clone;

- (BServerResponse*) build;
- (BServerResponse*) buildPartial;

- (BServerResponseBuilder*) mergeFrom:(BServerResponse*) other;
- (BServerResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input;
- (BServerResponseBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry;

- (BOOL) hasResponseCode;
- (BResponseCode) responseCode;
- (BServerResponseBuilder*) setResponseCode:(BResponseCode) value;
- (BServerResponseBuilder*) clearResponseCode;

- (BOOL) hasResponseMessage;
- (NSString*) responseMessage;
- (BServerResponseBuilder*) setResponseMessage:(NSString*) value;
- (BServerResponseBuilder*) clearResponseMessage;

- (BOOL) hasSessionResponse;
- (BSessionResponse*) sessionResponse;
- (BServerResponseBuilder*) setSessionResponse:(BSessionResponse*) value;
- (BServerResponseBuilder*) setSessionResponseBuilder:(BSessionResponseBuilder*) builderForValue;
- (BServerResponseBuilder*) mergeSessionResponse:(BSessionResponse*) value;
- (BServerResponseBuilder*) clearSessionResponse;

- (BOOL) hasUserTrackingResponse;
- (BUserTrackingResponse*) userTrackingResponse;
- (BServerResponseBuilder*) setUserTrackingResponse:(BUserTrackingResponse*) value;
- (BServerResponseBuilder*) setUserTrackingResponseBuilder:(BUserTrackingResponseBuilder*) builderForValue;
- (BServerResponseBuilder*) mergeUserTrackingResponse:(BUserTrackingResponse*) value;
- (BServerResponseBuilder*) clearUserTrackingResponse;

- (BOOL) hasProfileUpdate;
- (BUserProfileUpdate*) profileUpdate;
- (BServerResponseBuilder*) setProfileUpdate:(BUserProfileUpdate*) value;
- (BServerResponseBuilder*) setProfileUpdateBuilder:(BUserProfileUpdateBuilder*) builderForValue;
- (BServerResponseBuilder*) mergeProfileUpdate:(BUserProfileUpdate*) value;
- (BServerResponseBuilder*) clearProfileUpdate;

- (BOOL) hasProfileQuery;
- (BUserProfileQuery*) profileQuery;
- (BServerResponseBuilder*) setProfileQuery:(BUserProfileQuery*) value;
- (BServerResponseBuilder*) setProfileQueryBuilder:(BUserProfileQueryBuilder*) builderForValue;
- (BServerResponseBuilder*) mergeProfileQuery:(BUserProfileQuery*) value;
- (BServerResponseBuilder*) clearProfileQuery;

- (BOOL) hasNotificationUpdate;
- (BNotificationUpdate*) notificationUpdate;
- (BServerResponseBuilder*) setNotificationUpdate:(BNotificationUpdate*) value;
- (BServerResponseBuilder*) setNotificationUpdateBuilder:(BNotificationUpdateBuilder*) builderForValue;
- (BServerResponseBuilder*) mergeNotificationUpdate:(BNotificationUpdate*) value;
- (BServerResponseBuilder*) clearNotificationUpdate;

- (BOOL) hasDebugMessage;
- (BDebugMessage*) debugMessage;
- (BServerResponseBuilder*) setDebugMessage:(BDebugMessage*) value;
- (BServerResponseBuilder*) setDebugMessageBuilder:(BDebugMessageBuilder*) builderForValue;
- (BServerResponseBuilder*) mergeDebugMessage:(BDebugMessage*) value;
- (BServerResponseBuilder*) clearDebugMessage;

- (BOOL) hasImageUploadReply;
- (BImageUpload*) imageUploadReply;
- (BServerResponseBuilder*) setImageUploadReply:(BImageUpload*) value;
- (BServerResponseBuilder*) setImageUploadReplyBuilder:(BImageUploadBuilder*) builderForValue;
- (BServerResponseBuilder*) mergeImageUploadReply:(BImageUpload*) value;
- (BServerResponseBuilder*) clearImageUploadReply;
@end


// @@protoc_insertion_point(global_scope)
