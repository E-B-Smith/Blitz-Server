// Code generated by protoc-gen-go.
// source: Connections.proto
// DO NOT EDIT!

/*
Package BlitzMessage is a generated protocol buffer package.

It is generated from these files:
	Connections.proto
	Device.proto
	Feed.proto
	Notifications.proto
	Search.proto
	Server.proto
	Types.proto
	UserProfiles.proto
	UserTracking.proto

It has these top-level messages:
	Connection
	ConnectionUpdate
	ConnectionRequest
	AcceptConnectionRequest
	AcceptConnectionResponse
	DeviceInfo
	FeedReplyTag
	FeedReply
	FeedPost
	FeedPostFetchRequest
	FeedPostFetchResponse
	FeedPostUpdateRequest
	FeedPostUpdateResponse
	FeedPostVote
	FollowRequest
	Notification
	NotificationUpdate
	AutocompleteRequest
	AutocompleteResponse
	DebugMessage
	SessionRequest
	BlitzHereAppOptions
	AppOptions
	SessionResponse
	ClientRequest
	ServerResponse
	Globals
	Coordinate
	Size
	CoordinateRegion
	CoordinatePolygon
	Location
	Timestamp
	Timespan
	Void
	KeyValue
	SocialIdentity
	ContactInfo
	Employment
	Education
	UserProfile
	ImageData
	ImageUpload
	UserProfileUpdate
	UserProfileQuery
	UserTrackingEvent
	UserTrackingBatch
	UserTrackingResponse
*/
package BlitzMessage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// discarding unused import google_protobuf1 "."

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type ConnectionStatus int32

const (
	ConnectionStatus_CSUnknown  ConnectionStatus = 0
	ConnectionStatus_CSInviter  ConnectionStatus = 1
	ConnectionStatus_CSInvitee  ConnectionStatus = 2
	ConnectionStatus_CSIgnored  ConnectionStatus = 3
	ConnectionStatus_CSAccepted ConnectionStatus = 4
)

var ConnectionStatus_name = map[int32]string{
	0: "CSUnknown",
	1: "CSInviter",
	2: "CSInvitee",
	3: "CSIgnored",
	4: "CSAccepted",
}
var ConnectionStatus_value = map[string]int32{
	"CSUnknown":  0,
	"CSInviter":  1,
	"CSInvitee":  2,
	"CSIgnored":  3,
	"CSAccepted": 4,
}

func (x ConnectionStatus) Enum() *ConnectionStatus {
	p := new(ConnectionStatus)
	*p = x
	return p
}
func (x ConnectionStatus) String() string {
	return proto.EnumName(ConnectionStatus_name, int32(x))
}
func (x *ConnectionStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ConnectionStatus_value, data, "ConnectionStatus")
	if err != nil {
		return err
	}
	*x = ConnectionStatus(value)
	return nil
}

type Connection struct {
	ConnectionID     *string           `protobuf:"bytes,1,req,name=connectionID" json:"connectionID,omitempty"`
	FriendStatus     *ConnectionStatus `protobuf:"varint,2,req,name=friendStatus,enum=BlitzMessage.ConnectionStatus" json:"friendStatus,omitempty"`
	IsInCircle       *bool             `protobuf:"varint,3,opt,name=isInCircle" json:"isInCircle,omitempty"`
	InviteLink       *string           `protobuf:"bytes,4,opt,name=inviteLink" json:"inviteLink,omitempty"`
	XXX_unrecognized []byte            `json:"-"`
}

func (m *Connection) Reset()         { *m = Connection{} }
func (m *Connection) String() string { return proto.CompactTextString(m) }
func (*Connection) ProtoMessage()    {}

func (m *Connection) GetConnectionID() string {
	if m != nil && m.ConnectionID != nil {
		return *m.ConnectionID
	}
	return ""
}

func (m *Connection) GetFriendStatus() ConnectionStatus {
	if m != nil && m.FriendStatus != nil {
		return *m.FriendStatus
	}
	return ConnectionStatus_CSUnknown
}

func (m *Connection) GetIsInCircle() bool {
	if m != nil && m.IsInCircle != nil {
		return *m.IsInCircle
	}
	return false
}

func (m *Connection) GetInviteLink() string {
	if m != nil && m.InviteLink != nil {
		return *m.InviteLink
	}
	return ""
}

type ConnectionUpdate struct {
	Connections      []*Connection `protobuf:"bytes,1,rep,name=connections" json:"connections,omitempty"`
	XXX_unrecognized []byte        `json:"-"`
}

func (m *ConnectionUpdate) Reset()         { *m = ConnectionUpdate{} }
func (m *ConnectionUpdate) String() string { return proto.CompactTextString(m) }
func (*ConnectionUpdate) ProtoMessage()    {}

func (m *ConnectionUpdate) GetConnections() []*Connection {
	if m != nil {
		return m.Connections
	}
	return nil
}

type ConnectionRequest struct {
	ConnectionProfile *UserProfile `protobuf:"bytes,1,opt,name=connectionProfile" json:"connectionProfile,omitempty"`
	IsInCircle        *bool        `protobuf:"varint,2,opt,name=isInCircle" json:"isInCircle,omitempty"`
	XXX_unrecognized  []byte       `json:"-"`
}

func (m *ConnectionRequest) Reset()         { *m = ConnectionRequest{} }
func (m *ConnectionRequest) String() string { return proto.CompactTextString(m) }
func (*ConnectionRequest) ProtoMessage()    {}

func (m *ConnectionRequest) GetConnectionProfile() *UserProfile {
	if m != nil {
		return m.ConnectionProfile
	}
	return nil
}

func (m *ConnectionRequest) GetIsInCircle() bool {
	if m != nil && m.IsInCircle != nil {
		return *m.IsInCircle
	}
	return false
}

type AcceptConnectionRequest struct {
	UserID           *string        `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	ConnectionID     *string        `protobuf:"bytes,2,opt,name=connectionID" json:"connectionID,omitempty"`
	Message          *string        `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	ContactInfo      *ContactInfo   `protobuf:"bytes,4,opt,name=contactInfo" json:"contactInfo,omitempty"`
	Profiles         []*UserProfile `protobuf:"bytes,5,rep,name=profiles" json:"profiles,omitempty"`
	ConfirmationCode *string        `protobuf:"bytes,6,opt,name=confirmationCode" json:"confirmationCode,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *AcceptConnectionRequest) Reset()         { *m = AcceptConnectionRequest{} }
func (m *AcceptConnectionRequest) String() string { return proto.CompactTextString(m) }
func (*AcceptConnectionRequest) ProtoMessage()    {}

func (m *AcceptConnectionRequest) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *AcceptConnectionRequest) GetConnectionID() string {
	if m != nil && m.ConnectionID != nil {
		return *m.ConnectionID
	}
	return ""
}

func (m *AcceptConnectionRequest) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *AcceptConnectionRequest) GetContactInfo() *ContactInfo {
	if m != nil {
		return m.ContactInfo
	}
	return nil
}

func (m *AcceptConnectionRequest) GetProfiles() []*UserProfile {
	if m != nil {
		return m.Profiles
	}
	return nil
}

func (m *AcceptConnectionRequest) GetConfirmationCode() string {
	if m != nil && m.ConfirmationCode != nil {
		return *m.ConfirmationCode
	}
	return ""
}

type AcceptConnectionResponse struct {
	UserID           *string        `protobuf:"bytes,1,opt,name=userID" json:"userID,omitempty"`
	ConnectionID     *string        `protobuf:"bytes,2,opt,name=connectionID" json:"connectionID,omitempty"`
	Message          *string        `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Conections       []*Connection  `protobuf:"bytes,4,rep,name=conections" json:"conections,omitempty"`
	Profiles         []*UserProfile `protobuf:"bytes,5,rep,name=profiles" json:"profiles,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *AcceptConnectionResponse) Reset()         { *m = AcceptConnectionResponse{} }
func (m *AcceptConnectionResponse) String() string { return proto.CompactTextString(m) }
func (*AcceptConnectionResponse) ProtoMessage()    {}

func (m *AcceptConnectionResponse) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *AcceptConnectionResponse) GetConnectionID() string {
	if m != nil && m.ConnectionID != nil {
		return *m.ConnectionID
	}
	return ""
}

func (m *AcceptConnectionResponse) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *AcceptConnectionResponse) GetConections() []*Connection {
	if m != nil {
		return m.Conections
	}
	return nil
}

func (m *AcceptConnectionResponse) GetProfiles() []*UserProfile {
	if m != nil {
		return m.Profiles
	}
	return nil
}

func init() {
	proto.RegisterEnum("BlitzMessage.ConnectionStatus", ConnectionStatus_name, ConnectionStatus_value)
}
