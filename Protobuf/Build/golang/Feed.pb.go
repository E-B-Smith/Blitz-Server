// Code generated by protoc-gen-go.
// source: Feed.proto
// DO NOT EDIT!

package BlitzMessage

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"


// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type FeedPostType int32

const (
	FeedPostType_FPUnknown           FeedPostType = 0
	FeedPostType_FPOpenEndedQuestion FeedPostType = 1
	FeedPostType_FPOpenEndedReply    FeedPostType = 2
	FeedPostType_FPSurveyQuestion    FeedPostType = 3
	FeedPostType_FPSurveyAnswer      FeedPostType = 4
)

var FeedPostType_name = map[int32]string{
	0: "FPUnknown",
	1: "FPOpenEndedQuestion",
	2: "FPOpenEndedReply",
	3: "FPSurveyQuestion",
	4: "FPSurveyAnswer",
}
var FeedPostType_value = map[string]int32{
	"FPUnknown":           0,
	"FPOpenEndedQuestion": 1,
	"FPOpenEndedReply":    2,
	"FPSurveyQuestion":    3,
	"FPSurveyAnswer":      4,
}

func (x FeedPostType) Enum() *FeedPostType {
	p := new(FeedPostType)
	*p = x
	return p
}
func (x FeedPostType) String() string {
	return proto.EnumName(FeedPostType_name, int32(x))
}
func (x *FeedPostType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FeedPostType_value, data, "FeedPostType")
	if err != nil {
		return err
	}
	*x = FeedPostType(value)
	return nil
}
func (FeedPostType) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

type FeedPostScope int32

const (
	FeedPostScope_FPScopeUnknown       FeedPostScope = 0
	FeedPostScope_FPScopeLocalNetwork  FeedPostScope = 1
	FeedPostScope_FPScopeGlobalNetwork FeedPostScope = 2
)

var FeedPostScope_name = map[int32]string{
	0: "FPScopeUnknown",
	1: "FPScopeLocalNetwork",
	2: "FPScopeGlobalNetwork",
}
var FeedPostScope_value = map[string]int32{
	"FPScopeUnknown":       0,
	"FPScopeLocalNetwork":  1,
	"FPScopeGlobalNetwork": 2,
}

func (x FeedPostScope) Enum() *FeedPostScope {
	p := new(FeedPostScope)
	*p = x
	return p
}
func (x FeedPostScope) String() string {
	return proto.EnumName(FeedPostScope_name, int32(x))
}
func (x *FeedPostScope) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FeedPostScope_value, data, "FeedPostScope")
	if err != nil {
		return err
	}
	*x = FeedPostScope(value)
	return nil
}
func (FeedPostScope) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

type FeedPostStatus int32

const (
	FeedPostStatus_FPSUnknown FeedPostStatus = 0
	FeedPostStatus_FPSActive  FeedPostStatus = 1
	FeedPostStatus_FPSDeleted FeedPostStatus = 2
)

var FeedPostStatus_name = map[int32]string{
	0: "FPSUnknown",
	1: "FPSActive",
	2: "FPSDeleted",
}
var FeedPostStatus_value = map[string]int32{
	"FPSUnknown": 0,
	"FPSActive":  1,
	"FPSDeleted": 2,
}

func (x FeedPostStatus) Enum() *FeedPostStatus {
	p := new(FeedPostStatus)
	*p = x
	return p
}
func (x FeedPostStatus) String() string {
	return proto.EnumName(FeedPostStatus_name, int32(x))
}
func (x *FeedPostStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FeedPostStatus_value, data, "FeedPostStatus")
	if err != nil {
		return err
	}
	*x = FeedPostStatus(value)
	return nil
}
func (FeedPostStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

type UpdateVerb int32

const (
	UpdateVerb_UVCreate UpdateVerb = 1
	UpdateVerb_UVUpdate UpdateVerb = 2
	UpdateVerb_UVDelete UpdateVerb = 3
)

var UpdateVerb_name = map[int32]string{
	1: "UVCreate",
	2: "UVUpdate",
	3: "UVDelete",
}
var UpdateVerb_value = map[string]int32{
	"UVCreate": 1,
	"UVUpdate": 2,
	"UVDelete": 3,
}

func (x UpdateVerb) Enum() *UpdateVerb {
	p := new(UpdateVerb)
	*p = x
	return p
}
func (x UpdateVerb) String() string {
	return proto.EnumName(UpdateVerb_name, int32(x))
}
func (x *UpdateVerb) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(UpdateVerb_value, data, "UpdateVerb")
	if err != nil {
		return err
	}
	*x = UpdateVerb(value)
	return nil
}
func (UpdateVerb) EnumDescriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

type FeedPost struct {
	PostID                   *string        `protobuf:"bytes,1,opt,name=postID" json:"postID,omitempty"`
	ParentID                 *string        `protobuf:"bytes,2,opt,name=parentID" json:"parentID,omitempty"`
	PostType                 *FeedPostType  `protobuf:"varint,3,opt,name=postType,enum=BlitzMessage.FeedPostType" json:"postType,omitempty"`
	PostScope                *FeedPostScope `protobuf:"varint,4,opt,name=postScope,enum=BlitzMessage.FeedPostScope" json:"postScope,omitempty"`
	UserID                   *string        `protobuf:"bytes,5,opt,name=userID" json:"userID,omitempty"`
	AnonymousPost            *bool          `protobuf:"varint,6,opt,name=anonymousPost,def=0" json:"anonymousPost,omitempty"`
	Timestamp                *Timestamp     `protobuf:"bytes,7,opt,name=timestamp" json:"timestamp,omitempty"`
	TimespanActive           *Timespan      `protobuf:"bytes,8,opt,name=timespanActive" json:"timespanActive,omitempty"`
	HeadlineText             *string        `protobuf:"bytes,9,opt,name=headlineText" json:"headlineText,omitempty"`
	BodyText                 *string        `protobuf:"bytes,10,opt,name=bodyText" json:"bodyText,omitempty"`
	PostTags                 []*EntityTag   `protobuf:"bytes,12,rep,name=postTags" json:"postTags,omitempty"`
	Replies                  []*FeedPost    `protobuf:"bytes,13,rep,name=replies" json:"replies,omitempty"`
	MayAddReply              *bool          `protobuf:"varint,14,opt,name=mayAddReply" json:"mayAddReply,omitempty"`
	MayChooseMulitpleReplies *bool          `protobuf:"varint,15,opt,name=mayChooseMulitpleReplies" json:"mayChooseMulitpleReplies,omitempty"`
	SurveyAnswerSequence     *int32         `protobuf:"varint,16,opt,name=surveyAnswerSequence" json:"surveyAnswerSequence,omitempty"`
	AreMoreReplies           *bool          `protobuf:"varint,17,opt,name=areMoreReplies" json:"areMoreReplies,omitempty"`
	TotalReplyCount          *int32         `protobuf:"varint,18,opt,name=totalReplyCount" json:"totalReplyCount,omitempty"`
	XXX_unrecognized         []byte         `json:"-"`
}

func (m *FeedPost) Reset()                    { *m = FeedPost{} }
func (m *FeedPost) String() string            { return proto.CompactTextString(m) }
func (*FeedPost) ProtoMessage()               {}
func (*FeedPost) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{0} }

const Default_FeedPost_AnonymousPost bool = false

func (m *FeedPost) GetPostID() string {
	if m != nil && m.PostID != nil {
		return *m.PostID
	}
	return ""
}

func (m *FeedPost) GetParentID() string {
	if m != nil && m.ParentID != nil {
		return *m.ParentID
	}
	return ""
}

func (m *FeedPost) GetPostType() FeedPostType {
	if m != nil && m.PostType != nil {
		return *m.PostType
	}
	return FeedPostType_FPUnknown
}

func (m *FeedPost) GetPostScope() FeedPostScope {
	if m != nil && m.PostScope != nil {
		return *m.PostScope
	}
	return FeedPostScope_FPScopeUnknown
}

func (m *FeedPost) GetUserID() string {
	if m != nil && m.UserID != nil {
		return *m.UserID
	}
	return ""
}

func (m *FeedPost) GetAnonymousPost() bool {
	if m != nil && m.AnonymousPost != nil {
		return *m.AnonymousPost
	}
	return Default_FeedPost_AnonymousPost
}

func (m *FeedPost) GetTimestamp() *Timestamp {
	if m != nil {
		return m.Timestamp
	}
	return nil
}

func (m *FeedPost) GetTimespanActive() *Timespan {
	if m != nil {
		return m.TimespanActive
	}
	return nil
}

func (m *FeedPost) GetHeadlineText() string {
	if m != nil && m.HeadlineText != nil {
		return *m.HeadlineText
	}
	return ""
}

func (m *FeedPost) GetBodyText() string {
	if m != nil && m.BodyText != nil {
		return *m.BodyText
	}
	return ""
}

func (m *FeedPost) GetPostTags() []*EntityTag {
	if m != nil {
		return m.PostTags
	}
	return nil
}

func (m *FeedPost) GetReplies() []*FeedPost {
	if m != nil {
		return m.Replies
	}
	return nil
}

func (m *FeedPost) GetMayAddReply() bool {
	if m != nil && m.MayAddReply != nil {
		return *m.MayAddReply
	}
	return false
}

func (m *FeedPost) GetMayChooseMulitpleReplies() bool {
	if m != nil && m.MayChooseMulitpleReplies != nil {
		return *m.MayChooseMulitpleReplies
	}
	return false
}

func (m *FeedPost) GetSurveyAnswerSequence() int32 {
	if m != nil && m.SurveyAnswerSequence != nil {
		return *m.SurveyAnswerSequence
	}
	return 0
}

func (m *FeedPost) GetAreMoreReplies() bool {
	if m != nil && m.AreMoreReplies != nil {
		return *m.AreMoreReplies
	}
	return false
}

func (m *FeedPost) GetTotalReplyCount() int32 {
	if m != nil && m.TotalReplyCount != nil {
		return *m.TotalReplyCount
	}
	return 0
}

type FeedPostUpdateRequest struct {
	UpdateVerb       *UpdateVerb `protobuf:"varint,1,opt,name=updateVerb,enum=BlitzMessage.UpdateVerb" json:"updateVerb,omitempty"`
	FeedPost         *FeedPost   `protobuf:"bytes,2,opt,name=feedPost" json:"feedPost,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *FeedPostUpdateRequest) Reset()                    { *m = FeedPostUpdateRequest{} }
func (m *FeedPostUpdateRequest) String() string            { return proto.CompactTextString(m) }
func (*FeedPostUpdateRequest) ProtoMessage()               {}
func (*FeedPostUpdateRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{1} }

func (m *FeedPostUpdateRequest) GetUpdateVerb() UpdateVerb {
	if m != nil && m.UpdateVerb != nil {
		return *m.UpdateVerb
	}
	return UpdateVerb_UVCreate
}

func (m *FeedPostUpdateRequest) GetFeedPost() *FeedPost {
	if m != nil {
		return m.FeedPost
	}
	return nil
}

type FeedPostUpdateResponse struct {
	FeedPost         *FeedPost `protobuf:"bytes,1,opt,name=feedPost" json:"feedPost,omitempty"`
	XXX_unrecognized []byte    `json:"-"`
}

func (m *FeedPostUpdateResponse) Reset()                    { *m = FeedPostUpdateResponse{} }
func (m *FeedPostUpdateResponse) String() string            { return proto.CompactTextString(m) }
func (*FeedPostUpdateResponse) ProtoMessage()               {}
func (*FeedPostUpdateResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{2} }

func (m *FeedPostUpdateResponse) GetFeedPost() *FeedPost {
	if m != nil {
		return m.FeedPost
	}
	return nil
}

type FeedPostFetchRequest struct {
	Timespan         *Timespan      `protobuf:"bytes,1,opt,name=timespan" json:"timespan,omitempty"`
	FeedScope        *FeedPostScope `protobuf:"varint,2,opt,name=feedScope,enum=BlitzMessage.FeedPostScope" json:"feedScope,omitempty"`
	ParentID         *string        `protobuf:"bytes,3,opt,name=parentID" json:"parentID,omitempty"`
	XXX_unrecognized []byte         `json:"-"`
}

func (m *FeedPostFetchRequest) Reset()                    { *m = FeedPostFetchRequest{} }
func (m *FeedPostFetchRequest) String() string            { return proto.CompactTextString(m) }
func (*FeedPostFetchRequest) ProtoMessage()               {}
func (*FeedPostFetchRequest) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{3} }

func (m *FeedPostFetchRequest) GetTimespan() *Timespan {
	if m != nil {
		return m.Timespan
	}
	return nil
}

func (m *FeedPostFetchRequest) GetFeedScope() FeedPostScope {
	if m != nil && m.FeedScope != nil {
		return *m.FeedScope
	}
	return FeedPostScope_FPScopeUnknown
}

func (m *FeedPostFetchRequest) GetParentID() string {
	if m != nil && m.ParentID != nil {
		return *m.ParentID
	}
	return ""
}

type FeedPostFetchResponse struct {
	FeedPosts        []*FeedPost `protobuf:"bytes,1,rep,name=feedPosts" json:"feedPosts,omitempty"`
	XXX_unrecognized []byte      `json:"-"`
}

func (m *FeedPostFetchResponse) Reset()                    { *m = FeedPostFetchResponse{} }
func (m *FeedPostFetchResponse) String() string            { return proto.CompactTextString(m) }
func (*FeedPostFetchResponse) ProtoMessage()               {}
func (*FeedPostFetchResponse) Descriptor() ([]byte, []int) { return fileDescriptor2, []int{4} }

func (m *FeedPostFetchResponse) GetFeedPosts() []*FeedPost {
	if m != nil {
		return m.FeedPosts
	}
	return nil
}

func init() {
	proto.RegisterType((*FeedPost)(nil), "BlitzMessage.FeedPost")
	proto.RegisterType((*FeedPostUpdateRequest)(nil), "BlitzMessage.FeedPostUpdateRequest")
	proto.RegisterType((*FeedPostUpdateResponse)(nil), "BlitzMessage.FeedPostUpdateResponse")
	proto.RegisterType((*FeedPostFetchRequest)(nil), "BlitzMessage.FeedPostFetchRequest")
	proto.RegisterType((*FeedPostFetchResponse)(nil), "BlitzMessage.FeedPostFetchResponse")
	proto.RegisterEnum("BlitzMessage.FeedPostType", FeedPostType_name, FeedPostType_value)
	proto.RegisterEnum("BlitzMessage.FeedPostScope", FeedPostScope_name, FeedPostScope_value)
	proto.RegisterEnum("BlitzMessage.FeedPostStatus", FeedPostStatus_name, FeedPostStatus_value)
	proto.RegisterEnum("BlitzMessage.UpdateVerb", UpdateVerb_name, UpdateVerb_value)
}

var fileDescriptor2 = []byte{
	// 688 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x53, 0xcd, 0x52, 0xe3, 0x46,
	0x10, 0x46, 0x36, 0x3f, 0x76, 0x63, 0x1b, 0x65, 0x00, 0x33, 0x65, 0x38, 0x50, 0x5c, 0x02, 0x2e,
	0xe2, 0x54, 0x71, 0xc8, 0x21, 0x07, 0x52, 0x18, 0x70, 0x2a, 0x55, 0x21, 0x61, 0xb1, 0xcd, 0x5d,
	0x96, 0x1a, 0xac, 0x45, 0x9e, 0xd1, 0x6a, 0x46, 0xb0, 0xde, 0xe3, 0x9e, 0xf6, 0x09, 0xf6, 0xc1,
	0x78, 0xa2, 0xed, 0x19, 0x59, 0xc6, 0x66, 0xbd, 0xec, 0x49, 0x9a, 0xaf, 0xbf, 0xfe, 0xfa, 0x1f,
	0xa0, 0x83, 0x18, 0xb4, 0xe2, 0x44, 0x6a, 0xc9, 0x2a, 0xed, 0x28, 0xd4, 0x9f, 0xae, 0x50, 0x29,
	0xef, 0x1e, 0x1b, 0xbb, 0x72, 0xf0, 0x1e, 0x7d, 0x1d, 0x3e, 0xa2, 0xff, 0x5b, 0x80, 0xca, 0x4f,
	0xc2, 0x58, 0xcb, 0x24, 0xa3, 0x36, 0xd6, 0x7b, 0xe3, 0x18, 0xd5, 0xe4, 0xe1, 0x5e, 0x0a, 0x1d,
	0xea, 0x71, 0xcf, 0xbb, 0x9f, 0x20, 0x07, 0x5f, 0x97, 0xa1, 0x64, 0x84, 0xaf, 0xa5, 0xd2, 0xac,
	0x06, 0xab, 0x31, 0x7d, 0xff, 0xb9, 0xe0, 0xce, 0xbe, 0x73, 0x58, 0x66, 0x2e, 0x94, 0x62, 0x2f,
	0x41, 0x61, 0x90, 0x82, 0x45, 0x8e, 0x09, 0x21, 0x86, 0xd1, 0xe4, 0x45, 0x42, 0x6a, 0x27, 0x8d,
	0xd6, 0x6c, 0x2e, 0xad, 0x5c, 0xcb, 0x30, 0x58, 0x0b, 0xca, 0x86, 0xdd, 0xf5, 0x25, 0xd1, 0x97,
	0x2d, 0x7d, 0x77, 0x31, 0xdd, 0x52, 0x4c, 0xfc, 0x54, 0x61, 0x42, 0xd1, 0x56, 0x6c, 0xb4, 0x3d,
	0xa8, 0x7a, 0x42, 0x8a, 0xf1, 0x48, 0xa6, 0xca, 0xb0, 0xf8, 0x2a, 0xc1, 0xa5, 0x3f, 0x57, 0xee,
	0xbc, 0x48, 0x21, 0x6b, 0x42, 0x59, 0x87, 0x23, 0x54, 0xda, 0x1b, 0xc5, 0x7c, 0x8d, 0x2c, 0xeb,
	0x27, 0x3b, 0xf3, 0xea, 0xbd, 0xdc, 0x4c, 0x99, 0xd4, 0x2c, 0x37, 0xf6, 0xc4, 0x99, 0xed, 0x14,
	0x2f, 0x59, 0x87, 0xfa, 0x02, 0x07, 0xe2, 0xb0, 0x2d, 0xa8, 0x0c, 0xd1, 0x0b, 0xa2, 0x50, 0x60,
	0x0f, 0x3f, 0x6a, 0x5e, 0xce, 0xfb, 0x31, 0x90, 0xc1, 0xd8, 0x22, 0x60, 0x91, 0xa3, 0x49, 0x3f,
	0xa8, 0xa1, 0xbc, 0xb2, 0x5f, 0xfc, 0x3e, 0x85, 0x69, 0xc3, 0xd9, 0xaf, 0xb0, 0x96, 0x60, 0x1c,
	0x85, 0xa8, 0x78, 0xd5, 0x32, 0xeb, 0x8b, 0x5b, 0xc1, 0x36, 0x61, 0x7d, 0xe4, 0x8d, 0xcf, 0x82,
	0xe0, 0x86, 0xe8, 0x63, 0x5e, 0x33, 0x35, 0xb3, 0x7d, 0xe0, 0x04, 0x9e, 0x0f, 0xa5, 0x54, 0x78,
	0x95, 0x92, 0x5f, 0x1c, 0xe1, 0xcd, 0x44, 0x6e, 0xc3, 0x32, 0xf6, 0x60, 0x4b, 0xa5, 0xc9, 0x23,
	0x8e, 0xcf, 0x84, 0x7a, 0xc2, 0xa4, 0x8b, 0x1f, 0x52, 0x14, 0x3e, 0x72, 0x97, 0xac, 0x2b, 0xac,
	0x0e, 0x35, 0x9a, 0xe4, 0x95, 0x4c, 0xa6, 0x5e, 0xbf, 0x58, 0xaf, 0x1d, 0xd8, 0xd0, 0x52, 0x7b,
	0x91, 0x8d, 0x75, 0x2e, 0x53, 0xa1, 0x39, 0x33, 0x0e, 0x07, 0x12, 0xb6, 0xf3, 0x8c, 0xfa, 0x71,
	0xe0, 0x69, 0xf2, 0x23, 0x41, 0x4a, 0xef, 0x18, 0x20, 0xb5, 0xc0, 0x2d, 0x26, 0x03, 0xbb, 0x28,
	0xb5, 0x13, 0x3e, 0x5f, 0x4a, 0x7f, 0x6a, 0x67, 0x87, 0x50, 0xba, 0x9b, 0xc8, 0xd8, 0x15, 0xfa,
	0x61, 0xd9, 0x07, 0x6d, 0xa8, 0xbf, 0x0e, 0xa8, 0x62, 0x29, 0x68, 0xd0, 0xb3, 0x1a, 0xce, 0x9b,
	0x1a, 0x9f, 0x1d, 0xd8, 0xca, 0x1f, 0x1d, 0xd4, 0xfe, 0x30, 0x4f, 0x9a, 0x24, 0xf2, 0xf9, 0x2f,
	0x96, 0x98, 0x4e, 0x9e, 0x76, 0xd6, 0x04, 0xcb, 0x76, 0xb6, 0xf0, 0xf3, 0x9d, 0x9d, 0xbd, 0x11,
	0x73, 0x11, 0x65, 0x2a, 0x64, 0xfb, 0x55, 0x0e, 0x93, 0x3a, 0x8e, 0x32, 0x69, 0x63, 0x50, 0x94,
	0xc5, 0x1b, 0x3b, 0xd0, 0x7c, 0x84, 0xca, 0xdc, 0x25, 0x55, 0xa1, 0xdc, 0xb9, 0xee, 0x8b, 0x07,
	0x21, 0x9f, 0x84, 0xbb, 0x44, 0x53, 0xdb, 0xec, 0x5c, 0xff, 0x1f, 0xa3, 0xb8, 0x14, 0x01, 0x06,
	0xef, 0x4c, 0x89, 0xa1, 0x14, 0xae, 0x43, 0x7b, 0xeb, 0xce, 0x18, 0xec, 0x50, 0xdd, 0x42, 0x86,
	0x76, 0xed, 0x72, 0x4c, 0xb9, 0x45, 0xc6, 0xa0, 0x96, 0xa3, 0xd9, 0xca, 0xb8, 0xcb, 0xcd, 0x5b,
	0xa8, 0xce, 0x97, 0x97, 0x91, 0xcc, 0xef, 0xab, 0xe8, 0x16, 0xfb, 0x57, 0xfa, 0x5e, 0xf4, 0x1f,
	0xea, 0x27, 0x99, 0x3c, 0x50, 0x74, 0x4e, 0xdd, 0xcf, 0x0c, 0x7f, 0x47, 0x72, 0xf0, 0x62, 0x29,
	0x34, 0xff, 0x22, 0x99, 0x5c, 0x57, 0x7b, 0x3a, 0x55, 0x74, 0xeb, 0x40, 0xdc, 0x17, 0x51, 0x5b,
	0x61, 0x37, 0x3b, 0x4e, 0x92, 0xca, 0xcc, 0x17, 0x18, 0xa1, 0xc6, 0x80, 0x04, 0xfe, 0x00, 0x98,
	0xd9, 0xaa, 0x0a, 0x94, 0xfa, 0xb7, 0xe7, 0x09, 0xd2, 0x9b, 0xb8, 0xf6, 0x95, 0x59, 0xa9, 0x58,
	0xfb, 0xca, 0x1c, 0xdd, 0x62, 0xfb, 0xf7, 0xe7, 0xd3, 0x02, 0x2c, 0x3d, 0x9f, 0x16, 0x99, 0xd3,
	0xa6, 0x5f, 0xee, 0x40, 0xc3, 0x97, 0xa3, 0xd6, 0xc0, 0x74, 0x7d, 0x88, 0x09, 0xce, 0xf5, 0xff,
	0x8b, 0xe3, 0x7c, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x13, 0x2f, 0xcb, 0x9c, 0x67, 0x05, 0x00, 0x00,
}
